{"id":"d4aecf29c8e002355e7ded215735822a","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/HelixStakedICP.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.22;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract HelixStakedICP is ERC20, ERC20Burnable, AccessControl, ERC20Permit {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(address defaultAdmin, address minter)\n        ERC20(\"Helix Staked ICP\", \"hstICP\")\n        ERC20Permit(\"Helix Staked ICP\")\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(MINTER_ROLE, minter);\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1425],"ERC165":[3973],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1426,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3974,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1425,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3973,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,3973,3985,378,1425],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3972],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3972,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[403]},"id":404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":403,"linearizedBaseContracts":[403],"name":"IERC5267","nameLocation":"143:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"158:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":383,"name":"EIP712DomainChanged","nameLocation":"253:19:2","nodeType":"EventDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"272:2:2"},"src":"247:28:2"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"281:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:2","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"447:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"fields","nameLocation":"517:6:2","nodeType":"VariableDeclaration","scope":402,"src":"510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":386,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"name","nameLocation":"551:4:2","nodeType":"VariableDeclaration","scope":402,"src":"537:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":388,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"version","nameLocation":"583:7:2","nodeType":"VariableDeclaration","scope":402,"src":"569:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":390,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"chainId","nameLocation":"612:7:2","nodeType":"VariableDeclaration","scope":402,"src":"604:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:2","nodeType":"VariableDeclaration","scope":402,"src":"633:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"salt","nameLocation":"680:4:2","nodeType":"VariableDeclaration","scope":402,"src":"672:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"extensions","nameLocation":"715:10:2","nodeType":"VariableDeclaration","scope":402,"src":"698:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ArrayTypeName","src":"698:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:2"},"scope":403,"src":"426:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":404,"src":"133:605:2","usedErrors":[],"usedEvents":[383]}],"src":"107:632:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[540],"IERC20Errors":[445],"IERC721Errors":[493]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":445,"linearizedBaseContracts":[445],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":415,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":415,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":415,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":415,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":420,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":420,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":425,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":425,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":434,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":434,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":434,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":434,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":439,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":439,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":444,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":444,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":541,"src":"280:1764:3","usedErrors":[415,420,425,434,439,444],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":493,"linearizedBaseContracts":[493],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":451,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":451,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":456,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":456,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":465,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":465,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":465,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":465,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":470,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":470,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":475,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":475,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":482,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":482,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":482,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":487,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":487,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":492,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":492,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":541,"src":"2190:2092:3","usedErrors":[451,456,465,470,475,482,487,492],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":540,"linearizedBaseContracts":[540],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":505,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":505,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":505,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":505,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":505,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":510,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":510,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":515,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":515,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":522,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":522,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":522,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":527,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":527,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":532,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":532,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":539,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":539,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":539,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":541,"src":"4430:2107:3","usedErrors":[505,510,515,522,527,532,539],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1425],"ERC20":[1055],"IERC20":[1133],"IERC20Errors":[445],"IERC20Metadata":[1359]},"id":1056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":1134,"src":"131:36:4","symbolAliases":[{"foreign":{"id":543,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":1360,"src":"168:63:4","symbolAliases":[{"foreign":{"id":545,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":1426,"src":"232:48:4","symbolAliases":[{"foreign":{"id":547,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":541,"src":"281:65:4","symbolAliases":[{"foreign":{"id":549,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":552,"name":"Context","nameLocations":["1133:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1425,"src":"1133:7:4"},"id":553,"nodeType":"InheritanceSpecifier","src":"1133:7:4"},{"baseName":{"id":554,"name":"IERC20","nameLocations":["1142:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"1142:6:4"},"id":555,"nodeType":"InheritanceSpecifier","src":"1142:6:4"},{"baseName":{"id":556,"name":"IERC20Metadata","nameLocations":["1150:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1359,"src":"1150:14:4"},"id":557,"nodeType":"InheritanceSpecifier","src":"1150:14:4"},{"baseName":{"id":558,"name":"IERC20Errors","nameLocations":["1166:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":445,"src":"1166:12:4"},"id":559,"nodeType":"InheritanceSpecifier","src":"1166:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"348:757:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1055,"linearizedBaseContracts":[1055,445,1359,1133,1425],"name":"ERC20","nameLocation":"1124:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":563,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:4","nodeType":"VariableDeclaration","scope":1055,"src":"1185:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":562,"keyName":"account","keyNameLocation":"1201:7:4","keyType":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":569,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:4","nodeType":"VariableDeclaration","scope":1055,"src":"1245:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":568,"keyName":"account","keyNameLocation":"1261:7:4","keyType":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":567,"keyName":"spender","keyNameLocation":"1288:7:4","keyType":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":571,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:4","nodeType":"VariableDeclaration","scope":1055,"src":"1335:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":573,"mutability":"mutable","name":"_name","nameLocation":"1385:5:4","nodeType":"VariableDeclaration","scope":1055,"src":"1370:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":572,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":575,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:4","nodeType":"VariableDeclaration","scope":1055,"src":"1396:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":574,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":591,"nodeType":"Block","src":"1638:57:4","statements":[{"expression":{"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":583,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":584,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"1656:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":586,"nodeType":"ExpressionStatement","src":"1648:13:4"},{"expression":{"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":587,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1671:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":588,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"1681:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":590,"nodeType":"ExpressionStatement","src":"1671:17:4"}]},"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"1425:152:4","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":592,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"name_","nameLocation":"1608:5:4","nodeType":"VariableDeclaration","scope":592,"src":"1594:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":577,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:4","nodeType":"VariableDeclaration","scope":592,"src":"1615:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":579,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:4"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1638:0:4"},"scope":1055,"src":"1582:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1346],"body":{"id":600,"nodeType":"Block","src":"1820:29:4","statements":[{"expression":{"id":598,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1837:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":597,"id":599,"nodeType":"Return","src":"1830:12:4"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"1701:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:4","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"1773:2:4"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"1805:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":595,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:4"},"scope":1055,"src":"1760:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1352],"body":{"id":609,"nodeType":"Block","src":"2024:31:4","statements":[{"expression":{"id":607,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2041:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":606,"id":608,"nodeType":"Return","src":"2034:14:4"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"1855:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":610,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:4","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"1977:2:4"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"2009:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":604,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:4"},"scope":1055,"src":"1962:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1358],"body":{"id":618,"nodeType":"Block","src":"2744:26:4","statements":[{"expression":{"hexValue":"3138","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":615,"id":617,"nodeType":"Return","src":"2754:9:4"}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"2061:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:4","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"2705:2:4"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":619,"src":"2737:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":613,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:4"},"scope":1055,"src":"2688:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1082],"body":{"id":627,"nodeType":"Block","src":"2891:36:4","statements":[{"expression":{"id":625,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2908:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":624,"id":626,"nodeType":"Return","src":"2901:19:4"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2776:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":628,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:4","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"2850:2:4"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":628,"src":"2882:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:4"},"scope":1055,"src":"2830:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1090],"body":{"id":640,"nodeType":"Block","src":"3059:42:4","statements":[{"expression":{"baseExpression":{"id":636,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3076:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":638,"indexExpression":{"id":637,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3086:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":635,"id":639,"nodeType":"Return","src":"3069:25:4"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"2933:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:4","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"account","nameLocation":"3012:7:4","nodeType":"VariableDeclaration","scope":641,"src":"3004:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"3050:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:4"},"scope":1055,"src":"2985:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1100],"body":{"id":664,"nodeType":"Block","src":"3371:103:4","statements":[{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"owner","nameLocation":"3389:5:4","nodeType":"VariableDeclaration","scope":664,"src":"3381:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":655,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":653,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"3397:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:4"},{"expression":{"arguments":[{"id":657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"3429:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3436:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3440:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"3419:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"3419:27:4"},{"expression":{"hexValue":"74727565","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":650,"id":663,"nodeType":"Return","src":"3456:11:4"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"3107:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:4","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"to","nameLocation":"3322:2:4","nodeType":"VariableDeclaration","scope":665,"src":"3314:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"value","nameLocation":"3334:5:4","nodeType":"VariableDeclaration","scope":665,"src":"3326:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:4"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"3365:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:4"},"scope":1055,"src":"3296:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1110],"body":{"id":681,"nodeType":"Block","src":"3621:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":675,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3638:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":677,"indexExpression":{"id":676,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3650:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":679,"indexExpression":{"id":678,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3657:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":674,"id":680,"nodeType":"Return","src":"3631:34:4"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"3480:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":682,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:4","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"3559:5:4","nodeType":"VariableDeclaration","scope":682,"src":"3551:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"spender","nameLocation":"3574:7:4","nodeType":"VariableDeclaration","scope":682,"src":"3566:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:4"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"3612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:4"},"scope":1055,"src":"3532:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1120],"body":{"id":705,"nodeType":"Block","src":"4058:107:4","statements":[{"assignments":[693],"declarations":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"4076:5:4","nodeType":"VariableDeclaration","scope":705,"src":"4068:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":696,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":694,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4084:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:4"},{"expression":{"arguments":[{"id":698,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4115:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4122:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4131:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":946,"src":"4106:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"4106:31:4"},{"expression":{"hexValue":"74727565","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":691,"id":704,"nodeType":"Return","src":"4147:11:4"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"3678:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:4","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"spender","nameLocation":"4004:7:4","nodeType":"VariableDeclaration","scope":706,"src":"3996:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"value","nameLocation":"4021:5:4","nodeType":"VariableDeclaration","scope":706,"src":"4013:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:4"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"4052:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:4"},"scope":1055,"src":"3979:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1132],"body":{"id":737,"nodeType":"Block","src":"4850:151:4","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"spender","nameLocation":"4868:7:4","nodeType":"VariableDeclaration","scope":737,"src":"4860:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4878:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:4"},{"expression":{"arguments":[{"id":724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4916:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4922:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4931:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":723,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"4900:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"4900:37:4"},{"expression":{"arguments":[{"id":730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4957:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4963:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4967:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4947:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"4947:26:4"},{"expression":{"hexValue":"74727565","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":717,"id":736,"nodeType":"Return","src":"4983:11:4"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"4171:581:4","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":738,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"from","nameLocation":"4787:4:4","nodeType":"VariableDeclaration","scope":738,"src":"4779:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"to","nameLocation":"4801:2:4","nodeType":"VariableDeclaration","scope":738,"src":"4793:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"value","nameLocation":"4813:5:4","nodeType":"VariableDeclaration","scope":738,"src":"4805:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"4844:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":715,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:4"},"scope":1055,"src":"4757:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":784,"nodeType":"Block","src":"5443:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5457:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:4","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"5453:86:4","trueBody":{"id":761,"nodeType":"Block","src":"5477:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:4","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"5498:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"RevertStatement","src":"5491:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5552:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:4","typeDescriptions":{}}},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":777,"nodeType":"IfStatement","src":"5548:86:4","trueBody":{"id":776,"nodeType":"Block","src":"5570:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:4","typeDescriptions":{}}},"id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":769,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5591:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"RevertStatement","src":"5584:39:4"}]}},{"expression":{"arguments":[{"id":779,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5651:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5657:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5661:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5643:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"5643:24:4"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"5007:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:4","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"from","nameLocation":"5401:4:4","nodeType":"VariableDeclaration","scope":785,"src":"5393:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"to","nameLocation":"5415:2:4","nodeType":"VariableDeclaration","scope":785,"src":"5407:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"value","nameLocation":"5427:5:4","nodeType":"VariableDeclaration","scope":785,"src":"5419:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:4"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"5443:0:4"},"scope":1055,"src":"5374:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"6064:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6078:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:4","typeDescriptions":{}}},"id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":832,"nodeType":"Block","src":"6252:362:4","statements":[{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:4","nodeType":"VariableDeclaration","scope":832,"src":"6266:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":811,"initialValue":{"baseExpression":{"id":808,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6288:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":810,"indexExpression":{"id":809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6298:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6321:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6335:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":822,"nodeType":"IfStatement","src":"6317:115:4","trueBody":{"id":821,"nodeType":"Block","src":"6342:90:4","statements":[{"errorCall":{"arguments":[{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6392:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6398:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6411:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6367:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"RevertStatement","src":"6360:57:4"}]}},{"id":831,"nodeType":"UncheckedBlock","src":"6445:159:4","statements":[{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":823,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6552:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":825,"indexExpression":{"id":824,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6562:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6570:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6584:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":830,"nodeType":"ExpressionStatement","src":"6552:37:4"}]}]},"id":833,"nodeType":"IfStatement","src":"6074:540:4","trueBody":{"id":805,"nodeType":"Block","src":"6098:148:4","statements":[{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":801,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6214:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6230:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"6214:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6628:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:4","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":853,"nodeType":"Block","src":"6843:206:4","statements":[{"id":852,"nodeType":"UncheckedBlock","src":"6857:182:4","statements":[{"expression":{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":846,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"7002:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7012:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7019:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":851,"nodeType":"ExpressionStatement","src":"7002:22:4"}]}]},"id":854,"nodeType":"IfStatement","src":"6624:425:4","trueBody":{"id":845,"nodeType":"Block","src":"6646:191:4","statements":[{"id":844,"nodeType":"UncheckedBlock","src":"6660:167:4","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6791:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6807:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"6791:21:4"}]}]}},{"eventCall":{"arguments":[{"id":856,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7073:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7079:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7083:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7064:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"EmitStatement","src":"7059:30:4"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"5680:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:4","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"from","nameLocation":"6014:4:4","nodeType":"VariableDeclaration","scope":862,"src":"6006:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"to","nameLocation":"6028:2:4","nodeType":"VariableDeclaration","scope":862,"src":"6020:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"value","nameLocation":"6040:5:4","nodeType":"VariableDeclaration","scope":862,"src":"6032:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:4"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"6064:0:4"},"scope":1055,"src":"5989:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"7495:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7509:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:4","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":884,"nodeType":"IfStatement","src":"7505:91:4","trueBody":{"id":883,"nodeType":"Block","src":"7532:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:4","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":876,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"7553:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"RevertStatement","src":"7546:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:4","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7625:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"7634:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":885,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"7605:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"7605:35:4"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"7102:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:4","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"account","nameLocation":"7462:7:4","nodeType":"VariableDeclaration","scope":895,"src":"7454:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"value","nameLocation":"7479:5:4","nodeType":"VariableDeclaration","scope":895,"src":"7471:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:4"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"7495:0:4"},"scope":1055,"src":"7439:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"8021:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8035:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:4","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"8031:89:4","trueBody":{"id":916,"nodeType":"Block","src":"8058:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:4","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"8079:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"RevertStatement","src":"8072:37:4"}]}},{"expression":{"arguments":[{"id":919,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8137:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:4","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"8158:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":918,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8129:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"8129:35:4"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"7653:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":928,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:4","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"account","nameLocation":"7988:7:4","nodeType":"VariableDeclaration","scope":928,"src":"7980:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"value","nameLocation":"8005:5:4","nodeType":"VariableDeclaration","scope":928,"src":"7997:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:4"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"8021:0:4"},"scope":1055,"src":"7965:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"8781:54:4","statements":[{"expression":{"arguments":[{"id":939,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8800:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"8807:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"8816:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":938,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":1006,"src":"8791:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"8791:37:4"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"8177:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:4","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"owner","nameLocation":"8733:5:4","nodeType":"VariableDeclaration","scope":946,"src":"8725:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"spender","nameLocation":"8748:7:4","nodeType":"VariableDeclaration","scope":946,"src":"8740:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"8765:5:4","nodeType":"VariableDeclaration","scope":946,"src":"8757:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:4"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"8781:0:4"},"scope":1055,"src":"8707:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"9780:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9794:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:4","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":972,"nodeType":"IfStatement","src":"9790:89:4","trueBody":{"id":971,"nodeType":"Block","src":"9815:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:4","typeDescriptions":{}}},"id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":964,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"9836:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"RevertStatement","src":"9829:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"9892:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:4","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":987,"nodeType":"IfStatement","src":"9888:90:4","trueBody":{"id":986,"nodeType":"Block","src":"9915:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:4","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"9936:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"RevertStatement","src":"9929:38:4"}]}},{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":988,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"9987:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":991,"indexExpression":{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9999:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":992,"indexExpression":{"id":990,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10006:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10017:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ExpressionStatement","src":"9987:35:4"},{"condition":{"id":996,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10036:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"10032:76:4","trueBody":{"id":1003,"nodeType":"Block","src":"10047:61:4","statements":[{"eventCall":{"arguments":[{"id":998,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10075:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10082:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10091:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"10066:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"EmitStatement","src":"10061:36:4"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"8841:836:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:4","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"owner","nameLocation":"9708:5:4","nodeType":"VariableDeclaration","scope":1006,"src":"9700:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"spender","nameLocation":"9723:7:4","nodeType":"VariableDeclaration","scope":1006,"src":"9715:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"value","nameLocation":"9740:5:4","nodeType":"VariableDeclaration","scope":1006,"src":"9732:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:4","nodeType":"VariableDeclaration","scope":1006,"src":"9747:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":954,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:4"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"9780:0:4"},"scope":1055,"src":"9682:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"10485:387:4","statements":[{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:4","nodeType":"VariableDeclaration","scope":1053,"src":"10495:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10532:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10539:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1018,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"10522:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10561:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:4","memberName":"max","nodeType":"MemberAccess","src":"10580:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"10557:309:4","trueBody":{"id":1051,"nodeType":"Block","src":"10599:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10617:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10636:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1040,"nodeType":"IfStatement","src":"10613:130:4","trueBody":{"id":1039,"nodeType":"Block","src":"10643:100:4","statements":[{"errorCall":{"arguments":[{"id":1034,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10695:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1035,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10704:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10722:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"10668:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"RevertStatement","src":"10661:67:4"}]}},{"id":1050,"nodeType":"UncheckedBlock","src":"10756:100:4","statements":[{"expression":{"arguments":[{"id":1042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10793:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10800:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10809:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10828:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1041,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":1006,"src":"10784:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"10784:57:4"}]}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"10120:271:4","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:4","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"owner","nameLocation":"10429:5:4","nodeType":"VariableDeclaration","scope":1054,"src":"10421:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"spender","nameLocation":"10444:7:4","nodeType":"VariableDeclaration","scope":1054,"src":"10436:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"value","nameLocation":"10461:5:4","nodeType":"VariableDeclaration","scope":1054,"src":"10453:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:4"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"10485:0:4"},"scope":1055,"src":"10396:476:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1056,"src":"1106:9768:4","usedErrors":[415,420,425,434,439,444],"usedEvents":[1067,1076]}],"src":"105:10770:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1133]},"id":1134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1057,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"132:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1133,"linearizedBaseContracts":[1133],"name":"IERC20","nameLocation":"214:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"227:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1067,"name":"Transfer","nameLocation":"396:8:5","nodeType":"EventDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:5","nodeType":"VariableDeclaration","scope":1067,"src":"405:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:5","nodeType":"VariableDeclaration","scope":1067,"src":"427:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:5","nodeType":"VariableDeclaration","scope":1067,"src":"447:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:5"},"src":"390:72:5"},{"anonymous":false,"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"468:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1076,"name":"Approval","nameLocation":"627:8:5","nodeType":"EventDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:5","nodeType":"VariableDeclaration","scope":1076,"src":"636:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:5","nodeType":"VariableDeclaration","scope":1076,"src":"659:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:5","nodeType":"VariableDeclaration","scope":1076,"src":"684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:5"},"src":"621:78:5"},{"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"705:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1082,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:5","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"795:2:5"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"821:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:5"},"scope":1133,"src":"775:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"836:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1090,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":1090,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":1133,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"986:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1100,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:5","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"1230:2:5","nodeType":"VariableDeclaration","scope":1100,"src":"1222:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"value","nameLocation":"1242:5:5","nodeType":"VariableDeclaration","scope":1100,"src":"1234:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:5"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"1267:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1097,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:5"},"scope":1133,"src":"1204:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"1279:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:5","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"owner","nameLocation":"1575:5:5","nodeType":"VariableDeclaration","scope":1110,"src":"1567:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"spender","nameLocation":"1590:7:5","nodeType":"VariableDeclaration","scope":1110,"src":"1582:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:5"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"1622:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:5"},"scope":1133,"src":"1548:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1637:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1120,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:5","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"spender","nameLocation":"2334:7:5","nodeType":"VariableDeclaration","scope":1120,"src":"2326:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"value","nameLocation":"2351:5:5","nodeType":"VariableDeclaration","scope":1120,"src":"2343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:5"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"2376:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1117,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:5"},"scope":1133,"src":"2309:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2388:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1132,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:5","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"from","nameLocation":"2720:4:5","nodeType":"VariableDeclaration","scope":1132,"src":"2712:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"2734:2:5","nodeType":"VariableDeclaration","scope":1132,"src":"2726:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"value","nameLocation":"2746:5:5","nodeType":"VariableDeclaration","scope":1132,"src":"2738:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"2771:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1129,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:5"},"scope":1133,"src":"2690:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1134,"src":"204:2575:5","usedErrors":[],"usedEvents":[1067,1076]}],"src":"106:2674:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1425],"ERC20":[1055],"ERC20Burnable":[1179]},"id":1180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1135,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1180,"sourceUnit":1056,"src":"150:35:6","symbolAliases":[{"foreign":{"id":1136,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"158:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1180,"sourceUnit":1426,"src":"186:51:6","symbolAliases":[{"foreign":{"id":1138,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"194:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1141,"name":"Context","nameLocations":["483:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1425,"src":"483:7:6"},"id":1142,"nodeType":"InheritanceSpecifier","src":"483:7:6"},{"baseName":{"id":1143,"name":"ERC20","nameLocations":["492:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"492:5:6"},"id":1144,"nodeType":"InheritanceSpecifier","src":"492:5:6"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"239:208:6","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1179,"linearizedBaseContracts":[1179,1055,445,1359,1133,1425],"name":"ERC20Burnable","nameLocation":"466:13:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1156,"nodeType":"Block","src":"662:43:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"678:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"692:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"672:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"672:26:6"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"504:109:6","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:6","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"value","nameLocation":"640:5:6","nodeType":"VariableDeclaration","scope":1157,"src":"632:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:6"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"662:0:6"},"scope":1179,"src":"618:87:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1177,"nodeType":"Block","src":"1086:93:6","statements":[{"expression":{"arguments":[{"id":1166,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1112:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1167,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"1121:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1135:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1165,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"1096:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1171,"nodeType":"ExpressionStatement","src":"1096:45:6"},{"expression":{"arguments":[{"id":1173,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1157:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1166:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"1151:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"1151:21:6"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"711:305:6","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:6","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"account","nameLocation":"1047:7:6","nodeType":"VariableDeclaration","scope":1178,"src":"1039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"value","nameLocation":"1064:5:6","nodeType":"VariableDeclaration","scope":1178,"src":"1056:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:6"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"1086:0:6"},"scope":1179,"src":"1021:158:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1180,"src":"448:733:6","usedErrors":[415,420,425,434,439,444],"usedEvents":[1067,1076]}],"src":"124:1058:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3636],"EIP712":[3863],"ERC20":[1055],"ERC20Permit":[1333],"IERC20Permit":[1395],"Nonces":[1493]},"id":1334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1181,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":1396,"src":"148:48:7","symbolAliases":[{"foreign":{"id":1182,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"156:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":1056,"src":"197:35:7","symbolAliases":[{"foreign":{"id":1184,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"205:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":3637,"src":"233:60:7","symbolAliases":[{"foreign":{"id":1186,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"241:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":3864,"src":"294:62:7","symbolAliases":[{"foreign":{"id":1188,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"302:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":1494,"src":"357:49:7","symbolAliases":[{"foreign":{"id":1190,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"365:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1193,"name":"ERC20","nameLocations":["931:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"931:5:7"},"id":1194,"nodeType":"InheritanceSpecifier","src":"931:5:7"},{"baseName":{"id":1195,"name":"IERC20Permit","nameLocations":["938:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"938:12:7"},"id":1196,"nodeType":"InheritanceSpecifier","src":"938:12:7"},{"baseName":{"id":1197,"name":"EIP712","nameLocations":["952:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"952:6:7"},"id":1198,"nodeType":"InheritanceSpecifier","src":"952:6:7"},{"baseName":{"id":1199,"name":"Nonces","nameLocations":["960:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1493,"src":"960:6:7"},"id":1200,"nodeType":"InheritanceSpecifier","src":"960:6:7"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"408:489:7","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1333,"linearizedBaseContracts":[1333,1493,3863,403,1395,1055,445,1359,1133,1425],"name":"ERC20Permit","nameLocation":"916:11:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1205,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:7","nodeType":"VariableDeclaration","scope":1333,"src":"973:146:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1202,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"1126:52:7","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1210,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:7","nodeType":"ErrorDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:7","nodeType":"VariableDeclaration","scope":1210,"src":"1213:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:7"},"src":"1183:48:7"},{"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"1237:45:7","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1217,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:7","nodeType":"ErrorDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"signer","nameLocation":"1322:6:7","nodeType":"VariableDeclaration","scope":1217,"src":"1314:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"owner","nameLocation":"1338:5:7","nodeType":"VariableDeclaration","scope":1217,"src":"1330:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:7"},"src":"1287:58:7"},{"body":{"id":1227,"nodeType":"Block","src":"1627:2:7","statements":[]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"1351:221:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1228,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1223,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1616:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1225,"kind":"baseConstructorSpecifier","modifierName":{"id":1222,"name":"EIP712","nameLocations":["1609:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"1609:6:7"},"nodeType":"ModifierInvocation","src":"1609:17:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"name","nameLocation":"1603:4:7","nodeType":"VariableDeclaration","scope":1228,"src":"1589:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:7"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"1627:0:7"},"scope":1333,"src":"1577:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1380],"body":{"id":1304,"nodeType":"Block","src":"1872:483:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1246,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1248,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1904:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"1882:97:7","trueBody":{"id":1254,"nodeType":"Block","src":"1914:65:7","statements":[{"errorCall":{"arguments":[{"id":1251,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1959:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1250,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1935:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"RevertStatement","src":"1928:40:7"}]}},{"assignments":[1257],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:7","nodeType":"VariableDeclaration","scope":1304,"src":"1989:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1271,"initialValue":{"arguments":[{"arguments":[{"id":1261,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2031:15:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2048:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2055:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2064:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1266,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2081:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1265,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2071:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1268,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2089:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1259,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1258,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:7"},{"assignments":[1273],"declarations":[{"constant":false,"id":1273,"mutability":"mutable","name":"hash","nameLocation":"2118:4:7","nodeType":"VariableDeclaration","scope":1304,"src":"2110:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1277,"initialValue":{"arguments":[{"id":1275,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"2142:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1274,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"2125:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:7"},{"assignments":[1279],"declarations":[{"constant":false,"id":1279,"mutability":"mutable","name":"signer","nameLocation":"2172:6:7","nodeType":"VariableDeclaration","scope":1304,"src":"2164:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1287,"initialValue":{"arguments":[{"id":1282,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"2195:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1283,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"2201:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1284,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"2204:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1285,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"2207:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1280,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"2181:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3636_$","typeString":"type(library ECDSA)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3586,"src":"2181:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"2223:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2233:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1297,"nodeType":"IfStatement","src":"2219:88:7","trueBody":{"id":1296,"nodeType":"Block","src":"2240:67:7","statements":[{"errorCall":{"arguments":[{"id":1292,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"2282:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2290:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1291,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2261:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"RevertStatement","src":"2254:42:7"}]}},{"expression":{"arguments":[{"id":1299,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2326:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1300,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2333:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2342:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1298,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":946,"src":"2317:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"ExpressionStatement","src":"2317:31:7"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"1635:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:7","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"owner","nameLocation":"1716:5:7","nodeType":"VariableDeclaration","scope":1305,"src":"1708:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"spender","nameLocation":"1739:7:7","nodeType":"VariableDeclaration","scope":1305,"src":"1731:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"value","nameLocation":"1764:5:7","nodeType":"VariableDeclaration","scope":1305,"src":"1756:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:7","nodeType":"VariableDeclaration","scope":1305,"src":"1779:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"v","nameLocation":"1811:1:7","nodeType":"VariableDeclaration","scope":1305,"src":"1805:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1238,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"r","nameLocation":"1830:1:7","nodeType":"VariableDeclaration","scope":1305,"src":"1822:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"s","nameLocation":"1849:1:7","nodeType":"VariableDeclaration","scope":1305,"src":"1841:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:7"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"1872:0:7"},"scope":1333,"src":"1683:672:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1388,1452],"body":{"id":1321,"nodeType":"Block","src":"2509:43:7","statements":[{"expression":{"arguments":[{"id":1318,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2539:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1316,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1333_$","typeString":"type(contract super ERC20Permit)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1452,"src":"2526:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1315,"id":1320,"nodeType":"Return","src":"2519:26:7"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"2361:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:7","nodeType":"FunctionDefinition","overrides":{"id":1312,"nodeType":"OverrideSpecifier","overrides":[{"id":1310,"name":"IERC20Permit","nameLocations":["2469:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"2469:12:7"},{"id":1311,"name":"Nonces","nameLocations":["2483:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1493,"src":"2483:6:7"}],"src":"2460:30:7"},"parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"owner","nameLocation":"2433:5:7","nodeType":"VariableDeclaration","scope":1322,"src":"2425:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:7"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"2500:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:7"},"scope":1333,"src":"2409:143:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1394],"body":{"id":1331,"nodeType":"Block","src":"2727:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1328,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"2744:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1327,"id":1330,"nodeType":"Return","src":"2737:27:7"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"2558:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1332,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:7","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"2684:2:7"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"2718:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:7"},"scope":1333,"src":"2659:112:7","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1334,"src":"898:1875:7","usedErrors":[415,420,425,434,439,444,1210,1217,1435,1559,1561,3299,3304,3309],"usedEvents":[383,1067,1076]}],"src":"122:2652:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1133],"IERC20Metadata":[1359]},"id":1360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1335,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1360,"sourceUnit":1134,"src":"151:37:8","symbolAliases":[{"foreign":{"id":1336,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"159:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1339,"name":"IERC20","nameLocations":["306:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"306:6:8"},"id":1340,"nodeType":"InheritanceSpecifier","src":"306:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"190:87:8","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1359,"linearizedBaseContracts":[1359,1133],"name":"IERC20Metadata","nameLocation":"288:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"319:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1346,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"391:2:8"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1346,"src":"417:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:8"},"scope":1359,"src":"378:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"438:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1352,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:8","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"514:2:8"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"540:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1349,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:8"},"scope":1359,"src":"499:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"561:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1358,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:8","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"648:2:8"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1358,"src":"674:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1355,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:8"},"scope":1359,"src":"631:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1360,"src":"278:405:8","usedErrors":[],"usedEvents":[1067,1076]}],"src":"125:559:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1395]},"id":1396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1361,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"149:1965:9","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1395,"linearizedBaseContracts":[1395],"name":"IERC20Permit","nameLocation":"2125:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"2144:850:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1380,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:9","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"owner","nameLocation":"3032:5:9","nodeType":"VariableDeclaration","scope":1380,"src":"3024:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"spender","nameLocation":"3055:7:9","nodeType":"VariableDeclaration","scope":1380,"src":"3047:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"3080:5:9","nodeType":"VariableDeclaration","scope":1380,"src":"3072:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:9","nodeType":"VariableDeclaration","scope":1380,"src":"3095:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"v","nameLocation":"3127:1:9","nodeType":"VariableDeclaration","scope":1380,"src":"3121:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1372,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"r","nameLocation":"3146:1:9","nodeType":"VariableDeclaration","scope":1380,"src":"3138:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"s","nameLocation":"3165:1:9","nodeType":"VariableDeclaration","scope":1380,"src":"3157:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:9"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"3181:0:9"},"scope":1395,"src":"2999:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"3188:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1388,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:9","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"owner","nameLocation":"3511:5:9","nodeType":"VariableDeclaration","scope":1388,"src":"3503:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:9"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"3541:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:9"},"scope":1395,"src":"3487:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"3556:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1394,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:9","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"3767:2:9"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"3793:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:9"},"scope":1395,"src":"3742:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1396,"src":"2115:1689:9","usedErrors":[],"usedEvents":[]}],"src":"123:3682:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1425]},"id":1426,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1397,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1425,"linearizedBaseContracts":[1425],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1406,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1402,"id":1405,"nodeType":"Return","src":"728:17:10"}]},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1425,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1411,"id":1414,"nodeType":"Return","src":"835:15:10"}]},"id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1425,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1420,"id":1422,"nodeType":"Return","src":"945:8:10"}]},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1424,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1425,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1426,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1493]},"id":1494,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1427,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"125:83:11","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1493,"linearizedBaseContracts":[1493],"name":"Nonces","nameLocation":"227:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"240:90:11","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1435,"name":"InvalidAccountNonce","nameLocation":"341:19:11","nodeType":"ErrorDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"account","nameLocation":"369:7:11","nodeType":"VariableDeclaration","scope":1435,"src":"361:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:11","nodeType":"VariableDeclaration","scope":1435,"src":"378:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:11"},"src":"335:65:11"},{"constant":false,"id":1439,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:11","nodeType":"VariableDeclaration","scope":1493,"src":"406:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1438,"keyName":"account","keyNameLocation":"422:7:11","keyType":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1451,"nodeType":"Block","src":"607:38:11","statements":[{"expression":{"baseExpression":{"id":1447,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"624:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1449,"indexExpression":{"id":1448,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"632:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1446,"id":1450,"nodeType":"Return","src":"617:21:11"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"464:69:11","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:11","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"owner","nameLocation":"562:5:11","nodeType":"VariableDeclaration","scope":1452,"src":"554:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:11"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"598:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:11"},"scope":1493,"src":"538:107:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1466,"nodeType":"Block","src":"828:326:11","statements":[{"id":1465,"nodeType":"UncheckedBlock","src":"1031:117:11","statements":[{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:11","subExpression":{"baseExpression":{"id":1460,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1462,"indexExpression":{"id":1461,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1129:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1459,"id":1464,"nodeType":"Return","src":"1114:23:11"}]}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"651:103:11","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:11","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"owner","nameLocation":"786:5:11","nodeType":"VariableDeclaration","scope":1467,"src":"778:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:11"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"819:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:11"},"scope":1493,"src":"759:395:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1491,"nodeType":"Block","src":"1338:149:11","statements":[{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"current","nameLocation":"1356:7:11","nodeType":"VariableDeclaration","scope":1491,"src":"1348:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"arguments":[{"id":1478,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1376:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1477,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1366:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"1396:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1482,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1490,"nodeType":"IfStatement","src":"1392:89:11","trueBody":{"id":1489,"nodeType":"Block","src":"1414:67:11","statements":[{"errorCall":{"arguments":[{"id":1485,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1455:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1484,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1435:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"RevertStatement","src":"1428:42:11"}]}}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"1160:100:11","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:11","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"owner","nameLocation":"1299:5:11","nodeType":"VariableDeclaration","scope":1492,"src":"1291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:11","nodeType":"VariableDeclaration","scope":1492,"src":"1306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:11"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"1338:0:11"},"scope":1493,"src":"1265:222:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1494,"src":"209:1280:11","usedErrors":[1435],"usedEvents":[]}],"src":"99:1391:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1545]},"id":1546,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1495,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1545,"linearizedBaseContracts":[1545],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":1500,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":1545,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":1504,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":1545,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":1508,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":1545,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":1512,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":1545,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":1516,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":1545,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":1520,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":1545,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":1524,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":1545,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":1528,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":1545,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":1532,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":1545,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":1536,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":1545,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nativeSrc":"1854:110:12","nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:12","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:12","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:12","nodeType":"YulIdentifier","src":"1868:6:12"},"nativeSrc":"1868:24:12","nodeType":"YulFunctionCall","src":"1868:24:12"},"nativeSrc":"1868:24:12","nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:12","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:12","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:12","nodeType":"YulIdentifier","src":"1905:6:12"},"nativeSrc":"1905:18:12","nodeType":"YulFunctionCall","src":"1905:18:12"},"nativeSrc":"1905:18:12","nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:12","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:12","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:12","nodeType":"YulIdentifier","src":"1936:6:12"},"nativeSrc":"1936:18:12","nodeType":"YulFunctionCall","src":"1936:18:12"},"nativeSrc":"1936:18:12","nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1539,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":1542,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":1544,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":1545,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1546,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1551],"ShortStrings":[1762],"StorageSlot":[1886]},"id":1763,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1547,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1763,"sourceUnit":1887,"src":"132:46:13","symbolAliases":[{"foreign":{"id":1548,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"140:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1551,"name":"ShortString","nameLocation":"353:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:13","underlyingType":{"id":1550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"378:876:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1762,"linearizedBaseContracts":[1762],"name":"ShortStrings","nameLocation":"1263:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1555,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:13","nodeType":"VariableDeclaration","scope":1762,"src":"1345:111:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1559,"name":"StringTooLong","nameLocation":"1469:13:13","nodeType":"ErrorDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"str","nameLocation":"1490:3:13","nodeType":"VariableDeclaration","scope":1559,"src":"1483:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1556,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:13"},"src":"1463:32:13"},{"errorSelector":"b3512b0c","id":1561,"name":"InvalidShortString","nameLocation":"1506:18:13","nodeType":"ErrorDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[],"src":"1524:2:13"},"src":"1500:27:13"},{"body":{"id":1604,"nodeType":"Block","src":"1786:208:13","statements":[{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:13","nodeType":"VariableDeclaration","scope":1604,"src":"1796:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1570,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1576,"initialValue":{"arguments":[{"id":1574,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"1822:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:13","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1577,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1840:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:13","memberName":"length","nodeType":"MemberAccess","src":"1840:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"IfStatement","src":"1836:72:13","trueBody":{"id":1585,"nodeType":"Block","src":"1858:50:13","statements":[{"errorCall":{"arguments":[{"id":1582,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"1893:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1581,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"1879:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"RevertStatement","src":"1872:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1595,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1965:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:13","typeDescriptions":{}}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:13","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1598,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1974:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:13","memberName":"length","nodeType":"MemberAccess","src":"1974:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:13","typeDescriptions":{}}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1587,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1924:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"type(ShortString)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"functionReturnParameters":1569,"id":1603,"nodeType":"Return","src":"1917:70:13"}]},"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"1533:170:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:13","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"str","nameLocation":"1745:3:13","nodeType":"VariableDeclaration","scope":1605,"src":"1731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1563,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:13"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"1773:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":1567,"nodeType":"UserDefinedTypeName","pathNode":{"id":1566,"name":"ShortString","nameLocations":["1773:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"1773:11:13"},"referencedDeclaration":1551,"src":"1773:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:13"},"scope":1762,"src":"1708:286:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1630,"nodeType":"Block","src":"2152:304:13","statements":[{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"len","nameLocation":"2170:3:13","nodeType":"VariableDeclaration","scope":1630,"src":"2162:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[{"id":1617,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2187:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}],"id":1616,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1551_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:13"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"str","nameLocation":"2294:3:13","nodeType":"VariableDeclaration","scope":1630,"src":"2280:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1620,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1626,"initialValue":{"arguments":[{"hexValue":"3332","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1622,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:13"},{"AST":{"nativeSrc":"2349:81:13","nodeType":"YulBlock","src":"2349:81:13","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:13","nodeType":"YulIdentifier","src":"2370:3:13"},{"name":"len","nativeSrc":"2375:3:13","nodeType":"YulIdentifier","src":"2375:3:13"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:13","nodeType":"YulIdentifier","src":"2363:6:13"},"nativeSrc":"2363:16:13","nodeType":"YulFunctionCall","src":"2363:16:13"},"nativeSrc":"2363:16:13","nodeType":"YulExpressionStatement","src":"2363:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:13","nodeType":"YulIdentifier","src":"2403:3:13"},{"kind":"number","nativeSrc":"2408:4:13","nodeType":"YulLiteral","src":"2408:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:13","nodeType":"YulIdentifier","src":"2399:3:13"},"nativeSrc":"2399:14:13","nodeType":"YulFunctionCall","src":"2399:14:13"},{"name":"sstr","nativeSrc":"2415:4:13","nodeType":"YulIdentifier","src":"2415:4:13"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:13","nodeType":"YulIdentifier","src":"2392:6:13"},"nativeSrc":"2392:28:13","nodeType":"YulFunctionCall","src":"2392:28:13"},"nativeSrc":"2392:28:13","nodeType":"YulExpressionStatement","src":"2392:28:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1615,"isOffset":false,"isSlot":false,"src":"2375:3:13","valueSize":1},{"declaration":1609,"isOffset":false,"isSlot":false,"src":"2415:4:13","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":false,"src":"2370:3:13","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":false,"src":"2403:3:13","valueSize":1}],"flags":["memory-safe"],"id":1627,"nodeType":"InlineAssembly","src":"2324:106:13"},{"expression":{"id":1628,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2446:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1613,"id":1629,"nodeType":"Return","src":"2439:10:13"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"2000:73:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:13","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:13","nodeType":"VariableDeclaration","scope":1631,"src":"2096:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":1608,"nodeType":"UserDefinedTypeName","pathNode":{"id":1607,"name":"ShortString","nameLocations":["2096:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"2096:11:13"},"referencedDeclaration":1551,"src":"2096:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:13"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"2137:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:13"},"scope":1762,"src":"2078:378:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"2598:175:13","statements":[{"assignments":[1641],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"result","nameLocation":"2616:6:13","nodeType":"VariableDeclaration","scope":1662,"src":"2608:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1646,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"2652:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}],"expression":{"id":1644,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2633:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"type(ShortString)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1551_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:13","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2679:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1659,"nodeType":"IfStatement","src":"2675:69:13","trueBody":{"id":1658,"nodeType":"Block","src":"2692:52:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1655,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2713:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"RevertStatement","src":"2706:27:13"}]}},{"expression":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2760:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1639,"id":1661,"nodeType":"Return","src":"2753:13:13"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"2462:61:13","text":" @dev Return the length of a `ShortString`."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:13","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:13","nodeType":"VariableDeclaration","scope":1663,"src":"2548:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":1634,"nodeType":"UserDefinedTypeName","pathNode":{"id":1633,"name":"ShortString","nameLocations":["2548:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"2548:11:13"},"referencedDeclaration":1551,"src":"2548:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:13"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"2589:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:13"},"scope":1762,"src":"2528:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"2996:231:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3016:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:13","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:13","memberName":"length","nodeType":"MemberAccess","src":"3010:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1700,"nodeType":"Block","src":"3094:127:13","statements":[{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1689,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"3134:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1686,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3108:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1886_$","typeString":"type(library StorageSlot)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1863,"src":"3108:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1783_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1783_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"3108:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3149:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1694,"nodeType":"ExpressionStatement","src":"3108:46:13"},{"expression":{"arguments":[{"id":1697,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"3192:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1695,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3175:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"type(ShortString)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"functionReturnParameters":1673,"id":1699,"nodeType":"Return","src":"3168:42:13"}]},"id":1701,"nodeType":"IfStatement","src":"3006:215:13","trueBody":{"id":1685,"nodeType":"Block","src":"3036:52:13","statements":[{"expression":{"arguments":[{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3071:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1681,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"3057:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"functionReturnParameters":1673,"id":1684,"nodeType":"Return","src":"3050:27:13"}]}}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"2779:103:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:13","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"value","nameLocation":"2936:5:13","nodeType":"VariableDeclaration","scope":1703,"src":"2922:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1665,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"store","nameLocation":"2958:5:13","nodeType":"VariableDeclaration","scope":1703,"src":"2943:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1667,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:13"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"2983:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":1671,"nodeType":"UserDefinedTypeName","pathNode":{"id":1670,"name":"ShortString","nameLocations":["2983:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"2983:11:13"},"referencedDeclaration":1551,"src":"2983:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:13"},"scope":1762,"src":"2887:340:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"3477:158:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3510:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}],"expression":{"id":1714,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3491:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"type(ShortString)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1551_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1718,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"3520:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1727,"nodeType":"Block","src":"3592:37:13","statements":[{"expression":{"id":1725,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"3613:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1713,"id":1726,"nodeType":"Return","src":"3606:12:13"}]},"id":1728,"nodeType":"IfStatement","src":"3487:142:13","trueBody":{"id":1724,"nodeType":"Block","src":"3539:47:13","statements":[{"expression":{"arguments":[{"id":1721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3569:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}],"id":1720,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"3560:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1551_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1713,"id":1723,"nodeType":"Return","src":"3553:22:13"}]}}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"3233:130:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:13","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"value","nameLocation":"3410:5:13","nodeType":"VariableDeclaration","scope":1730,"src":"3398:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":1706,"nodeType":"UserDefinedTypeName","pathNode":{"id":1705,"name":"ShortString","nameLocations":["3398:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"3398:11:13"},"referencedDeclaration":1551,"src":"3398:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"store","nameLocation":"3432:5:13","nodeType":"VariableDeclaration","scope":1730,"src":"3417:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1708,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:13"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"3462:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1711,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:13"},"scope":1762,"src":"3368:267:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"4125:174:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"4158:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}],"expression":{"id":1741,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"4139:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"type(ShortString)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1551_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1745,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4168:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1758,"nodeType":"Block","src":"4242:51:13","statements":[{"expression":{"expression":{"arguments":[{"id":1754,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4269:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1752,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:13","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:13","memberName":"length","nodeType":"MemberAccess","src":"4263:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1740,"id":1757,"nodeType":"Return","src":"4256:26:13"}]},"id":1759,"nodeType":"IfStatement","src":"4135:158:13","trueBody":{"id":1751,"nodeType":"Block","src":"4187:49:13","statements":[{"expression":{"arguments":[{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"4219:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}],"id":1747,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"4208:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1551_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1740,"id":1750,"nodeType":"Return","src":"4201:24:13"}]}}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"3641:374:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:13","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"value","nameLocation":"4064:5:13","nodeType":"VariableDeclaration","scope":1761,"src":"4052:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":1733,"nodeType":"UserDefinedTypeName","pathNode":{"id":1732,"name":"ShortString","nameLocations":["4052:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"4052:11:13"},"referencedDeclaration":1551,"src":"4052:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"store","nameLocation":"4086:5:13","nodeType":"VariableDeclaration","scope":1761,"src":"4071:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1735,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:13"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"4116:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:13"},"scope":1762,"src":"4020:279:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1763,"src":"1255:3046:13","usedErrors":[1559,1561],"usedEvents":[]}],"src":"106:4196:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1886]},"id":1887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1764,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"219:1187:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1886,"linearizedBaseContracts":[1886],"name":"StorageSlot","nameLocation":"1415:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1768,"members":[{"constant":false,"id":1767,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":1768,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":1886,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1771,"members":[{"constant":false,"id":1770,"mutability":"mutable","name":"value","nameLocation":"1522:5:14","nodeType":"VariableDeclaration","scope":1771,"src":"1517:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1769,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:14","nodeType":"StructDefinition","scope":1886,"src":"1488:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1774,"members":[{"constant":false,"id":1773,"mutability":"mutable","name":"value","nameLocation":"1577:5:14","nodeType":"VariableDeclaration","scope":1774,"src":"1569:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:14","nodeType":"StructDefinition","scope":1886,"src":"1540:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1777,"members":[{"constant":false,"id":1776,"mutability":"mutable","name":"value","nameLocation":"1632:5:14","nodeType":"VariableDeclaration","scope":1777,"src":"1624:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:14","nodeType":"StructDefinition","scope":1886,"src":"1595:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1780,"members":[{"constant":false,"id":1779,"mutability":"mutable","name":"value","nameLocation":"1685:5:14","nodeType":"VariableDeclaration","scope":1780,"src":"1678:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1778,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:14","nodeType":"StructDefinition","scope":1886,"src":"1650:47:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1783,"members":[{"constant":false,"id":1782,"mutability":"mutable","name":"value","nameLocation":"1738:5:14","nodeType":"VariableDeclaration","scope":1783,"src":"1731:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:14","nodeType":"StructDefinition","scope":1886,"src":"1703:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1786,"members":[{"constant":false,"id":1785,"mutability":"mutable","name":"value","nameLocation":"1789:5:14","nodeType":"VariableDeclaration","scope":1786,"src":"1783:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1784,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:14","nodeType":"StructDefinition","scope":1886,"src":"1756:45:14","visibility":"public"},{"body":{"id":1796,"nodeType":"Block","src":"1983:79:14","statements":[{"AST":{"nativeSrc":"2018:38:14","nodeType":"YulBlock","src":"2018:38:14","statements":[{"nativeSrc":"2032:14:14","nodeType":"YulAssignment","src":"2032:14:14","value":{"name":"slot","nativeSrc":"2042:4:14","nodeType":"YulIdentifier","src":"2042:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:14","nodeType":"YulIdentifier","src":"2032:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1793,"isOffset":false,"isSlot":true,"src":"2032:6:14","suffix":"slot","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"2042:4:14","valueSize":1}],"flags":["memory-safe"],"id":1795,"nodeType":"InlineAssembly","src":"1993:63:14"}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"1807:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:14","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"slot","nameLocation":"1931:4:14","nodeType":"VariableDeclaration","scope":1797,"src":"1923:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:14"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"r","nameLocation":"1980:1:14","nodeType":"VariableDeclaration","scope":1797,"src":"1960:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1768_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1792,"nodeType":"UserDefinedTypeName","pathNode":{"id":1791,"name":"AddressSlot","nameLocations":["1960:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"1960:11:14"},"referencedDeclaration":1768,"src":"1960:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1768_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:14"},"scope":1886,"src":"1899:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1807,"nodeType":"Block","src":"2243:79:14","statements":[{"AST":{"nativeSrc":"2278:38:14","nodeType":"YulBlock","src":"2278:38:14","statements":[{"nativeSrc":"2292:14:14","nodeType":"YulAssignment","src":"2292:14:14","value":{"name":"slot","nativeSrc":"2302:4:14","nodeType":"YulIdentifier","src":"2302:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:14","nodeType":"YulIdentifier","src":"2292:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1804,"isOffset":false,"isSlot":true,"src":"2292:6:14","suffix":"slot","valueSize":1},{"declaration":1800,"isOffset":false,"isSlot":false,"src":"2302:4:14","valueSize":1}],"flags":["memory-safe"],"id":1806,"nodeType":"InlineAssembly","src":"2253:63:14"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"2068:86:14","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:14","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"slot","nameLocation":"2191:4:14","nodeType":"VariableDeclaration","scope":1808,"src":"2183:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:14"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"r","nameLocation":"2240:1:14","nodeType":"VariableDeclaration","scope":1808,"src":"2220:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1771_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1803,"nodeType":"UserDefinedTypeName","pathNode":{"id":1802,"name":"BooleanSlot","nameLocations":["2220:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"2220:11:14"},"referencedDeclaration":1771,"src":"2220:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1771_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:14"},"scope":1886,"src":"2159:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1818,"nodeType":"Block","src":"2503:79:14","statements":[{"AST":{"nativeSrc":"2538:38:14","nodeType":"YulBlock","src":"2538:38:14","statements":[{"nativeSrc":"2552:14:14","nodeType":"YulAssignment","src":"2552:14:14","value":{"name":"slot","nativeSrc":"2562:4:14","nodeType":"YulIdentifier","src":"2562:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:14","nodeType":"YulIdentifier","src":"2552:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1815,"isOffset":false,"isSlot":true,"src":"2552:6:14","suffix":"slot","valueSize":1},{"declaration":1811,"isOffset":false,"isSlot":false,"src":"2562:4:14","valueSize":1}],"flags":["memory-safe"],"id":1817,"nodeType":"InlineAssembly","src":"2513:63:14"}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"2328:86:14","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1819,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:14","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"slot","nameLocation":"2451:4:14","nodeType":"VariableDeclaration","scope":1819,"src":"2443:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:14"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"r","nameLocation":"2500:1:14","nodeType":"VariableDeclaration","scope":1819,"src":"2480:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1774_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1814,"nodeType":"UserDefinedTypeName","pathNode":{"id":1813,"name":"Bytes32Slot","nameLocations":["2480:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"2480:11:14"},"referencedDeclaration":1774,"src":"2480:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1774_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:14"},"scope":1886,"src":"2419:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"2763:79:14","statements":[{"AST":{"nativeSrc":"2798:38:14","nodeType":"YulBlock","src":"2798:38:14","statements":[{"nativeSrc":"2812:14:14","nodeType":"YulAssignment","src":"2812:14:14","value":{"name":"slot","nativeSrc":"2822:4:14","nodeType":"YulIdentifier","src":"2822:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:14","nodeType":"YulIdentifier","src":"2812:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1826,"isOffset":false,"isSlot":true,"src":"2812:6:14","suffix":"slot","valueSize":1},{"declaration":1822,"isOffset":false,"isSlot":false,"src":"2822:4:14","valueSize":1}],"flags":["memory-safe"],"id":1828,"nodeType":"InlineAssembly","src":"2773:63:14"}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"2588:86:14","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:14","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"slot","nameLocation":"2711:4:14","nodeType":"VariableDeclaration","scope":1830,"src":"2703:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:14"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"r","nameLocation":"2760:1:14","nodeType":"VariableDeclaration","scope":1830,"src":"2740:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1777_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1825,"nodeType":"UserDefinedTypeName","pathNode":{"id":1824,"name":"Uint256Slot","nameLocations":["2740:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"2740:11:14"},"referencedDeclaration":1777,"src":"2740:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1777_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:14"},"scope":1886,"src":"2679:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1840,"nodeType":"Block","src":"3020:79:14","statements":[{"AST":{"nativeSrc":"3055:38:14","nodeType":"YulBlock","src":"3055:38:14","statements":[{"nativeSrc":"3069:14:14","nodeType":"YulAssignment","src":"3069:14:14","value":{"name":"slot","nativeSrc":"3079:4:14","nodeType":"YulIdentifier","src":"3079:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:14","nodeType":"YulIdentifier","src":"3069:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1837,"isOffset":false,"isSlot":true,"src":"3069:6:14","suffix":"slot","valueSize":1},{"declaration":1833,"isOffset":false,"isSlot":false,"src":"3079:4:14","valueSize":1}],"flags":["memory-safe"],"id":1839,"nodeType":"InlineAssembly","src":"3030:63:14"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"2848:85:14","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:14","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"slot","nameLocation":"2969:4:14","nodeType":"VariableDeclaration","scope":1841,"src":"2961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:14"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"r","nameLocation":"3017:1:14","nodeType":"VariableDeclaration","scope":1841,"src":"2998:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1780_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1836,"nodeType":"UserDefinedTypeName","pathNode":{"id":1835,"name":"Int256Slot","nameLocations":["2998:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"2998:10:14"},"referencedDeclaration":1780,"src":"2998:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1780_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:14"},"scope":1886,"src":"2938:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"3277:79:14","statements":[{"AST":{"nativeSrc":"3312:38:14","nodeType":"YulBlock","src":"3312:38:14","statements":[{"nativeSrc":"3326:14:14","nodeType":"YulAssignment","src":"3326:14:14","value":{"name":"slot","nativeSrc":"3336:4:14","nodeType":"YulIdentifier","src":"3336:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:14","nodeType":"YulIdentifier","src":"3326:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1848,"isOffset":false,"isSlot":true,"src":"3326:6:14","suffix":"slot","valueSize":1},{"declaration":1844,"isOffset":false,"isSlot":false,"src":"3336:4:14","valueSize":1}],"flags":["memory-safe"],"id":1850,"nodeType":"InlineAssembly","src":"3287:63:14"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"3105:85:14","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:14","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"slot","nameLocation":"3226:4:14","nodeType":"VariableDeclaration","scope":1852,"src":"3218:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:14"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"r","nameLocation":"3274:1:14","nodeType":"VariableDeclaration","scope":1852,"src":"3255:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1783_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1847,"nodeType":"UserDefinedTypeName","pathNode":{"id":1846,"name":"StringSlot","nameLocations":["3255:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1783,"src":"3255:10:14"},"referencedDeclaration":1783,"src":"3255:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1783_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:14"},"scope":1886,"src":"3195:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1862,"nodeType":"Block","src":"3558:85:14","statements":[{"AST":{"nativeSrc":"3593:44:14","nodeType":"YulBlock","src":"3593:44:14","statements":[{"nativeSrc":"3607:20:14","nodeType":"YulAssignment","src":"3607:20:14","value":{"name":"store.slot","nativeSrc":"3617:10:14","nodeType":"YulIdentifier","src":"3617:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:14","nodeType":"YulIdentifier","src":"3607:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1859,"isOffset":false,"isSlot":true,"src":"3607:6:14","suffix":"slot","valueSize":1},{"declaration":1855,"isOffset":false,"isSlot":true,"src":"3617:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1861,"nodeType":"InlineAssembly","src":"3568:69:14"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"3362:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1863,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:14","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"store","nameLocation":"3506:5:14","nodeType":"VariableDeclaration","scope":1863,"src":"3491:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:14"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"r","nameLocation":"3555:1:14","nodeType":"VariableDeclaration","scope":1863,"src":"3536:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1783_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1858,"nodeType":"UserDefinedTypeName","pathNode":{"id":1857,"name":"StringSlot","nameLocations":["3536:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1783,"src":"3536:10:14"},"referencedDeclaration":1783,"src":"3536:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1783_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:14"},"scope":1886,"src":"3468:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1873,"nodeType":"Block","src":"3818:79:14","statements":[{"AST":{"nativeSrc":"3853:38:14","nodeType":"YulBlock","src":"3853:38:14","statements":[{"nativeSrc":"3867:14:14","nodeType":"YulAssignment","src":"3867:14:14","value":{"name":"slot","nativeSrc":"3877:4:14","nodeType":"YulIdentifier","src":"3877:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:14","nodeType":"YulIdentifier","src":"3867:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1870,"isOffset":false,"isSlot":true,"src":"3867:6:14","suffix":"slot","valueSize":1},{"declaration":1866,"isOffset":false,"isSlot":false,"src":"3877:4:14","valueSize":1}],"flags":["memory-safe"],"id":1872,"nodeType":"InlineAssembly","src":"3828:63:14"}]},"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"3649:84:14","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1874,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:14","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"slot","nameLocation":"3768:4:14","nodeType":"VariableDeclaration","scope":1874,"src":"3760:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:14"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"r","nameLocation":"3815:1:14","nodeType":"VariableDeclaration","scope":1874,"src":"3797:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1786_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1869,"nodeType":"UserDefinedTypeName","pathNode":{"id":1868,"name":"BytesSlot","nameLocations":["3797:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"3797:9:14"},"referencedDeclaration":1786,"src":"3797:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1786_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:14"},"scope":1886,"src":"3738:159:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"4094:85:14","statements":[{"AST":{"nativeSrc":"4129:44:14","nodeType":"YulBlock","src":"4129:44:14","statements":[{"nativeSrc":"4143:20:14","nodeType":"YulAssignment","src":"4143:20:14","value":{"name":"store.slot","nativeSrc":"4153:10:14","nodeType":"YulIdentifier","src":"4153:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:14","nodeType":"YulIdentifier","src":"4143:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1881,"isOffset":false,"isSlot":true,"src":"4143:6:14","suffix":"slot","valueSize":1},{"declaration":1877,"isOffset":false,"isSlot":true,"src":"4153:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1883,"nodeType":"InlineAssembly","src":"4104:69:14"}]},"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"3903:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:14","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"store","nameLocation":"4043:5:14","nodeType":"VariableDeclaration","scope":1885,"src":"4029:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:14"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"r","nameLocation":"4091:1:14","nodeType":"VariableDeclaration","scope":1885,"src":"4073:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1786_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1880,"nodeType":"UserDefinedTypeName","pathNode":{"id":1879,"name":"BytesSlot","nameLocations":["4073:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"4073:9:14"},"referencedDeclaration":1786,"src":"4073:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1786_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:14"},"scope":1886,"src":"4007:172:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1887,"src":"1407:2774:14","usedErrors":[],"usedEvents":[]}],"src":"193:3989:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5606],"SafeCast":[7371],"SignedMath":[7515],"Strings":[3288]},"id":3289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1888,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3289,"sourceUnit":5607,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1889,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3289,"sourceUnit":7372,"src":"165:45:15","symbolAliases":[{"foreign":{"id":1891,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3289,"sourceUnit":7516,"src":"211:49:15","symbolAliases":[{"foreign":{"id":1893,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"219:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"262:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":3288,"linearizedBaseContracts":[3288],"name":"Strings","nameLocation":"305:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1897,"libraryName":{"id":1896,"name":"SafeCast","nameLocations":["325:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":7371,"src":"325:8:15"},"nodeType":"UsingForDirective","src":"319:21:15"},{"constant":true,"id":1900,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:15","nodeType":"VariableDeclaration","scope":3288,"src":"346:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1898,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1903,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:15","nodeType":"VariableDeclaration","scope":3288,"src":"408:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1901,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1939,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:15","nodeType":"VariableDeclaration","scope":3288,"src":"456:302:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:15","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:15","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:15","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:15","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:15","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"778:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1946,"name":"StringsInsufficientHexLength","nameLocation":"870:28:15","nodeType":"ErrorDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"value","nameLocation":"907:5:15","nodeType":"VariableDeclaration","scope":1946,"src":"899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"length","nameLocation":"922:6:15","nodeType":"VariableDeclaration","scope":1946,"src":"914:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:15"},"src":"864:66:15"},{"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"936:108:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1949,"name":"StringsInvalidChar","nameLocation":"1055:18:15","nodeType":"ErrorDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"1073:2:15"},"src":"1049:27:15"},{"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"1082:84:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1952,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:15","nodeType":"ErrorDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"1204:2:15"},"src":"1171:36:15"},{"body":{"id":1999,"nodeType":"Block","src":"1379:561:15","statements":[{"id":1998,"nodeType":"UncheckedBlock","src":"1389:545:15","statements":[{"assignments":[1961],"declarations":[{"constant":false,"id":1961,"mutability":"mutable","name":"length","nameLocation":"1421:6:15","nodeType":"VariableDeclaration","scope":1998,"src":"1413:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1441:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1962,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"1430:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5606_$","typeString":"type(library Math)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5438,"src":"1430:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:15"},{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:15","nodeType":"VariableDeclaration","scope":1998,"src":"1465:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1969,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1975,"initialValue":{"arguments":[{"id":1973,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1499:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1971,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:15"},{"assignments":[1977],"declarations":[{"constant":false,"id":1977,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:15","nodeType":"VariableDeclaration","scope":1998,"src":"1520:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"nodeType":"VariableDeclarationStatement","src":"1520:11:15"},{"AST":{"nativeSrc":"1570:67:15","nodeType":"YulBlock","src":"1570:67:15","statements":[{"nativeSrc":"1588:35:15","nodeType":"YulAssignment","src":"1588:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:15","nodeType":"YulIdentifier","src":"1599:6:15"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:15","nodeType":"YulLiteral","src":"1611:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:15","nodeType":"YulIdentifier","src":"1615:6:15"}],"functionName":{"name":"add","nativeSrc":"1607:3:15","nodeType":"YulIdentifier","src":"1607:3:15"},"nativeSrc":"1607:15:15","nodeType":"YulFunctionCall","src":"1607:15:15"}],"functionName":{"name":"add","nativeSrc":"1595:3:15","nodeType":"YulIdentifier","src":"1595:3:15"},"nativeSrc":"1595:28:15","nodeType":"YulFunctionCall","src":"1595:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:15","nodeType":"YulIdentifier","src":"1588:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1970,"isOffset":false,"isSlot":false,"src":"1599:6:15","valueSize":1},{"declaration":1961,"isOffset":false,"isSlot":false,"src":"1615:6:15","valueSize":1},{"declaration":1977,"isOffset":false,"isSlot":false,"src":"1588:3:15","valueSize":1}],"flags":["memory-safe"],"id":1979,"nodeType":"InlineAssembly","src":"1545:92:15"},{"body":{"id":1994,"nodeType":"Block","src":"1663:234:15","statements":[{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:15","subExpression":{"id":1981,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1983,"nodeType":"ExpressionStatement","src":"1681:5:15"},{"AST":{"nativeSrc":"1729:86:15","nodeType":"YulBlock","src":"1729:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:15","nodeType":"YulIdentifier","src":"1759:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:15","nodeType":"YulIdentifier","src":"1773:5:15"},{"kind":"number","nativeSrc":"1780:2:15","nodeType":"YulLiteral","src":"1780:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:15","nodeType":"YulIdentifier","src":"1769:3:15"},"nativeSrc":"1769:14:15","nodeType":"YulFunctionCall","src":"1769:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:15","nodeType":"YulIdentifier","src":"1785:10:15"}],"functionName":{"name":"byte","nativeSrc":"1764:4:15","nodeType":"YulIdentifier","src":"1764:4:15"},"nativeSrc":"1764:32:15","nodeType":"YulFunctionCall","src":"1764:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:15","nodeType":"YulIdentifier","src":"1751:7:15"},"nativeSrc":"1751:46:15","nodeType":"YulFunctionCall","src":"1751:46:15"},"nativeSrc":"1751:46:15","nodeType":"YulExpressionStatement","src":"1751:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1900,"isOffset":false,"isSlot":false,"src":"1785:10:15","valueSize":1},{"declaration":1977,"isOffset":false,"isSlot":false,"src":"1759:3:15","valueSize":1},{"declaration":1955,"isOffset":false,"isSlot":false,"src":"1773:5:15","valueSize":1}],"flags":["memory-safe"],"id":1984,"nodeType":"InlineAssembly","src":"1704:111:15"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1832:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"1832:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"1861:21:15","trueBody":{"id":1992,"nodeType":"Break","src":"1877:5:15"}}]},"condition":{"hexValue":"74727565","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1995,"nodeType":"WhileStatement","src":"1650:247:15"},{"expression":{"id":1996,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1917:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1959,"id":1997,"nodeType":"Return","src":"1910:13:15"}]}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"1213:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:15","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"value","nameLocation":"1334:5:15","nodeType":"VariableDeclaration","scope":2000,"src":"1326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:15"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2000,"src":"1364:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1957,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:15"},"scope":3288,"src":"1308:632:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"2116:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2147:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:15","trueExpression":{"hexValue":"2d","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2193:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2018,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"2178:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7515_$","typeString":"type(library SignedMath)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7514,"src":"2178:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2169:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2008,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:15","typeDescriptions":{}}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2007,"id":2024,"nodeType":"Return","src":"2126:75:15"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"1946:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:15","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"value","nameLocation":"2071:5:15","nodeType":"VariableDeclaration","scope":2026,"src":"2064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2002,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:15"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"2101:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2005,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:15"},"scope":3288,"src":"2040:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"2387:100:15","statements":[{"id":2044,"nodeType":"UncheckedBlock","src":"2397:84:15","statements":[{"expression":{"arguments":[{"id":2035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2440:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2036,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"2447:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5606_$","typeString":"type(library Math)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5549,"src":"2447:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2034,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2046,2129,2149],"referencedDeclaration":2129,"src":"2428:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2033,"id":2043,"nodeType":"Return","src":"2421:49:15"}]}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"2214:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:15","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"value","nameLocation":"2342:5:15","nodeType":"VariableDeclaration","scope":2046,"src":"2334:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:15"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"2372:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2031,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:15"},"scope":3288,"src":"2313:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2128,"nodeType":"Block","src":"2700:435:15","statements":[{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:15","nodeType":"VariableDeclaration","scope":2128,"src":"2710:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2059,"initialValue":{"id":2058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2731:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:15"},{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:15","nodeType":"VariableDeclaration","scope":2128,"src":"2746:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2070,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2065,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2062,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:15"},{"expression":{"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2071,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2803:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2073,"indexExpression":{"hexValue":"30","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2076,"nodeType":"ExpressionStatement","src":"2803:15:15"},{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2077,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2828:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2079,"indexExpression":{"hexValue":"31","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2082,"nodeType":"ExpressionStatement","src":"2828:15:15"},{"body":{"id":2111,"nodeType":"Block","src":"2898:95:15","statements":[{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2097,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2912:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2099,"indexExpression":{"id":2098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2919:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2100,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2924:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2104,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"2935:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2106,"nodeType":"ExpressionStatement","src":"2912:40:15"},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"2966:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"nodeType":"ExpressionStatement","src":"2966:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2886:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"initializationExpression":{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"i","nameLocation":"2866:1:15","nodeType":"VariableDeclaration","scope":2112,"src":"2858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2090,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2086,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2874:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:15","subExpression":{"id":2094,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2895:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2096,"nodeType":"ExpressionStatement","src":"2893:3:15"},"nodeType":"ForStatement","src":"2853:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"3006:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"IfStatement","src":"3002:96:15","trueBody":{"id":2121,"nodeType":"Block","src":"3023:75:15","statements":[{"errorCall":{"arguments":[{"id":2117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3073:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2118,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3080:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2116,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"3044:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2120,"nodeType":"RevertStatement","src":"3037:50:15"}]}},{"expression":{"arguments":[{"id":2125,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"3121:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:15","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2055,"id":2127,"nodeType":"Return","src":"3107:21:15"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"2493:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2129,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:15","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"value","nameLocation":"2639:5:15","nodeType":"VariableDeclaration","scope":2129,"src":"2631:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"length","nameLocation":"2654:6:15","nodeType":"VariableDeclaration","scope":2129,"src":"2646:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:15"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2129,"src":"2685:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2053,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:15"},"scope":3288,"src":"2610:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"3367:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2142,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"3412:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2140,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:15","typeDescriptions":{}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:15","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2145,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3420:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2137,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2046,2129,2149],"referencedDeclaration":2129,"src":"3384:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2136,"id":2147,"nodeType":"Return","src":"3377:58:15"}]},"documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"3141:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:15","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"addr","nameLocation":"3323:4:15","nodeType":"VariableDeclaration","scope":2149,"src":"3315:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:15"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"3352:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2134,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:15"},"scope":3288,"src":"3294:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2213,"nodeType":"Block","src":"3699:642:15","statements":[{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:15","nodeType":"VariableDeclaration","scope":2213,"src":"3709:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2157,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2165,"initialValue":{"arguments":[{"arguments":[{"id":2162,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"3749:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2161,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2046,2129,2149],"referencedDeclaration":2149,"src":"3737:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:15","typeDescriptions":{}}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:15"},{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:15","nodeType":"VariableDeclaration","scope":2213,"src":"3840:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"nodeType":"VariableDeclarationStatement","src":"3840:17:15"},{"AST":{"nativeSrc":"3892:78:15","nodeType":"YulBlock","src":"3892:78:15","statements":[{"nativeSrc":"3906:54:15","nodeType":"YulAssignment","src":"3906:54:15","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:15","nodeType":"YulLiteral","src":"3923:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:15","nodeType":"YulIdentifier","src":"3941:6:15"},{"kind":"number","nativeSrc":"3949:4:15","nodeType":"YulLiteral","src":"3949:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:15","nodeType":"YulIdentifier","src":"3937:3:15"},"nativeSrc":"3937:17:15","nodeType":"YulFunctionCall","src":"3937:17:15"},{"kind":"number","nativeSrc":"3956:2:15","nodeType":"YulLiteral","src":"3956:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:15","nodeType":"YulIdentifier","src":"3927:9:15"},"nativeSrc":"3927:32:15","nodeType":"YulFunctionCall","src":"3927:32:15"}],"functionName":{"name":"shr","nativeSrc":"3919:3:15","nodeType":"YulIdentifier","src":"3919:3:15"},"nativeSrc":"3919:41:15","nodeType":"YulFunctionCall","src":"3919:41:15"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:15","nodeType":"YulIdentifier","src":"3906:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2158,"isOffset":false,"isSlot":false,"src":"3941:6:15","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"3906:9:15","valueSize":1}],"flags":["memory-safe"],"id":2169,"nodeType":"InlineAssembly","src":"3867:103:15"},{"body":{"id":2206,"nodeType":"Block","src":"4013:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4119:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2187,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4148:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2189,"indexExpression":{"id":2188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2185,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:15","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"4115:150:15","trueBody":{"id":2200,"nodeType":"Block","src":"4165:100:15","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2194,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4233:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2196,"indexExpression":{"id":2195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4240:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2199,"nodeType":"ExpressionStatement","src":"4233:17:15"}]}},{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2202,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4278:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"nodeType":"ExpressionStatement","src":"4278:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2207,"initializationExpression":{"assignments":[2171],"declarations":[{"constant":false,"id":2171,"mutability":"mutable","name":"i","nameLocation":"3993:1:15","nodeType":"VariableDeclaration","scope":2207,"src":"3985:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2173,"initialValue":{"hexValue":"3431","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:15","subExpression":{"id":2177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"4008:3:15"},"nodeType":"ForStatement","src":"3980:324:15"},{"expression":{"arguments":[{"id":2210,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4327:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2208,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:15","typeDescriptions":{}}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2156,"id":2212,"nodeType":"Return","src":"4313:21:15"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"3448:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2214,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:15","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"addr","nameLocation":"3655:4:15","nodeType":"VariableDeclaration","scope":2214,"src":"3647:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:15"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2214,"src":"3684:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2154,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:15"},"scope":3288,"src":"3618:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"4496:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4519:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2224,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:15","typeDescriptions":{}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:15","memberName":"length","nodeType":"MemberAccess","src":"4513:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2231,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4538:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2229,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:15","typeDescriptions":{}}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:15","memberName":"length","nodeType":"MemberAccess","src":"4532:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4567:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2236,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:15","typeDescriptions":{}}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2235,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4590:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:15","typeDescriptions":{}}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2241,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2223,"id":2249,"nodeType":"Return","src":"4506:87:15"}]},"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"4347:66:15","text":" @dev Returns true if the two strings are equal."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:15","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"a","nameLocation":"4447:1:15","nodeType":"VariableDeclaration","scope":2251,"src":"4433:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2216,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"b","nameLocation":"4464:1:15","nodeType":"VariableDeclaration","scope":2251,"src":"4450:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2218,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:15"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"4490:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2221,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:15"},"scope":3288,"src":"4418:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"4897:64:15","statements":[{"expression":{"arguments":[{"id":2260,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4924:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2264,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4940:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2262,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:15","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:15","memberName":"length","nodeType":"MemberAccess","src":"4934:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2270,2301],"referencedDeclaration":2301,"src":"4914:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2258,"id":2268,"nodeType":"Return","src":"4907:47:15"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"4606:214:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:15","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"input","nameLocation":"4858:5:15","nodeType":"VariableDeclaration","scope":2270,"src":"4844:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:15"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"4888:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:15"},"scope":3288,"src":"4825:136:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"5366:153:15","statements":[{"assignments":[2283,2285],"declarations":[{"constant":false,"id":2283,"mutability":"mutable","name":"success","nameLocation":"5382:7:15","nodeType":"VariableDeclaration","scope":2300,"src":"5377:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2282,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"value","nameLocation":"5399:5:15","nodeType":"VariableDeclaration","scope":2300,"src":"5391:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2291,"initialValue":{"arguments":[{"id":2287,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"5421:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2288,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2289,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5435:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2322,2359],"referencedDeclaration":2359,"src":"5408:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:15"},{"condition":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:15","subExpression":{"id":2292,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"5454:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"IfStatement","src":"5449:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2294,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"5470:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"RevertStatement","src":"5463:27:15"}},{"expression":{"id":2298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"5507:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2281,"id":2299,"nodeType":"Return","src":"5500:12:15"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"4967:294:15","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:15","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"input","nameLocation":"5299:5:15","nodeType":"VariableDeclaration","scope":2301,"src":"5285:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2272,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"begin","nameLocation":"5314:5:15","nodeType":"VariableDeclaration","scope":2301,"src":"5306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"end","nameLocation":"5329:3:15","nodeType":"VariableDeclaration","scope":2301,"src":"5321:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:15"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"5357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:15"},"scope":3288,"src":"5266:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2321,"nodeType":"Block","src":"5840:83:15","statements":[{"expression":{"arguments":[{"id":2312,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"5886:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2316,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"5902:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:15","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:15","memberName":"length","nodeType":"MemberAccess","src":"5896:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2311,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"5857:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2310,"id":2320,"nodeType":"Return","src":"5850:66:15"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"5525:215:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:15","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"input","nameLocation":"5781:5:15","nodeType":"VariableDeclaration","scope":2322,"src":"5767:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2303,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:15"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"success","nameLocation":"5816:7:15","nodeType":"VariableDeclaration","scope":2322,"src":"5811:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2306,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"value","nameLocation":"5833:5:15","nodeType":"VariableDeclaration","scope":2322,"src":"5825:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:15"},"scope":3288,"src":"5745:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2358,"nodeType":"Block","src":"6325:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2336,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"6339:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2339,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"6351:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2337,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:15","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:15","memberName":"length","nodeType":"MemberAccess","src":"6345:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"6368:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2344,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"6376:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2351,"nodeType":"IfStatement","src":"6335:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2335,"id":2350,"nodeType":"Return","src":"6381:17:15"}},{"expression":{"arguments":[{"id":2353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"6444:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2354,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"6451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2355,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"6458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2352,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"6415:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2335,"id":2357,"nodeType":"Return","src":"6408:54:15"}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"5929:238:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:15","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"input","nameLocation":"6217:5:15","nodeType":"VariableDeclaration","scope":2359,"src":"6203:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"begin","nameLocation":"6240:5:15","nodeType":"VariableDeclaration","scope":2359,"src":"6232:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"end","nameLocation":"6263:3:15","nodeType":"VariableDeclaration","scope":2359,"src":"6255:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:15"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"success","nameLocation":"6301:7:15","nodeType":"VariableDeclaration","scope":2359,"src":"6296:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2331,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"value","nameLocation":"6318:5:15","nodeType":"VariableDeclaration","scope":2359,"src":"6310:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:15"},"scope":3288,"src":"6172:297:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"6872:347:15","statements":[{"assignments":[2374],"declarations":[{"constant":false,"id":2374,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:15","nodeType":"VariableDeclaration","scope":2428,"src":"6882:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2373,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2379,"initialValue":{"arguments":[{"id":2377,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"6910:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2375,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:15","typeDescriptions":{}}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:15"},{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"result","nameLocation":"6935:6:15","nodeType":"VariableDeclaration","scope":2428,"src":"6927:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2383,"initialValue":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:15"},{"body":{"id":2422,"nodeType":"Block","src":"6993:189:15","statements":[{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"chr","nameLocation":"7013:3:15","nodeType":"VariableDeclaration","scope":2422,"src":"7007:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2394,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2405,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2400,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"7062:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"7039:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2397,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:15","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2396,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"7019:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"7092:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2413,"nodeType":"IfStatement","src":"7088:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2372,"id":2412,"nodeType":"Return","src":"7101:17:15"}},{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"7132:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"7132:12:15"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"7158:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2419,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"7168:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"7158:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"6979:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2389,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"6983:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2423,"initializationExpression":{"assignments":[2385],"declarations":[{"constant":false,"id":2385,"mutability":"mutable","name":"i","nameLocation":"6968:1:15","nodeType":"VariableDeclaration","scope":2423,"src":"6960:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"initialValue":{"id":2386,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6972:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:15","subExpression":{"id":2391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"6990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ExpressionStatement","src":"6988:3:15"},"nodeType":"ForStatement","src":"6955:227:15"},{"expression":{"components":[{"hexValue":"74727565","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"7205:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2372,"id":2427,"nodeType":"Return","src":"7191:21:15"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"6475:224:15","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:15","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"input","nameLocation":"6765:5:15","nodeType":"VariableDeclaration","scope":2429,"src":"6751:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2361,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"begin","nameLocation":"6788:5:15","nodeType":"VariableDeclaration","scope":2429,"src":"6780:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"end","nameLocation":"6811:3:15","nodeType":"VariableDeclaration","scope":2429,"src":"6803:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:15"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"success","nameLocation":"6848:7:15","nodeType":"VariableDeclaration","scope":2429,"src":"6843:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"value","nameLocation":"6865:5:15","nodeType":"VariableDeclaration","scope":2429,"src":"6857:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:15"},"scope":3288,"src":"6704:515:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2447,"nodeType":"Block","src":"7516:63:15","statements":[{"expression":{"arguments":[{"id":2438,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"7542:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2442,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"7558:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:15","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:15","memberName":"length","nodeType":"MemberAccess","src":"7552:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2437,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2448,2479],"referencedDeclaration":2479,"src":"7533:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2436,"id":2446,"nodeType":"Return","src":"7526:46:15"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"7225:216:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:15","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"input","nameLocation":"7478:5:15","nodeType":"VariableDeclaration","scope":2448,"src":"7464:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2431,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:15"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2448,"src":"7508:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2434,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:15"},"scope":3288,"src":"7446:133:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"7984:151:15","statements":[{"assignments":[2461,2463],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"success","nameLocation":"8000:7:15","nodeType":"VariableDeclaration","scope":2478,"src":"7995:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2460,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"8016:5:15","nodeType":"VariableDeclaration","scope":2478,"src":"8009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2462,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2469,"initialValue":{"arguments":[{"id":2465,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"8037:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2466,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"8044:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2467,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"8051:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2464,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2500,2542],"referencedDeclaration":2542,"src":"8025:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:15"},{"condition":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:15","subExpression":{"id":2470,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"8070:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"8065:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2472,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8086:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"RevertStatement","src":"8079:27:15"}},{"expression":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8123:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2459,"id":2477,"nodeType":"Return","src":"8116:12:15"}]},"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"7585:296:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:15","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"input","nameLocation":"7918:5:15","nodeType":"VariableDeclaration","scope":2479,"src":"7904:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"begin","nameLocation":"7933:5:15","nodeType":"VariableDeclaration","scope":2479,"src":"7925:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"end","nameLocation":"7948:3:15","nodeType":"VariableDeclaration","scope":2479,"src":"7940:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:15"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"7976:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2457,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:15"},"scope":3288,"src":"7886:249:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"8526:82:15","statements":[{"expression":{"arguments":[{"id":2490,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"8571:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2494,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"8587:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2492,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:15","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:15","memberName":"length","nodeType":"MemberAccess","src":"8581:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"8543:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2488,"id":2498,"nodeType":"Return","src":"8536:65:15"}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"8141:287:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:15","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"input","nameLocation":"8468:5:15","nodeType":"VariableDeclaration","scope":2500,"src":"8454:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2481,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:15"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"success","nameLocation":"8503:7:15","nodeType":"VariableDeclaration","scope":2500,"src":"8498:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2484,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"value","nameLocation":"8519:5:15","nodeType":"VariableDeclaration","scope":2500,"src":"8512:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2486,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:15"},"scope":3288,"src":"8433:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2505,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:15","nodeType":"VariableDeclaration","scope":3288,"src":"8614:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2541,"nodeType":"Block","src":"9130:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"9144:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2522,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"9156:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2520,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:15","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:15","memberName":"length","nodeType":"MemberAccess","src":"9150:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"9173:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2527,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"9181:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"9140:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2518,"id":2533,"nodeType":"Return","src":"9186:17:15"}},{"expression":{"arguments":[{"id":2536,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"9248:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2537,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"9255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2538,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"9262:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2535,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"9220:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2518,"id":2540,"nodeType":"Return","src":"9213:53:15"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"8671:303:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:15","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"input","nameLocation":"9023:5:15","nodeType":"VariableDeclaration","scope":2542,"src":"9009:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2507,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"begin","nameLocation":"9046:5:15","nodeType":"VariableDeclaration","scope":2542,"src":"9038:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"end","nameLocation":"9069:3:15","nodeType":"VariableDeclaration","scope":2542,"src":"9061:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:15"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"success","nameLocation":"9107:7:15","nodeType":"VariableDeclaration","scope":2542,"src":"9102:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2514,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"value","nameLocation":"9123:5:15","nodeType":"VariableDeclaration","scope":2542,"src":"9116:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2516,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:15"},"scope":3288,"src":"8979:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2662,"nodeType":"Block","src":"9673:812:15","statements":[{"assignments":[2557],"declarations":[{"constant":false,"id":2557,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:15","nodeType":"VariableDeclaration","scope":2662,"src":"9683:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2556,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2562,"initialValue":{"arguments":[{"id":2560,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"9711:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2558,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:15","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:15"},{"assignments":[2564],"declarations":[{"constant":false,"id":2564,"mutability":"mutable","name":"sign","nameLocation":"9781:4:15","nodeType":"VariableDeclaration","scope":2662,"src":"9774:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2563,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2580,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9788:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2566,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9797:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2575,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"9845:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2576,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2574,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"9822:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2572,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:15","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2568,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:15","typeDescriptions":{}}},"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:15"},{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:15","nodeType":"VariableDeclaration","scope":2662,"src":"9941:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2581,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2589,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2584,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:15","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:15"},{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:15","nodeType":"VariableDeclaration","scope":2662,"src":"9990:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2590,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2598,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"10010:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2593,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:15","typeDescriptions":{}}},"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:15"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"offset","nameLocation":"10047:6:15","nodeType":"VariableDeclaration","scope":2662,"src":"10039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2607,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10057:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2602,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"10073:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"10056:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:15"},{"assignments":[2609,2611],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:15","nodeType":"VariableDeclaration","scope":2662,"src":"10107:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2608,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:15","nodeType":"VariableDeclaration","scope":2662,"src":"10124:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"arguments":[{"id":2613,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10157:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"10164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2615,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2617,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"10180:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2612,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2322,2359],"referencedDeclaration":2359,"src":"10144:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10199:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10213:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2622,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"10224:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10341:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2641,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"10355:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2644,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"10383:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2555,"id":2659,"nodeType":"Return","src":"10461:17:15"},"id":2660,"nodeType":"IfStatement","src":"10337:141:15","trueBody":{"id":2655,"nodeType":"Block","src":"10399:56:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2649,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:15","memberName":"min","nodeType":"MemberAccess","src":"10427:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2555,"id":2654,"nodeType":"Return","src":"10413:31:15"}]}},"id":2661,"nodeType":"IfStatement","src":"10195:283:15","trueBody":{"id":2639,"nodeType":"Block","src":"10240:91:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2626,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"10268:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2634,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10310:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2632,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:15","typeDescriptions":{}}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:15","trueExpression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:15","subExpression":{"arguments":[{"id":2629,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10291:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2627,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:15","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2555,"id":2638,"nodeType":"Return","src":"10254:66:15"}]}}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"9279:223:15","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2663,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:15","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"input","nameLocation":"9567:5:15","nodeType":"VariableDeclaration","scope":2663,"src":"9553:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2544,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"begin","nameLocation":"9590:5:15","nodeType":"VariableDeclaration","scope":2663,"src":"9582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"end","nameLocation":"9613:3:15","nodeType":"VariableDeclaration","scope":2663,"src":"9605:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:15"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"success","nameLocation":"9650:7:15","nodeType":"VariableDeclaration","scope":2663,"src":"9645:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2551,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"value","nameLocation":"9666:5:15","nodeType":"VariableDeclaration","scope":2663,"src":"9659:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2553,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:15"},"scope":3288,"src":"9507:978:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2681,"nodeType":"Block","src":"10830:67:15","statements":[{"expression":{"arguments":[{"id":2672,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10860:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2676,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10876:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2674,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:15","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:15","memberName":"length","nodeType":"MemberAccess","src":"10870:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2682,2713],"referencedDeclaration":2713,"src":"10847:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2670,"id":2680,"nodeType":"Return","src":"10840:50:15"}]},"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"10491:259:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:15","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"input","nameLocation":"10791:5:15","nodeType":"VariableDeclaration","scope":2682,"src":"10777:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2665,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:15"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"10821:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:15"},"scope":3288,"src":"10755:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2712,"nodeType":"Block","src":"11318:156:15","statements":[{"assignments":[2695,2697],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"success","nameLocation":"11334:7:15","nodeType":"VariableDeclaration","scope":2712,"src":"11329:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2694,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"value","nameLocation":"11351:5:15","nodeType":"VariableDeclaration","scope":2712,"src":"11343:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2703,"initialValue":{"arguments":[{"id":2699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"11376:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2700,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"11383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2701,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"11390:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2698,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2734,2771],"referencedDeclaration":2771,"src":"11360:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:15"},{"condition":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:15","subExpression":{"id":2704,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"11409:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"nodeType":"IfStatement","src":"11404:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2706,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"11425:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2708,"nodeType":"RevertStatement","src":"11418:27:15"}},{"expression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"11462:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2693,"id":2711,"nodeType":"Return","src":"11455:12:15"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"10903:307:15","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:15","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"input","nameLocation":"11251:5:15","nodeType":"VariableDeclaration","scope":2713,"src":"11237:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2684,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"begin","nameLocation":"11266:5:15","nodeType":"VariableDeclaration","scope":2713,"src":"11258:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"end","nameLocation":"11281:3:15","nodeType":"VariableDeclaration","scope":2713,"src":"11273:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:15"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"11309:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:15"},"scope":3288,"src":"11215:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2733,"nodeType":"Block","src":"11801:86:15","statements":[{"expression":{"arguments":[{"id":2724,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"11850:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2728,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"11866:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2726,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:15","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:15","memberName":"length","nodeType":"MemberAccess","src":"11860:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2723,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"11818:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2722,"id":2732,"nodeType":"Return","src":"11811:69:15"}]},"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"11480:218:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:15","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"input","nameLocation":"11742:5:15","nodeType":"VariableDeclaration","scope":2734,"src":"11728:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2715,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:15"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"success","nameLocation":"11777:7:15","nodeType":"VariableDeclaration","scope":2734,"src":"11772:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2718,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"value","nameLocation":"11794:5:15","nodeType":"VariableDeclaration","scope":2734,"src":"11786:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:15"},"scope":3288,"src":"11703:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2770,"nodeType":"Block","src":"12295:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12309:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"12321:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2749,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:15","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:15","memberName":"length","nodeType":"MemberAccess","src":"12315:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2755,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"12338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2756,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12346:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2763,"nodeType":"IfStatement","src":"12305:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2747,"id":2762,"nodeType":"Return","src":"12351:17:15"}},{"expression":{"arguments":[{"id":2765,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"12417:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2766,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"12424:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2767,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12431:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2764,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"12385:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2747,"id":2769,"nodeType":"Return","src":"12378:57:15"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"11893:241:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:15","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"input","nameLocation":"12187:5:15","nodeType":"VariableDeclaration","scope":2771,"src":"12173:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"begin","nameLocation":"12210:5:15","nodeType":"VariableDeclaration","scope":2771,"src":"12202:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"end","nameLocation":"12233:3:15","nodeType":"VariableDeclaration","scope":2771,"src":"12225:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:15"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"success","nameLocation":"12271:7:15","nodeType":"VariableDeclaration","scope":2771,"src":"12266:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2743,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"value","nameLocation":"12288:5:15","nodeType":"VariableDeclaration","scope":2771,"src":"12280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:15"},"scope":3288,"src":"12139:303:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2873,"nodeType":"Block","src":"12851:881:15","statements":[{"assignments":[2786],"declarations":[{"constant":false,"id":2786,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:15","nodeType":"VariableDeclaration","scope":2873,"src":"12861:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2785,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2791,"initialValue":{"arguments":[{"id":2789,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"12889:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2787,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:15","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:15"},{"assignments":[2793],"declarations":[{"constant":false,"id":2793,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:15","nodeType":"VariableDeclaration","scope":2873,"src":"12943:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2792,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2813,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"12961:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"12967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2803,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"13011:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2804,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"13019:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2802,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"12988:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2800,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:15","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2807,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:15","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:15"},{"assignments":[2815],"declarations":[{"constant":false,"id":2815,"mutability":"mutable","name":"offset","nameLocation":"13131:6:15","nodeType":"VariableDeclaration","scope":2873,"src":"13123:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2821,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2816,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"13140:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"13140:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:15"},{"assignments":[2823],"declarations":[{"constant":false,"id":2823,"mutability":"mutable","name":"result","nameLocation":"13181:6:15","nodeType":"VariableDeclaration","scope":2873,"src":"13173:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2825,"initialValue":{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:15"},{"body":{"id":2867,"nodeType":"Block","src":"13248:447:15","statements":[{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"chr","nameLocation":"13268:3:15","nodeType":"VariableDeclaration","scope":2867,"src":"13262:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2838,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2849,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2844,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"13317:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"13325:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2843,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"13294:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2841,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:15","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2840,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13274:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"13347:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2857,"nodeType":"IfStatement","src":"13343:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2784,"id":2856,"nodeType":"Return","src":"13357:17:15"}},{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"13388:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2861,"nodeType":"ExpressionStatement","src":"13388:12:15"},{"id":2866,"nodeType":"UncheckedBlock","src":"13414:271:15","statements":[{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2862,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"13657:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2863,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"13667:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"13657:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"13234:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2833,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"13238:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"initializationExpression":{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"i","nameLocation":"13214:1:15","nodeType":"VariableDeclaration","scope":2868,"src":"13206:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2831,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"13218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2829,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"13226:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:15","subExpression":{"id":2835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"13245:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2837,"nodeType":"ExpressionStatement","src":"13243:3:15"},"nodeType":"ForStatement","src":"13201:494:15"},{"expression":{"components":[{"hexValue":"74727565","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"13718:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2784,"id":2872,"nodeType":"Return","src":"13704:21:15"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"12448:227:15","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2874,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:15","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"input","nameLocation":"12744:5:15","nodeType":"VariableDeclaration","scope":2874,"src":"12730:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2773,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"begin","nameLocation":"12767:5:15","nodeType":"VariableDeclaration","scope":2874,"src":"12759:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"end","nameLocation":"12790:3:15","nodeType":"VariableDeclaration","scope":2874,"src":"12782:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:15"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"success","nameLocation":"12827:7:15","nodeType":"VariableDeclaration","scope":2874,"src":"12822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2780,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"value","nameLocation":"12844:5:15","nodeType":"VariableDeclaration","scope":2874,"src":"12836:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:15"},"scope":3288,"src":"12680:1052:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2892,"nodeType":"Block","src":"14030:67:15","statements":[{"expression":{"arguments":[{"id":2883,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14060:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2887,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14076:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2885,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:15","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:15","memberName":"length","nodeType":"MemberAccess","src":"14070:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2882,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2893,2924],"referencedDeclaration":2924,"src":"14047:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2881,"id":2891,"nodeType":"Return","src":"14040:50:15"}]},"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"13738:212:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:15","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"input","nameLocation":"13991:5:15","nodeType":"VariableDeclaration","scope":2893,"src":"13977:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2876,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:15"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"14021:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2879,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:15"},"scope":3288,"src":"13955:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"14470:165:15","statements":[{"assignments":[2906,2908],"declarations":[{"constant":false,"id":2906,"mutability":"mutable","name":"success","nameLocation":"14486:7:15","nodeType":"VariableDeclaration","scope":2923,"src":"14481:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2905,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"value","nameLocation":"14503:5:15","nodeType":"VariableDeclaration","scope":2923,"src":"14495:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2914,"initialValue":{"arguments":[{"id":2910,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"14528:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2911,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"14535:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2912,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14542:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2909,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2945,3049],"referencedDeclaration":3049,"src":"14512:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:15"},{"condition":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:15","subExpression":{"id":2915,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"14561:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"IfStatement","src":"14556:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2917,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"14577:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2919,"nodeType":"RevertStatement","src":"14570:36:15"}},{"expression":{"id":2921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"14623:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2904,"id":2922,"nodeType":"Return","src":"14616:12:15"}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"14103:259:15","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:15","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"input","nameLocation":"14403:5:15","nodeType":"VariableDeclaration","scope":2924,"src":"14389:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2895,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"begin","nameLocation":"14418:5:15","nodeType":"VariableDeclaration","scope":2924,"src":"14410:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"end","nameLocation":"14433:3:15","nodeType":"VariableDeclaration","scope":2924,"src":"14425:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:15"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"14461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:15"},"scope":3288,"src":"14367:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"14942:70:15","statements":[{"expression":{"arguments":[{"id":2935,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"14975:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2939,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"14991:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2937,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:15","typeDescriptions":{}}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:15","memberName":"length","nodeType":"MemberAccess","src":"14985:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2945,3049],"referencedDeclaration":3049,"src":"14959:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2933,"id":2943,"nodeType":"Return","src":"14952:53:15"}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"14641:198:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:15","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"input","nameLocation":"14883:5:15","nodeType":"VariableDeclaration","scope":2945,"src":"14869:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2926,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:15"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"success","nameLocation":"14918:7:15","nodeType":"VariableDeclaration","scope":2945,"src":"14913:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2929,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"value","nameLocation":"14935:5:15","nodeType":"VariableDeclaration","scope":2945,"src":"14927:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:15"},"scope":3288,"src":"14844:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3048,"nodeType":"Block","src":"15405:733:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"15419:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2962,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"15431:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2960,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:15","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:15","memberName":"length","nodeType":"MemberAccess","src":"15425:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15448:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2967,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"15456:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2977,"nodeType":"IfStatement","src":"15415:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2971,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:15","typeDescriptions":{}}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2958,"id":2976,"nodeType":"Return","src":"15461:26:15"}},{"assignments":[2979],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:15","nodeType":"VariableDeclaration","scope":3048,"src":"15498:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3002,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"15516:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15522:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2991,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"15572:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2989,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:15","typeDescriptions":{}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2993,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2988,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"15543:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2986,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:15","typeDescriptions":{}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2996,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:15","typeDescriptions":{}}},"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:15"},{"assignments":[3004],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:15","nodeType":"VariableDeclaration","scope":3048,"src":"15684:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3012,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3006,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"15714:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"15714:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"15801:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3014,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15807:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3016,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"15816:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3046,"nodeType":"Block","src":"16081:51:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:15","typeDescriptions":{}}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2958,"id":3045,"nodeType":"Return","src":"16095:26:15"}]},"id":3047,"nodeType":"IfStatement","src":"15797:335:15","trueBody":{"id":3038,"nodeType":"Block","src":"15832:243:15","statements":[{"assignments":[3019,3021],"declarations":[{"constant":false,"id":3019,"mutability":"mutable","name":"s","nameLocation":"15953:1:15","nodeType":"VariableDeclaration","scope":3038,"src":"15948:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3018,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"v","nameLocation":"15964:1:15","nodeType":"VariableDeclaration","scope":3038,"src":"15956:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"arguments":[{"id":3023,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"16001:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3024,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"16008:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3025,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"16015:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3022,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"15969:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:15"},{"expression":{"components":[{"id":3028,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"16041:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3033,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"16060:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3031,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:15","typeDescriptions":{}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:15","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2958,"id":3037,"nodeType":"Return","src":"16033:31:15"}]}}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"15018:226:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3049,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:15","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"input","nameLocation":"15297:5:15","nodeType":"VariableDeclaration","scope":3049,"src":"15283:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2947,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"begin","nameLocation":"15320:5:15","nodeType":"VariableDeclaration","scope":3049,"src":"15312:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"end","nameLocation":"15343:3:15","nodeType":"VariableDeclaration","scope":3049,"src":"15335:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:15"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"success","nameLocation":"15381:7:15","nodeType":"VariableDeclaration","scope":3049,"src":"15376:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2954,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"value","nameLocation":"15398:5:15","nodeType":"VariableDeclaration","scope":3049,"src":"15390:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:15"},"scope":3288,"src":"15249:889:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"16207:461:15","statements":[{"assignments":[3057],"declarations":[{"constant":false,"id":3057,"mutability":"mutable","name":"value","nameLocation":"16223:5:15","nodeType":"VariableDeclaration","scope":3108,"src":"16217:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3056,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3062,"initialValue":{"arguments":[{"id":3060,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"16237:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3058,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:15","typeDescriptions":{}}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:15"},{"id":3105,"nodeType":"UncheckedBlock","src":"16401:238:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16429:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16443:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16489:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16503:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16550:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16564:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3097,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:15","memberName":"max","nodeType":"MemberAccess","src":"16613:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3055,"id":3101,"nodeType":"Return","src":"16606:22:15"},"id":3102,"nodeType":"IfStatement","src":"16546:82:15","trueBody":{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16576:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3095,"nodeType":"ExpressionStatement","src":"16576:11:15"}},"id":3103,"nodeType":"IfStatement","src":"16485:143:15","trueBody":{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16516:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3084,"nodeType":"ExpressionStatement","src":"16516:11:15"}},"id":3104,"nodeType":"IfStatement","src":"16425:203:15","trueBody":{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16455:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3073,"nodeType":"ExpressionStatement","src":"16455:11:15"}}]},{"expression":{"id":3106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"16656:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3055,"id":3107,"nodeType":"Return","src":"16649:12:15"}]},"id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:15","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"chr","nameLocation":"16173:3:15","nodeType":"VariableDeclaration","scope":3109,"src":"16166:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3050,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:15"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"16200:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3053,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:15"},"scope":3288,"src":"16144:524:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3274,"nodeType":"Block","src":"17334:1331:15","statements":[{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:15","nodeType":"VariableDeclaration","scope":3274,"src":"17344:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3117,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3123,"initialValue":{"arguments":[{"id":3121,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"17372:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3119,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:15","typeDescriptions":{}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:15"},{"assignments":[3125],"declarations":[{"constant":false,"id":3125,"mutability":"mutable","name":"output","nameLocation":"17401:6:15","nodeType":"VariableDeclaration","scope":3274,"src":"17388:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3124,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3133,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3129,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"17424:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:15","memberName":"length","nodeType":"MemberAccess","src":"17424:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3126,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:15"},{"assignments":[3135],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:15","nodeType":"VariableDeclaration","scope":3274,"src":"17471:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3137,"initialValue":{"hexValue":"30","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:15"},{"body":{"id":3266,"nodeType":"Block","src":"17546:854:15","statements":[{"assignments":[3149],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"char","nameLocation":"17567:4:15","nodeType":"VariableDeclaration","scope":3266,"src":"17560:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3148,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3157,"initialValue":{"arguments":[{"arguments":[{"id":3153,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"17604:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"17612:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"17581:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3150,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:15","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"17635:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3162,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17670:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3160,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:15","typeDescriptions":{}}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3264,"nodeType":"Block","src":"18328:62:15","statements":[{"expression":{"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3257,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"18346:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3260,"indexExpression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:15","subExpression":{"id":3258,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"18353:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3261,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"18371:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3263,"nodeType":"ExpressionStatement","src":"18346:29:15"}]},"id":3265,"nodeType":"IfStatement","src":"17629:761:15","trueBody":{"id":3256,"nodeType":"Block","src":"17685:637:15","statements":[{"expression":{"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3171,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"17703:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3174,"indexExpression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:15","subExpression":{"id":3172,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"17710:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3177,"nodeType":"ExpressionStatement","src":"17703:29:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3178,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17754:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17823:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17892:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"18030:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"18099:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"18169:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3249,"nodeType":"IfStatement","src":"18165:143:15","trueBody":{"id":3248,"nodeType":"Block","src":"18183:125:15","statements":[{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3241,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"18261:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3244,"indexExpression":{"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:15","subExpression":{"id":3242,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"18268:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3247,"nodeType":"ExpressionStatement","src":"18261:28:15"}]}},"id":3250,"nodeType":"IfStatement","src":"18095:213:15","trueBody":{"expression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3231,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"18113:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3234,"indexExpression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:15","subExpression":{"id":3232,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"18120:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3237,"nodeType":"ExpressionStatement","src":"18113:29:15"}},"id":3251,"nodeType":"IfStatement","src":"18026:282:15","trueBody":{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3221,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"18044:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3224,"indexExpression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:15","subExpression":{"id":3222,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"18051:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3227,"nodeType":"ExpressionStatement","src":"18044:28:15"}},"id":3252,"nodeType":"IfStatement","src":"17957:351:15","trueBody":{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3211,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"17975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3214,"indexExpression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:15","subExpression":{"id":3212,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"17982:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3217,"nodeType":"ExpressionStatement","src":"17975:28:15"}},"id":3253,"nodeType":"IfStatement","src":"17888:420:15","trueBody":{"expression":{"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3201,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"17906:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3204,"indexExpression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:15","subExpression":{"id":3202,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"17913:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3207,"nodeType":"ExpressionStatement","src":"17906:28:15"}},"id":3254,"nodeType":"IfStatement","src":"17819:489:15","trueBody":{"expression":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3191,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"17837:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3194,"indexExpression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:15","subExpression":{"id":3192,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"17844:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3197,"nodeType":"ExpressionStatement","src":"17837:28:15"}},"id":3255,"nodeType":"IfStatement","src":"17750:558:15","trueBody":{"expression":{"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3181,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"17768:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3184,"indexExpression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:15","subExpression":{"id":3182,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"17775:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3187,"nodeType":"ExpressionStatement","src":"17768:28:15"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"17522:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3142,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"17526:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:15","memberName":"length","nodeType":"MemberAccess","src":"17526:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3267,"initializationExpression":{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"i","nameLocation":"17519:1:15","nodeType":"VariableDeclaration","scope":3267,"src":"17511:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3140,"nodeType":"VariableDeclarationStatement","src":"17511:9:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:15","subExpression":{"id":3145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"17543:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"17541:3:15"},"nodeType":"ForStatement","src":"17506:894:15"},{"AST":{"nativeSrc":"18498:129:15","nodeType":"YulBlock","src":"18498:129:15","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:15","nodeType":"YulIdentifier","src":"18519:6:15"},{"name":"outputLength","nativeSrc":"18527:12:15","nodeType":"YulIdentifier","src":"18527:12:15"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:15","nodeType":"YulIdentifier","src":"18512:6:15"},"nativeSrc":"18512:28:15","nodeType":"YulFunctionCall","src":"18512:28:15"},"nativeSrc":"18512:28:15","nodeType":"YulExpressionStatement","src":"18512:28:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:15","nodeType":"YulLiteral","src":"18560:4:15","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:15","nodeType":"YulIdentifier","src":"18570:6:15"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:15","nodeType":"YulLiteral","src":"18582:1:15","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:15","nodeType":"YulLiteral","src":"18589:1:15","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:15","nodeType":"YulIdentifier","src":"18596:12:15"},{"kind":"number","nativeSrc":"18610:2:15","nodeType":"YulLiteral","src":"18610:2:15","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:15","nodeType":"YulIdentifier","src":"18592:3:15"},"nativeSrc":"18592:21:15","nodeType":"YulFunctionCall","src":"18592:21:15"}],"functionName":{"name":"shr","nativeSrc":"18585:3:15","nodeType":"YulIdentifier","src":"18585:3:15"},"nativeSrc":"18585:29:15","nodeType":"YulFunctionCall","src":"18585:29:15"}],"functionName":{"name":"shl","nativeSrc":"18578:3:15","nodeType":"YulIdentifier","src":"18578:3:15"},"nativeSrc":"18578:37:15","nodeType":"YulFunctionCall","src":"18578:37:15"}],"functionName":{"name":"add","nativeSrc":"18566:3:15","nodeType":"YulIdentifier","src":"18566:3:15"},"nativeSrc":"18566:50:15","nodeType":"YulFunctionCall","src":"18566:50:15"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:15","nodeType":"YulIdentifier","src":"18553:6:15"},"nativeSrc":"18553:64:15","nodeType":"YulFunctionCall","src":"18553:64:15"},"nativeSrc":"18553:64:15","nodeType":"YulExpressionStatement","src":"18553:64:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3125,"isOffset":false,"isSlot":false,"src":"18519:6:15","valueSize":1},{"declaration":3125,"isOffset":false,"isSlot":false,"src":"18570:6:15","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"18527:12:15","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"18596:12:15","valueSize":1}],"flags":["memory-safe"],"id":3268,"nodeType":"InlineAssembly","src":"18473:154:15"},{"expression":{"arguments":[{"id":3271,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"18651:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3269,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:15","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3116,"id":3273,"nodeType":"Return","src":"18637:21:15"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"16674:576:15","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"input","nameLocation":"17289:5:15","nodeType":"VariableDeclaration","scope":3275,"src":"17275:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3111,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"17319:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3114,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:15"},"scope":3288,"src":"17255:1410:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"19050:225:15","statements":[{"AST":{"nativeSrc":"19199:70:15","nodeType":"YulBlock","src":"19199:70:15","statements":[{"nativeSrc":"19213:46:15","nodeType":"YulAssignment","src":"19213:46:15","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:15","nodeType":"YulIdentifier","src":"19232:6:15"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:15","nodeType":"YulLiteral","src":"19244:4:15","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:15","nodeType":"YulIdentifier","src":"19250:6:15"}],"functionName":{"name":"add","nativeSrc":"19240:3:15","nodeType":"YulIdentifier","src":"19240:3:15"},"nativeSrc":"19240:17:15","nodeType":"YulFunctionCall","src":"19240:17:15"}],"functionName":{"name":"add","nativeSrc":"19228:3:15","nodeType":"YulIdentifier","src":"19228:3:15"},"nativeSrc":"19228:30:15","nodeType":"YulFunctionCall","src":"19228:30:15"}],"functionName":{"name":"mload","nativeSrc":"19222:5:15","nodeType":"YulIdentifier","src":"19222:5:15"},"nativeSrc":"19222:37:15","nodeType":"YulFunctionCall","src":"19222:37:15"},"variableNames":[{"name":"value","nativeSrc":"19213:5:15","nodeType":"YulIdentifier","src":"19213:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3278,"isOffset":false,"isSlot":false,"src":"19232:6:15","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"19250:6:15","valueSize":1},{"declaration":3283,"isOffset":false,"isSlot":false,"src":"19213:5:15","valueSize":1}],"flags":["memory-safe"],"id":3285,"nodeType":"InlineAssembly","src":"19174:95:15"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"18671:268:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:15","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:15","nodeType":"VariableDeclaration","scope":3287,"src":"18976:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3277,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"offset","nameLocation":"19005:6:15","nodeType":"VariableDeclaration","scope":3287,"src":"18997:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:15"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"value","nameLocation":"19043:5:15","nodeType":"VariableDeclaration","scope":3287,"src":"19035:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:15"},"scope":3288,"src":"18944:331:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3289,"src":"297:18980:15","usedErrors":[1946,1949,1952],"usedEvents":[]}],"src":"101:19177:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3636]},"id":3637,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3290,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3636,"linearizedBaseContracts":[3636],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3296,"members":[{"id":3292,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":3293,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":3294,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":3295,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":3297,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3299,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3304,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":3304,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3309,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":3309,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":3361,"nodeType":"Block","src":"2285:622:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3324,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"2299:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:16","memberName":"length","nodeType":"MemberAccess","src":"2299:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3359,"nodeType":"Block","src":"2793:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3346,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:16","typeDescriptions":{}}},"id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3350,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"2827:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3294,"src":"2827:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3354,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"2872:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:16","memberName":"length","nodeType":"MemberAccess","src":"2872:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:16","typeDescriptions":{}}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3323,"id":3358,"nodeType":"Return","src":"2807:83:16"}]},"id":3360,"nodeType":"IfStatement","src":"2295:606:16","trueBody":{"id":3345,"nodeType":"Block","src":"2323:464:16","statements":[{"assignments":[3329],"declarations":[{"constant":false,"id":3329,"mutability":"mutable","name":"r","nameLocation":"2345:1:16","nodeType":"VariableDeclaration","scope":3345,"src":"2337:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3330,"nodeType":"VariableDeclarationStatement","src":"2337:9:16"},{"assignments":[3332],"declarations":[{"constant":false,"id":3332,"mutability":"mutable","name":"s","nameLocation":"2368:1:16","nodeType":"VariableDeclaration","scope":3345,"src":"2360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3333,"nodeType":"VariableDeclarationStatement","src":"2360:9:16"},{"assignments":[3335],"declarations":[{"constant":false,"id":3335,"mutability":"mutable","name":"v","nameLocation":"2389:1:16","nodeType":"VariableDeclaration","scope":3345,"src":"2383:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3334,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3336,"nodeType":"VariableDeclarationStatement","src":"2383:7:16"},{"AST":{"nativeSrc":"2560:171:16","nodeType":"YulBlock","src":"2560:171:16","statements":[{"nativeSrc":"2578:32:16","nodeType":"YulAssignment","src":"2578:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:16","nodeType":"YulIdentifier","src":"2593:9:16"},{"kind":"number","nativeSrc":"2604:4:16","nodeType":"YulLiteral","src":"2604:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:16","nodeType":"YulIdentifier","src":"2589:3:16"},"nativeSrc":"2589:20:16","nodeType":"YulFunctionCall","src":"2589:20:16"}],"functionName":{"name":"mload","nativeSrc":"2583:5:16","nodeType":"YulIdentifier","src":"2583:5:16"},"nativeSrc":"2583:27:16","nodeType":"YulFunctionCall","src":"2583:27:16"},"variableNames":[{"name":"r","nativeSrc":"2578:1:16","nodeType":"YulIdentifier","src":"2578:1:16"}]},{"nativeSrc":"2627:32:16","nodeType":"YulAssignment","src":"2627:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:16","nodeType":"YulIdentifier","src":"2642:9:16"},{"kind":"number","nativeSrc":"2653:4:16","nodeType":"YulLiteral","src":"2653:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:16","nodeType":"YulIdentifier","src":"2638:3:16"},"nativeSrc":"2638:20:16","nodeType":"YulFunctionCall","src":"2638:20:16"}],"functionName":{"name":"mload","nativeSrc":"2632:5:16","nodeType":"YulIdentifier","src":"2632:5:16"},"nativeSrc":"2632:27:16","nodeType":"YulFunctionCall","src":"2632:27:16"},"variableNames":[{"name":"s","nativeSrc":"2627:1:16","nodeType":"YulIdentifier","src":"2627:1:16"}]},{"nativeSrc":"2676:41:16","nodeType":"YulAssignment","src":"2676:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:16","nodeType":"YulLiteral","src":"2686:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:16","nodeType":"YulIdentifier","src":"2699:9:16"},{"kind":"number","nativeSrc":"2710:4:16","nodeType":"YulLiteral","src":"2710:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:16","nodeType":"YulIdentifier","src":"2695:3:16"},"nativeSrc":"2695:20:16","nodeType":"YulFunctionCall","src":"2695:20:16"}],"functionName":{"name":"mload","nativeSrc":"2689:5:16","nodeType":"YulIdentifier","src":"2689:5:16"},"nativeSrc":"2689:27:16","nodeType":"YulFunctionCall","src":"2689:27:16"}],"functionName":{"name":"byte","nativeSrc":"2681:4:16","nodeType":"YulIdentifier","src":"2681:4:16"},"nativeSrc":"2681:36:16","nodeType":"YulFunctionCall","src":"2681:36:16"},"variableNames":[{"name":"v","nativeSrc":"2676:1:16","nodeType":"YulIdentifier","src":"2676:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"2578:1:16","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"2627:1:16","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"2593:9:16","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"2642:9:16","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"2699:9:16","valueSize":1},{"declaration":3335,"isOffset":false,"isSlot":false,"src":"2676:1:16","valueSize":1}],"flags":["memory-safe"],"id":3337,"nodeType":"InlineAssembly","src":"2535:196:16"},{"expression":{"arguments":[{"id":3339,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"2762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3340,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"2768:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3341,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"2771:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3342,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"2774:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3338,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3362,3442,3550],"referencedDeclaration":3550,"src":"2751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3323,"id":3344,"nodeType":"Return","src":"2744:32:16"}]}}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"hash","nameLocation":"2166:4:16","nodeType":"VariableDeclaration","scope":3362,"src":"2158:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"signature","nameLocation":"2193:9:16","nodeType":"VariableDeclaration","scope":3362,"src":"2180:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3313,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:16"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:16","nodeType":"VariableDeclaration","scope":3362,"src":"2232:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3316,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"err","nameLocation":"2264:3:16","nodeType":"VariableDeclaration","scope":3362,"src":"2251:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3319,"nodeType":"UserDefinedTypeName","pathNode":{"id":3318,"name":"RecoverError","nameLocations":["2251:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"2251:12:16"},"referencedDeclaration":3296,"src":"2251:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:16","nodeType":"VariableDeclaration","scope":3362,"src":"2269:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:16"},"scope":3636,"src":"2129:778:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"3801:168:16","statements":[{"assignments":[3373,3376,3378],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:16","nodeType":"VariableDeclaration","scope":3391,"src":"3812:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"error","nameLocation":"3844:5:16","nodeType":"VariableDeclaration","scope":3391,"src":"3831:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3375,"nodeType":"UserDefinedTypeName","pathNode":{"id":3374,"name":"RecoverError","nameLocations":["3831:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"3831:12:16"},"referencedDeclaration":3296,"src":"3831:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:16","nodeType":"VariableDeclaration","scope":3391,"src":"3851:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3383,"initialValue":{"arguments":[{"id":3380,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"3882:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3381,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"3888:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3379,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3362,3442,3550],"referencedDeclaration":3362,"src":"3871:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:16"},{"expression":{"arguments":[{"id":3385,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3920:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"id":3386,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"3927:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3384,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3908:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3296_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"3908:28:16"},{"expression":{"id":3389,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"3953:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3371,"id":3390,"nodeType":"Return","src":"3946:16:16"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"2913:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:16","nodeType":"FunctionDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"hash","nameLocation":"3739:4:16","nodeType":"VariableDeclaration","scope":3392,"src":"3731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"signature","nameLocation":"3758:9:16","nodeType":"VariableDeclaration","scope":3392,"src":"3745:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3366,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:16"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3392,"src":"3792:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:16"},"scope":3636,"src":"3714:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3441,"nodeType":"Block","src":"4348:342:16","statements":[{"id":3440,"nodeType":"UncheckedBlock","src":"4358:326:16","statements":[{"assignments":[3410],"declarations":[{"constant":false,"id":3410,"mutability":"mutable","name":"s","nameLocation":"4390:1:16","nodeType":"VariableDeclaration","scope":3440,"src":"4382:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3417,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3411,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4394:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:16"},{"assignments":[3419],"declarations":[{"constant":false,"id":3419,"mutability":"mutable","name":"v","nameLocation":"4591:1:16","nodeType":"VariableDeclaration","scope":3440,"src":"4585:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3418,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3432,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3424,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4610:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:16","typeDescriptions":{}}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3420,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:16","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:16"},{"expression":{"arguments":[{"id":3434,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"4659:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3435,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"4665:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3436,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4668:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3437,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"4671:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3433,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3362,3442,3550],"referencedDeclaration":3550,"src":"4648:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3408,"id":3439,"nodeType":"Return","src":"4641:32:16"}]}]},"documentation":{"id":3393,"nodeType":"StructuredDocumentation","src":"3975:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3442,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:16","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"hash","nameLocation":"4222:4:16","nodeType":"VariableDeclaration","scope":3442,"src":"4214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"r","nameLocation":"4244:1:16","nodeType":"VariableDeclaration","scope":3442,"src":"4236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"vs","nameLocation":"4263:2:16","nodeType":"VariableDeclaration","scope":3442,"src":"4255:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:16"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:16","nodeType":"VariableDeclaration","scope":3442,"src":"4295:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"err","nameLocation":"4327:3:16","nodeType":"VariableDeclaration","scope":3442,"src":"4314:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3404,"nodeType":"UserDefinedTypeName","pathNode":{"id":3403,"name":"RecoverError","nameLocations":["4314:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"4314:12:16"},"referencedDeclaration":3296,"src":"4314:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:16","nodeType":"VariableDeclaration","scope":3442,"src":"4332:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:16"},"scope":3636,"src":"4185:505:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"4903:164:16","statements":[{"assignments":[3455,3458,3460],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:16","nodeType":"VariableDeclaration","scope":3474,"src":"4914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3454,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"error","nameLocation":"4946:5:16","nodeType":"VariableDeclaration","scope":3474,"src":"4933:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3457,"nodeType":"UserDefinedTypeName","pathNode":{"id":3456,"name":"RecoverError","nameLocations":["4933:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"4933:12:16"},"referencedDeclaration":3296,"src":"4933:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3460,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:16","nodeType":"VariableDeclaration","scope":3474,"src":"4953:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3466,"initialValue":{"arguments":[{"id":3462,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"4984:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3463,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"4990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3464,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"4993:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3461,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3362,3442,3550],"referencedDeclaration":3442,"src":"4973:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:16"},{"expression":{"arguments":[{"id":3468,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"5018:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"id":3469,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"5025:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3467,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"5006:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3296_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3471,"nodeType":"ExpressionStatement","src":"5006:28:16"},{"expression":{"id":3472,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"5051:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3453,"id":3473,"nodeType":"Return","src":"5044:16:16"}]},"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"4696:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:16","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"hash","nameLocation":"4842:4:16","nodeType":"VariableDeclaration","scope":3475,"src":"4834:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"r","nameLocation":"4856:1:16","nodeType":"VariableDeclaration","scope":3475,"src":"4848:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"vs","nameLocation":"4867:2:16","nodeType":"VariableDeclaration","scope":3475,"src":"4859:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:16"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"4894:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:16"},"scope":3636,"src":"4817:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3549,"nodeType":"Block","src":"5382:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3496,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"6278:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:16","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"nodeType":"IfStatement","src":"6266:164:16","trueBody":{"id":3509,"nodeType":"Block","src":"6351:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:16","typeDescriptions":{}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3504,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6385:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3295,"src":"6385:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"id":3506,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"6417:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3493,"id":3508,"nodeType":"Return","src":"6365:54:16"}]}},{"assignments":[3512],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"signer","nameLocation":"6532:6:16","nodeType":"VariableDeclaration","scope":3549,"src":"6524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3511,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3519,"initialValue":{"arguments":[{"id":3514,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6551:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3515,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"6557:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3516,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6560:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3517,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"6563:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3513,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"6579:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:16","typeDescriptions":{}}},"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3539,"nodeType":"IfStatement","src":"6575:113:16","trueBody":{"id":3538,"nodeType":"Block","src":"6601:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3526,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:16","typeDescriptions":{}}},"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3530,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6635:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"6635:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:16","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3493,"id":3537,"nodeType":"Return","src":"6615:62:16"}]}},{"expression":{"components":[{"id":3540,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"6706:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3541,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6714:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"6714:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:16","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3493,"id":3548,"nodeType":"Return","src":"6698:49:16"}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"5073:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:16","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"hash","nameLocation":"5240:4:16","nodeType":"VariableDeclaration","scope":3550,"src":"5232:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"v","nameLocation":"5260:1:16","nodeType":"VariableDeclaration","scope":3550,"src":"5254:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3479,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"r","nameLocation":"5279:1:16","nodeType":"VariableDeclaration","scope":3550,"src":"5271:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"s","nameLocation":"5298:1:16","nodeType":"VariableDeclaration","scope":3550,"src":"5290:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:16"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:16","nodeType":"VariableDeclaration","scope":3550,"src":"5329:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3486,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"err","nameLocation":"5361:3:16","nodeType":"VariableDeclaration","scope":3550,"src":"5348:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3489,"nodeType":"UserDefinedTypeName","pathNode":{"id":3488,"name":"RecoverError","nameLocations":["5348:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"5348:12:16"},"referencedDeclaration":3296,"src":"5348:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:16","nodeType":"VariableDeclaration","scope":3550,"src":"5366:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:16"},"scope":3636,"src":"5203:1551:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3585,"nodeType":"Block","src":"6981:166:16","statements":[{"assignments":[3565,3568,3570],"declarations":[{"constant":false,"id":3565,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:16","nodeType":"VariableDeclaration","scope":3585,"src":"6992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"error","nameLocation":"7024:5:16","nodeType":"VariableDeclaration","scope":3585,"src":"7011:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"RecoverError","nameLocations":["7011:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"7011:12:16"},"referencedDeclaration":3296,"src":"7011:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:16","nodeType":"VariableDeclaration","scope":3585,"src":"7031:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3577,"initialValue":{"arguments":[{"id":3572,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"7062:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3573,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"7068:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3574,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"7071:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3575,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"7074:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3571,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3362,3442,3550],"referencedDeclaration":3550,"src":"7051:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3296_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:16"},{"expression":{"arguments":[{"id":3579,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"7098:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},{"id":3580,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7105:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3578,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"7086:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3296_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3582,"nodeType":"ExpressionStatement","src":"7086:28:16"},{"expression":{"id":3583,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"7131:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3563,"id":3584,"nodeType":"Return","src":"7124:16:16"}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"6760:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:16","nodeType":"FunctionDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"hash","nameLocation":"6912:4:16","nodeType":"VariableDeclaration","scope":3586,"src":"6904:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"v","nameLocation":"6924:1:16","nodeType":"VariableDeclaration","scope":3586,"src":"6918:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3554,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"r","nameLocation":"6935:1:16","nodeType":"VariableDeclaration","scope":3586,"src":"6927:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"s","nameLocation":"6946:1:16","nodeType":"VariableDeclaration","scope":3586,"src":"6938:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:16"},"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3586,"src":"6972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3561,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:16"},"scope":3636,"src":"6887:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"7352:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7366:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3596,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"7375:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"7375:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7462:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3602,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"7471:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"7471:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7567:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3610,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"7576:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3294,"src":"7576:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7701:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3622,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"7710:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3296_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3295,"src":"7710:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3630,"nodeType":"IfStatement","src":"7697:109:16","trueBody":{"id":3629,"nodeType":"Block","src":"7742:64:16","statements":[{"errorCall":{"arguments":[{"id":3626,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"7786:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3625,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"7763:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3628,"nodeType":"RevertStatement","src":"7756:39:16"}]}},"id":3631,"nodeType":"IfStatement","src":"7563:243:16","trueBody":{"id":3620,"nodeType":"Block","src":"7613:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3616,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"7670:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:16","typeDescriptions":{}}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3613,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"7634:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3619,"nodeType":"RevertStatement","src":"7627:53:16"}]}},"id":3632,"nodeType":"IfStatement","src":"7458:348:16","trueBody":{"id":3608,"nodeType":"Block","src":"7502:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3605,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"7523:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3607,"nodeType":"RevertStatement","src":"7516:30:16"}]}},"id":3633,"nodeType":"IfStatement","src":"7362:444:16","trueBody":{"id":3600,"nodeType":"Block","src":"7397:55:16","statements":[{"functionReturnParameters":3594,"id":3599,"nodeType":"Return","src":"7411:7:16"}]}}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"7153:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:16","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"error","nameLocation":"7314:5:16","nodeType":"VariableDeclaration","scope":3635,"src":"7301:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3589,"nodeType":"UserDefinedTypeName","pathNode":{"id":3588,"name":"RecoverError","nameLocations":["7301:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3296,"src":"7301:12:16"},"referencedDeclaration":3296,"src":"7301:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3296","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:16","nodeType":"VariableDeclaration","scope":3635,"src":"7321:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:16"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[],"src":"7352:0:16"},"scope":3636,"src":"7280:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3637,"src":"344:7470:16","usedErrors":[3299,3304,3309],"usedEvents":[]}],"src":"112:7703:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3863],"IERC5267":[403],"MessageHashUtils":[3949],"ShortString":[1551],"ShortStrings":[1762]},"id":3864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3638,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3864,"sourceUnit":3950,"src":"139:56:17","symbolAliases":[{"foreign":{"id":3639,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"147:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3864,"sourceUnit":1763,"src":"196:62:17","symbolAliases":[{"foreign":{"id":3641,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"204:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3642,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"218:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3864,"sourceUnit":404,"src":"259:55:17","symbolAliases":[{"foreign":{"id":3644,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"267:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3647,"name":"IERC5267","nameLocations":["1988:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"1988:8:17"},"id":3648,"nodeType":"InheritanceSpecifier","src":"1988:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"316:1643:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3863,"linearizedBaseContracts":[3863,403],"name":"EIP712","nameLocation":"1978:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3650,"libraryName":{"id":3649,"name":"ShortStrings","nameLocations":["2009:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"2009:12:17"},"nodeType":"UsingForDirective","src":"2003:25:17"},{"constant":true,"id":3655,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:17","nodeType":"VariableDeclaration","scope":3863,"src":"2034:140:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3652,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3657,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:17","nodeType":"VariableDeclaration","scope":3863,"src":"2373:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3659,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:17","nodeType":"VariableDeclaration","scope":3863,"src":"2427:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3661,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:17","nodeType":"VariableDeclaration","scope":3863,"src":"2473:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3663,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:17","nodeType":"VariableDeclaration","scope":3863,"src":"2517:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3665,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:17","nodeType":"VariableDeclaration","scope":3863,"src":"2560:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3668,"mutability":"immutable","name":"_name","nameLocation":"2637:5:17","nodeType":"VariableDeclaration","scope":3863,"src":"2607:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":3667,"nodeType":"UserDefinedTypeName","pathNode":{"id":3666,"name":"ShortString","nameLocations":["2607:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"2607:11:17"},"referencedDeclaration":1551,"src":"2607:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3671,"mutability":"immutable","name":"_version","nameLocation":"2678:8:17","nodeType":"VariableDeclaration","scope":3863,"src":"2648:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"},"typeName":{"id":3670,"nodeType":"UserDefinedTypeName","pathNode":{"id":3669,"name":"ShortString","nameLocations":["2648:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"2648:11:17"},"referencedDeclaration":1551,"src":"2648:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3673,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:17","nodeType":"VariableDeclaration","scope":3863,"src":"2742:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3672,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3675,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:17","nodeType":"VariableDeclaration","scope":3863,"src":"2826:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3674,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3732,"nodeType":"Block","src":"3483:376:17","statements":[{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3493:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3686,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"3532:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3684,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"3501:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"3501:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1551_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"src":"3493:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"id":3689,"nodeType":"ExpressionStatement","src":"3493:53:17"},{"expression":{"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3690,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3556:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3693,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"3601:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3691,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3567:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"3567:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1551_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"src":"3556:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"id":3696,"nodeType":"ExpressionStatement","src":"3556:62:17"},{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3628:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3701,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"3658:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3699,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:17","typeDescriptions":{}}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3698,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3705,"nodeType":"ExpressionStatement","src":"3628:36:17"},{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3706,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"3674:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3710,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3707:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3708,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:17","typeDescriptions":{}}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3707,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3714,"nodeType":"ExpressionStatement","src":"3674:42:17"},{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"3727:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ExpressionStatement","src":"3727:30:17"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3720,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"3767:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3721,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"3792:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3724,"nodeType":"ExpressionStatement","src":"3767:48:17"},{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"3825:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3728,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3726,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:17","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3731,"nodeType":"ExpressionStatement","src":"3825:27:17"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"2864:559:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3733,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"name","nameLocation":"3454:4:17","nodeType":"VariableDeclaration","scope":3733,"src":"3440:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3677,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"version","nameLocation":"3474:7:17","nodeType":"VariableDeclaration","scope":3733,"src":"3460:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3679,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:17"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[],"src":"3483:0:17"},"scope":3863,"src":"3428:431:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"4007:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3741,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}],"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:17","typeDescriptions":{}}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3743,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"4038:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3745,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3747,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"4070:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3756,"nodeType":"Block","src":"4146:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3753,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"4167:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3738,"id":3755,"nodeType":"Return","src":"4160:30:17"}]},"id":3757,"nodeType":"IfStatement","src":"4017:184:17","trueBody":{"id":3752,"nodeType":"Block","src":"4086:54:17","statements":[{"expression":{"id":3750,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"4107:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3738,"id":3751,"nodeType":"Return","src":"4100:29:17"}]}}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"3865:75:17","text":" @dev Returns the domain separator for the current chain."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:17","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[],"src":"3972:2:17"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"3998:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:17"},"scope":3863,"src":"3945:262:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3779,"nodeType":"Block","src":"4277:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3767,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4315:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3768,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4326:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3769,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"4339:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3770,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3774,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}],"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3772,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:17","typeDescriptions":{}}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3765,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3764,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3763,"id":3778,"nodeType":"Return","src":"4287:98:17"}]},"id":3780,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:17","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[],"src":"4243:2:17"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3780,"src":"4268:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:17"},"scope":3863,"src":"4213:179:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3795,"nodeType":"Block","src":"5103:90:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3790,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"5153:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3792,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"5175:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3788,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"5120:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3949_$","typeString":"type(library MessageHashUtils)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3948,"src":"5120:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3787,"id":3794,"nodeType":"Return","src":"5113:73:17"}]},"documentation":{"id":3781,"nodeType":"StructuredDocumentation","src":"4398:614:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:17","nodeType":"FunctionDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:17","nodeType":"VariableDeclaration","scope":3796,"src":"5043:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:17"},"returnParameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"5094:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:17"},"scope":3863,"src":"5017:176:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[402],"body":{"id":3837,"nodeType":"Block","src":"5571:229:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3816,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"5632:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3818,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"5659:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3820,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3824,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3863","typeString":"contract EIP712"}],"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3822,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:17","typeDescriptions":{}}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:17","typeDescriptions":{}}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3831,"nodeType":"ArrayTypeName","src":"5771:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3814,"id":3836,"nodeType":"Return","src":"5581:212:17"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"5199:39:17","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3838,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:17","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"5264:2:17"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"fields","nameLocation":"5348:6:17","nodeType":"VariableDeclaration","scope":3838,"src":"5341:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3799,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"name","nameLocation":"5382:4:17","nodeType":"VariableDeclaration","scope":3838,"src":"5368:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3801,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"version","nameLocation":"5414:7:17","nodeType":"VariableDeclaration","scope":3838,"src":"5400:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3803,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:17","nodeType":"VariableDeclaration","scope":3838,"src":"5435:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:17","nodeType":"VariableDeclaration","scope":3838,"src":"5464:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"salt","nameLocation":"5511:4:17","nodeType":"VariableDeclaration","scope":3838,"src":"5503:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:17","nodeType":"VariableDeclaration","scope":3838,"src":"5529:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3812,"nodeType":"ArrayTypeName","src":"5529:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:17"},"scope":3863,"src":"5243:557:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3849,"nodeType":"Block","src":"6181:65:17","statements":[{"expression":{"arguments":[{"id":3846,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"6225:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3844,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"6198:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6198:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1551_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3843,"id":3848,"nodeType":"Return","src":"6191:48:17"}]},"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"5806:256:17","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:17","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[],"src":"6140:2:17"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"6166:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3841,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:17"},"scope":3863,"src":"6120:126:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3861,"nodeType":"Block","src":"6636:71:17","statements":[{"expression":{"arguments":[{"id":3858,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"6683:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3856,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"6653:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1551","typeString":"ShortString"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6653:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1551_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1551_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3855,"id":3860,"nodeType":"Return","src":"6646:54:17"}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"6252:262:17","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:17","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"6595:2:17"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3862,"src":"6621:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3853,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:17"},"scope":3863,"src":"6572:135:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3864,"src":"1960:4749:17","usedErrors":[1559,1561],"usedEvents":[383]}],"src":"113:6597:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3949],"Strings":[3288]},"id":3950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3865,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3950,"sourceUnit":3289,"src":"149:39:18","symbolAliases":[{"foreign":{"id":3866,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"157:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"190:330:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3949,"linearizedBaseContracts":[3949],"name":"MessageHashUtils","nameLocation":"529:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3877,"nodeType":"Block","src":"1339:341:18","statements":[{"AST":{"nativeSrc":"1374:300:18","nodeType":"YulBlock","src":"1374:300:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:18","nodeType":"YulLiteral","src":"1395:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:18","nodeType":"YulLiteral","src":"1401:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:18","nodeType":"YulIdentifier","src":"1388:6:18"},"nativeSrc":"1388:48:18","nodeType":"YulFunctionCall","src":"1388:48:18"},"nativeSrc":"1388:48:18","nodeType":"YulExpressionStatement","src":"1388:48:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:18","nodeType":"YulLiteral","src":"1497:4:18","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:18","nodeType":"YulIdentifier","src":"1503:11:18"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:18","nodeType":"YulIdentifier","src":"1490:6:18"},"nativeSrc":"1490:25:18","nodeType":"YulFunctionCall","src":"1490:25:18"},"nativeSrc":"1490:25:18","nodeType":"YulExpressionStatement","src":"1490:25:18"},{"nativeSrc":"1569:31:18","nodeType":"YulAssignment","src":"1569:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:18","nodeType":"YulLiteral","src":"1589:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:18","nodeType":"YulLiteral","src":"1595:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:18","nodeType":"YulIdentifier","src":"1579:9:18"},"nativeSrc":"1579:21:18","nodeType":"YulFunctionCall","src":"1579:21:18"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:18","nodeType":"YulIdentifier","src":"1569:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3874,"isOffset":false,"isSlot":false,"src":"1569:6:18","valueSize":1},{"declaration":3871,"isOffset":false,"isSlot":false,"src":"1503:11:18","valueSize":1}],"flags":["memory-safe"],"id":3876,"nodeType":"InlineAssembly","src":"1349:325:18"}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"552:690:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3878,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:18","nodeType":"FunctionDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:18","nodeType":"VariableDeclaration","scope":3878,"src":"1279:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:18"},"returnParameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"digest","nameLocation":"1331:6:18","nodeType":"VariableDeclaration","scope":3878,"src":"1323:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:18"},"scope":3949,"src":"1247:433:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3903,"nodeType":"Block","src":"2257:143:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3895,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"2366:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:18","memberName":"length","nodeType":"MemberAccess","src":"2366:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3893,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2349:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3288_$","typeString":"type(library Strings)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2000,"src":"2349:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3891,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:18","typeDescriptions":{}}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3899,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"2384:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3887,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:18","typeDescriptions":{}}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3886,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3885,"id":3902,"nodeType":"Return","src":"2267:126:18"}]},"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"1686:480:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3904,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:18","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"message","nameLocation":"2216:7:18","nodeType":"VariableDeclaration","scope":3904,"src":"2203:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3880,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:18"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3904,"src":"2248:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:18"},"scope":3949,"src":"2171:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"2854:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3918,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"2910:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3919,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"2921:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3915,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3914,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3913,"id":3922,"nodeType":"Return","src":"2864:63:18"}]},"documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"2406:332:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:18","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"validator","nameLocation":"2792:9:18","nodeType":"VariableDeclaration","scope":3924,"src":"2784:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3906,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"data","nameLocation":"2816:4:18","nodeType":"VariableDeclaration","scope":3924,"src":"2803:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3908,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:18"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"2845:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:18"},"scope":3949,"src":"2743:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3935,"nodeType":"Block","src":"3216:216:18","statements":[{"AST":{"nativeSrc":"3251:175:18","nodeType":"YulBlock","src":"3251:175:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:18","nodeType":"YulLiteral","src":"3272:4:18","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:18","nodeType":"YulLiteral","src":"3278:10:18","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:18","nodeType":"YulIdentifier","src":"3265:6:18"},"nativeSrc":"3265:24:18","nodeType":"YulFunctionCall","src":"3265:24:18"},"nativeSrc":"3265:24:18","nodeType":"YulExpressionStatement","src":"3265:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:18","nodeType":"YulLiteral","src":"3309:4:18","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:18","nodeType":"YulLiteral","src":"3319:2:18","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:18","nodeType":"YulIdentifier","src":"3323:9:18"}],"functionName":{"name":"shl","nativeSrc":"3315:3:18","nodeType":"YulIdentifier","src":"3315:3:18"},"nativeSrc":"3315:18:18","nodeType":"YulFunctionCall","src":"3315:18:18"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:18","nodeType":"YulIdentifier","src":"3302:6:18"},"nativeSrc":"3302:32:18","nodeType":"YulFunctionCall","src":"3302:32:18"},"nativeSrc":"3302:32:18","nodeType":"YulExpressionStatement","src":"3302:32:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:18","nodeType":"YulLiteral","src":"3354:4:18","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:18","nodeType":"YulIdentifier","src":"3360:11:18"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:18","nodeType":"YulIdentifier","src":"3347:6:18"},"nativeSrc":"3347:25:18","nodeType":"YulFunctionCall","src":"3347:25:18"},"nativeSrc":"3347:25:18","nodeType":"YulExpressionStatement","src":"3347:25:18"},{"nativeSrc":"3385:31:18","nodeType":"YulAssignment","src":"3385:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:18","nodeType":"YulLiteral","src":"3405:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:18","nodeType":"YulLiteral","src":"3411:4:18","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:18","nodeType":"YulIdentifier","src":"3395:9:18"},"nativeSrc":"3395:21:18","nodeType":"YulFunctionCall","src":"3395:21:18"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:18","nodeType":"YulIdentifier","src":"3385:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3932,"isOffset":false,"isSlot":false,"src":"3385:6:18","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"3360:11:18","valueSize":1},{"declaration":3927,"isOffset":false,"isSlot":false,"src":"3323:9:18","valueSize":1}],"flags":["memory-safe"],"id":3934,"nodeType":"InlineAssembly","src":"3226:200:18"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"2940:129:18","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3936,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:18","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"validator","nameLocation":"3132:9:18","nodeType":"VariableDeclaration","scope":3936,"src":"3124:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3926,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:18","nodeType":"VariableDeclaration","scope":3936,"src":"3151:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:18"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"digest","nameLocation":"3208:6:18","nodeType":"VariableDeclaration","scope":3936,"src":"3200:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:18"},"scope":3949,"src":"3074:358:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"3983:265:18","statements":[{"AST":{"nativeSrc":"4018:224:18","nodeType":"YulBlock","src":"4018:224:18","statements":[{"nativeSrc":"4032:22:18","nodeType":"YulVariableDeclaration","src":"4032:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:18","nodeType":"YulLiteral","src":"4049:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:18","nodeType":"YulIdentifier","src":"4043:5:18"},"nativeSrc":"4043:11:18","nodeType":"YulFunctionCall","src":"4043:11:18"},"variables":[{"name":"ptr","nativeSrc":"4036:3:18","nodeType":"YulTypedName","src":"4036:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:18","nodeType":"YulIdentifier","src":"4074:3:18"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:18","nodeType":"YulLiteral","src":"4079:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:18","nodeType":"YulIdentifier","src":"4067:6:18"},"nativeSrc":"4067:23:18","nodeType":"YulFunctionCall","src":"4067:23:18"},"nativeSrc":"4067:23:18","nodeType":"YulExpressionStatement","src":"4067:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:18","nodeType":"YulIdentifier","src":"4114:3:18"},{"kind":"number","nativeSrc":"4119:4:18","nodeType":"YulLiteral","src":"4119:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:18","nodeType":"YulIdentifier","src":"4110:3:18"},"nativeSrc":"4110:14:18","nodeType":"YulFunctionCall","src":"4110:14:18"},{"name":"domainSeparator","nativeSrc":"4126:15:18","nodeType":"YulIdentifier","src":"4126:15:18"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:18","nodeType":"YulIdentifier","src":"4103:6:18"},"nativeSrc":"4103:39:18","nodeType":"YulFunctionCall","src":"4103:39:18"},"nativeSrc":"4103:39:18","nodeType":"YulExpressionStatement","src":"4103:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:18","nodeType":"YulIdentifier","src":"4166:3:18"},{"kind":"number","nativeSrc":"4171:4:18","nodeType":"YulLiteral","src":"4171:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:18","nodeType":"YulIdentifier","src":"4162:3:18"},"nativeSrc":"4162:14:18","nodeType":"YulFunctionCall","src":"4162:14:18"},{"name":"structHash","nativeSrc":"4178:10:18","nodeType":"YulIdentifier","src":"4178:10:18"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:18","nodeType":"YulIdentifier","src":"4155:6:18"},"nativeSrc":"4155:34:18","nodeType":"YulFunctionCall","src":"4155:34:18"},"nativeSrc":"4155:34:18","nodeType":"YulExpressionStatement","src":"4155:34:18"},{"nativeSrc":"4202:30:18","nodeType":"YulAssignment","src":"4202:30:18","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:18","nodeType":"YulIdentifier","src":"4222:3:18"},{"kind":"number","nativeSrc":"4227:4:18","nodeType":"YulLiteral","src":"4227:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:18","nodeType":"YulIdentifier","src":"4212:9:18"},"nativeSrc":"4212:20:18","nodeType":"YulFunctionCall","src":"4212:20:18"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:18","nodeType":"YulIdentifier","src":"4202:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3944,"isOffset":false,"isSlot":false,"src":"4202:6:18","valueSize":1},{"declaration":3939,"isOffset":false,"isSlot":false,"src":"4126:15:18","valueSize":1},{"declaration":3941,"isOffset":false,"isSlot":false,"src":"4178:10:18","valueSize":1}],"flags":["memory-safe"],"id":3946,"nodeType":"InlineAssembly","src":"3993:249:18"}]},"documentation":{"id":3937,"nodeType":"StructuredDocumentation","src":"3438:431:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:18","nodeType":"FunctionDefinition","parameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:18","nodeType":"VariableDeclaration","scope":3948,"src":"3899:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:18","nodeType":"VariableDeclaration","scope":3948,"src":"3924:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:18"},"returnParameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"digest","nameLocation":"3975:6:18","nodeType":"VariableDeclaration","scope":3948,"src":"3967:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:18"},"scope":3949,"src":"3874:374:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3950,"src":"521:3729:18","usedErrors":[],"usedEvents":[]}],"src":"123:4128:18"},"id":18},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3973],"IERC165":[3985]},"id":3974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3951,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3974,"sourceUnit":3986,"src":"140:38:19","symbolAliases":[{"foreign":{"id":3952,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"148:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3955,"name":"IERC165","nameLocations":["688:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3985,"src":"688:7:19"},"id":3956,"nodeType":"InheritanceSpecifier","src":"688:7:19"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3954,"nodeType":"StructuredDocumentation","src":"180:479:19","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3973,"linearizedBaseContracts":[3973,3985],"name":"ERC165","nameLocation":"678:6:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3984],"body":{"id":3971,"nodeType":"Block","src":"845:64:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"862:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3966,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"882:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}],"id":3965,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3985","typeString":"type(contract IERC165)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3963,"id":3970,"nodeType":"Return","src":"855:47:19"}]},"documentation":{"id":3957,"nodeType":"StructuredDocumentation","src":"702:56:19","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3972,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:19","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:19","nodeType":"VariableDeclaration","scope":3972,"src":"790:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3958,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:19"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3972,"src":"839:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3961,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:19"},"scope":3973,"src":"763:146:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3974,"src":"660:251:19","usedErrors":[],"usedEvents":[]}],"src":"114:798:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3985]},"id":3986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3975,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"141:280:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3985,"linearizedBaseContracts":[3985],"name":"IERC165","nameLocation":"432:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"446:340:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3984,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:20","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:20","nodeType":"VariableDeclaration","scope":3984,"src":"818:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3978,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:20"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3984,"src":"861:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3981,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:20"},"scope":3985,"src":"791:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3986,"src":"422:447:20","usedErrors":[],"usedEvents":[]}],"src":"115:755:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5606],"Panic":[1545],"SafeCast":[7371]},"id":5607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3987,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5607,"sourceUnit":1546,"src":"129:35:21","symbolAliases":[{"foreign":{"id":3988,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"137:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5607,"sourceUnit":7372,"src":"165:40:21","symbolAliases":[{"foreign":{"id":3990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"207:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5606,"linearizedBaseContracts":[5606],"name":"Math","nameLocation":"289:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3997,"members":[{"id":3993,"name":"Floor","nameLocation":"324:5:21","nodeType":"EnumValue","src":"324:5:21"},{"id":3994,"name":"Ceil","nameLocation":"367:4:21","nodeType":"EnumValue","src":"367:4:21"},{"id":3995,"name":"Trunc","nameLocation":"409:5:21","nodeType":"EnumValue","src":"409:5:21"},{"id":3996,"name":"Expand","nameLocation":"439:6:21","nodeType":"EnumValue","src":"439:6:21"}],"name":"Rounding","nameLocation":"305:8:21","nodeType":"EnumDefinition","src":"300:169:21"},{"body":{"id":4010,"nodeType":"Block","src":"731:112:21","statements":[{"AST":{"nativeSrc":"766:71:21","nodeType":"YulBlock","src":"766:71:21","statements":[{"nativeSrc":"780:16:21","nodeType":"YulAssignment","src":"780:16:21","value":{"arguments":[{"name":"a","nativeSrc":"791:1:21","nodeType":"YulIdentifier","src":"791:1:21"},{"name":"b","nativeSrc":"794:1:21","nodeType":"YulIdentifier","src":"794:1:21"}],"functionName":{"name":"add","nativeSrc":"787:3:21","nodeType":"YulIdentifier","src":"787:3:21"},"nativeSrc":"787:9:21","nodeType":"YulFunctionCall","src":"787:9:21"},"variableNames":[{"name":"low","nativeSrc":"780:3:21","nodeType":"YulIdentifier","src":"780:3:21"}]},{"nativeSrc":"809:18:21","nodeType":"YulAssignment","src":"809:18:21","value":{"arguments":[{"name":"low","nativeSrc":"820:3:21","nodeType":"YulIdentifier","src":"820:3:21"},{"name":"a","nativeSrc":"825:1:21","nodeType":"YulIdentifier","src":"825:1:21"}],"functionName":{"name":"lt","nativeSrc":"817:2:21","nodeType":"YulIdentifier","src":"817:2:21"},"nativeSrc":"817:10:21","nodeType":"YulFunctionCall","src":"817:10:21"},"variableNames":[{"name":"high","nativeSrc":"809:4:21","nodeType":"YulIdentifier","src":"809:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4000,"isOffset":false,"isSlot":false,"src":"791:1:21","valueSize":1},{"declaration":4000,"isOffset":false,"isSlot":false,"src":"825:1:21","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"794:1:21","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"809:4:21","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"780:3:21","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"820:3:21","valueSize":1}],"flags":["memory-safe"],"id":4009,"nodeType":"InlineAssembly","src":"741:96:21"}]},"documentation":{"id":3998,"nodeType":"StructuredDocumentation","src":"475:163:21","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:21","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"a","nameLocation":"667:1:21","nodeType":"VariableDeclaration","scope":4011,"src":"659:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"b","nameLocation":"678:1:21","nodeType":"VariableDeclaration","scope":4011,"src":"670:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:21"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"high","nameLocation":"712:4:21","nodeType":"VariableDeclaration","scope":4011,"src":"704:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"low","nameLocation":"726:3:21","nodeType":"VariableDeclaration","scope":4011,"src":"718:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:21"},"scope":5606,"src":"643:200:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4024,"nodeType":"Block","src":"1115:462:21","statements":[{"AST":{"nativeSrc":"1437:134:21","nodeType":"YulBlock","src":"1437:134:21","statements":[{"nativeSrc":"1451:30:21","nodeType":"YulVariableDeclaration","src":"1451:30:21","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:21","nodeType":"YulIdentifier","src":"1468:1:21"},{"name":"b","nativeSrc":"1471:1:21","nodeType":"YulIdentifier","src":"1471:1:21"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:21","nodeType":"YulLiteral","src":"1478:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:21","nodeType":"YulIdentifier","src":"1474:3:21"},"nativeSrc":"1474:6:21","nodeType":"YulFunctionCall","src":"1474:6:21"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:21","nodeType":"YulIdentifier","src":"1461:6:21"},"nativeSrc":"1461:20:21","nodeType":"YulFunctionCall","src":"1461:20:21"},"variables":[{"name":"mm","nativeSrc":"1455:2:21","nodeType":"YulTypedName","src":"1455:2:21","type":""}]},{"nativeSrc":"1494:16:21","nodeType":"YulAssignment","src":"1494:16:21","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:21","nodeType":"YulIdentifier","src":"1505:1:21"},{"name":"b","nativeSrc":"1508:1:21","nodeType":"YulIdentifier","src":"1508:1:21"}],"functionName":{"name":"mul","nativeSrc":"1501:3:21","nodeType":"YulIdentifier","src":"1501:3:21"},"nativeSrc":"1501:9:21","nodeType":"YulFunctionCall","src":"1501:9:21"},"variableNames":[{"name":"low","nativeSrc":"1494:3:21","nodeType":"YulIdentifier","src":"1494:3:21"}]},{"nativeSrc":"1523:38:21","nodeType":"YulAssignment","src":"1523:38:21","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:21","nodeType":"YulIdentifier","src":"1539:2:21"},{"name":"low","nativeSrc":"1543:3:21","nodeType":"YulIdentifier","src":"1543:3:21"}],"functionName":{"name":"sub","nativeSrc":"1535:3:21","nodeType":"YulIdentifier","src":"1535:3:21"},"nativeSrc":"1535:12:21","nodeType":"YulFunctionCall","src":"1535:12:21"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:21","nodeType":"YulIdentifier","src":"1552:2:21"},{"name":"low","nativeSrc":"1556:3:21","nodeType":"YulIdentifier","src":"1556:3:21"}],"functionName":{"name":"lt","nativeSrc":"1549:2:21","nodeType":"YulIdentifier","src":"1549:2:21"},"nativeSrc":"1549:11:21","nodeType":"YulFunctionCall","src":"1549:11:21"}],"functionName":{"name":"sub","nativeSrc":"1531:3:21","nodeType":"YulIdentifier","src":"1531:3:21"},"nativeSrc":"1531:30:21","nodeType":"YulFunctionCall","src":"1531:30:21"},"variableNames":[{"name":"high","nativeSrc":"1523:4:21","nodeType":"YulIdentifier","src":"1523:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4014,"isOffset":false,"isSlot":false,"src":"1468:1:21","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"1505:1:21","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"1471:1:21","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"1508:1:21","valueSize":1},{"declaration":4019,"isOffset":false,"isSlot":false,"src":"1523:4:21","valueSize":1},{"declaration":4021,"isOffset":false,"isSlot":false,"src":"1494:3:21","valueSize":1},{"declaration":4021,"isOffset":false,"isSlot":false,"src":"1543:3:21","valueSize":1},{"declaration":4021,"isOffset":false,"isSlot":false,"src":"1556:3:21","valueSize":1}],"flags":["memory-safe"],"id":4023,"nodeType":"InlineAssembly","src":"1412:159:21"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"849:173:21","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4025,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:21","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"a","nameLocation":"1051:1:21","nodeType":"VariableDeclaration","scope":4025,"src":"1043:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"b","nameLocation":"1062:1:21","nodeType":"VariableDeclaration","scope":4025,"src":"1054:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:21"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"high","nameLocation":"1096:4:21","nodeType":"VariableDeclaration","scope":4025,"src":"1088:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"low","nameLocation":"1110:3:21","nodeType":"VariableDeclaration","scope":4025,"src":"1102:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:21"},"scope":5606,"src":"1027:550:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4059,"nodeType":"Block","src":"1784:149:21","statements":[{"id":4058,"nodeType":"UncheckedBlock","src":"1794:133:21","statements":[{"assignments":[4038],"declarations":[{"constant":false,"id":4038,"mutability":"mutable","name":"c","nameLocation":"1826:1:21","nodeType":"VariableDeclaration","scope":4058,"src":"1818:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4042,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"1830:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4040,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"1834:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:21"},{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"1849:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"1864:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4048,"nodeType":"ExpressionStatement","src":"1849:16:21"},{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"1879:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1888:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4053,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"1908:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4051,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"1892:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"1892:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4057,"nodeType":"ExpressionStatement","src":"1879:37:21"}]}]},"documentation":{"id":4026,"nodeType":"StructuredDocumentation","src":"1583:105:21","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4060,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:21","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"a","nameLocation":"1717:1:21","nodeType":"VariableDeclaration","scope":4060,"src":"1709:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"b","nameLocation":"1728:1:21","nodeType":"VariableDeclaration","scope":4060,"src":"1720:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:21"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"success","nameLocation":"1759:7:21","nodeType":"VariableDeclaration","scope":4060,"src":"1754:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4032,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"result","nameLocation":"1776:6:21","nodeType":"VariableDeclaration","scope":4060,"src":"1768:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:21"},"scope":5606,"src":"1693:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4094,"nodeType":"Block","src":"2143:149:21","statements":[{"id":4093,"nodeType":"UncheckedBlock","src":"2153:133:21","statements":[{"assignments":[4073],"declarations":[{"constant":false,"id":4073,"mutability":"mutable","name":"c","nameLocation":"2185:1:21","nodeType":"VariableDeclaration","scope":4093,"src":"2177:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4077,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2189:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4075,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"2193:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:21"},{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"2208:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"2218:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2223:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4083,"nodeType":"ExpressionStatement","src":"2208:16:21"},{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"2238:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"2247:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4088,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"2267:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4086,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"2251:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"2251:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"2238:37:21"}]}]},"documentation":{"id":4061,"nodeType":"StructuredDocumentation","src":"1939:108:21","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4095,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:21","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"a","nameLocation":"2076:1:21","nodeType":"VariableDeclaration","scope":4095,"src":"2068:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4065,"mutability":"mutable","name":"b","nameLocation":"2087:1:21","nodeType":"VariableDeclaration","scope":4095,"src":"2079:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:21"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"success","nameLocation":"2118:7:21","nodeType":"VariableDeclaration","scope":4095,"src":"2113:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4067,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"result","nameLocation":"2135:6:21","nodeType":"VariableDeclaration","scope":4095,"src":"2127:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:21"},"scope":5606,"src":"2052:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"2505:391:21","statements":[{"id":4123,"nodeType":"UncheckedBlock","src":"2515:375:21","statements":[{"assignments":[4108],"declarations":[{"constant":false,"id":4108,"mutability":"mutable","name":"c","nameLocation":"2547:1:21","nodeType":"VariableDeclaration","scope":4123,"src":"2539:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4112,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"2551:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4110,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"2555:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:21"},{"AST":{"nativeSrc":"2595:188:21","nodeType":"YulBlock","src":"2595:188:21","statements":[{"nativeSrc":"2727:42:21","nodeType":"YulAssignment","src":"2727:42:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:21","nodeType":"YulIdentifier","src":"2748:1:21"},{"name":"a","nativeSrc":"2751:1:21","nodeType":"YulIdentifier","src":"2751:1:21"}],"functionName":{"name":"div","nativeSrc":"2744:3:21","nodeType":"YulIdentifier","src":"2744:3:21"},"nativeSrc":"2744:9:21","nodeType":"YulFunctionCall","src":"2744:9:21"},{"name":"b","nativeSrc":"2755:1:21","nodeType":"YulIdentifier","src":"2755:1:21"}],"functionName":{"name":"eq","nativeSrc":"2741:2:21","nodeType":"YulIdentifier","src":"2741:2:21"},"nativeSrc":"2741:16:21","nodeType":"YulFunctionCall","src":"2741:16:21"},{"arguments":[{"name":"a","nativeSrc":"2766:1:21","nodeType":"YulIdentifier","src":"2766:1:21"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:21","nodeType":"YulIdentifier","src":"2759:6:21"},"nativeSrc":"2759:9:21","nodeType":"YulFunctionCall","src":"2759:9:21"}],"functionName":{"name":"or","nativeSrc":"2738:2:21","nodeType":"YulIdentifier","src":"2738:2:21"},"nativeSrc":"2738:31:21","nodeType":"YulFunctionCall","src":"2738:31:21"},"variableNames":[{"name":"success","nativeSrc":"2727:7:21","nodeType":"YulIdentifier","src":"2727:7:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4098,"isOffset":false,"isSlot":false,"src":"2751:1:21","valueSize":1},{"declaration":4098,"isOffset":false,"isSlot":false,"src":"2766:1:21","valueSize":1},{"declaration":4100,"isOffset":false,"isSlot":false,"src":"2755:1:21","valueSize":1},{"declaration":4108,"isOffset":false,"isSlot":false,"src":"2748:1:21","valueSize":1},{"declaration":4103,"isOffset":false,"isSlot":false,"src":"2727:7:21","valueSize":1}],"flags":["memory-safe"],"id":4113,"nodeType":"InlineAssembly","src":"2570:213:21"},{"expression":{"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2842:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"2851:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4118,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"2871:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4116,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"2855:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"2855:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4122,"nodeType":"ExpressionStatement","src":"2842:37:21"}]}]},"documentation":{"id":4096,"nodeType":"StructuredDocumentation","src":"2298:111:21","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:21","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"a","nameLocation":"2438:1:21","nodeType":"VariableDeclaration","scope":4125,"src":"2430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"b","nameLocation":"2449:1:21","nodeType":"VariableDeclaration","scope":4125,"src":"2441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:21"},"returnParameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"success","nameLocation":"2480:7:21","nodeType":"VariableDeclaration","scope":4125,"src":"2475:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4102,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"result","nameLocation":"2497:6:21","nodeType":"VariableDeclaration","scope":4125,"src":"2489:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:21"},"scope":5606,"src":"2414:482:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4145,"nodeType":"Block","src":"3111:231:21","statements":[{"id":4144,"nodeType":"UncheckedBlock","src":"3121:215:21","statements":[{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"3145:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"3155:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4142,"nodeType":"ExpressionStatement","src":"3145:15:21"},{"AST":{"nativeSrc":"3199:127:21","nodeType":"YulBlock","src":"3199:127:21","statements":[{"nativeSrc":"3293:19:21","nodeType":"YulAssignment","src":"3293:19:21","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:21","nodeType":"YulIdentifier","src":"3307:1:21"},{"name":"b","nativeSrc":"3310:1:21","nodeType":"YulIdentifier","src":"3310:1:21"}],"functionName":{"name":"div","nativeSrc":"3303:3:21","nodeType":"YulIdentifier","src":"3303:3:21"},"nativeSrc":"3303:9:21","nodeType":"YulFunctionCall","src":"3303:9:21"},"variableNames":[{"name":"result","nativeSrc":"3293:6:21","nodeType":"YulIdentifier","src":"3293:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4128,"isOffset":false,"isSlot":false,"src":"3307:1:21","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"3310:1:21","valueSize":1},{"declaration":4135,"isOffset":false,"isSlot":false,"src":"3293:6:21","valueSize":1}],"flags":["memory-safe"],"id":4143,"nodeType":"InlineAssembly","src":"3174:152:21"}]}]},"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"2902:113:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:21","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"a","nameLocation":"3044:1:21","nodeType":"VariableDeclaration","scope":4146,"src":"3036:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"b","nameLocation":"3055:1:21","nodeType":"VariableDeclaration","scope":4146,"src":"3047:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:21"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"success","nameLocation":"3086:7:21","nodeType":"VariableDeclaration","scope":4146,"src":"3081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4132,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"result","nameLocation":"3103:6:21","nodeType":"VariableDeclaration","scope":4146,"src":"3095:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:21"},"scope":5606,"src":"3020:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"3567:231:21","statements":[{"id":4165,"nodeType":"UncheckedBlock","src":"3577:215:21","statements":[{"expression":{"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4158,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3601:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"3611:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"ExpressionStatement","src":"3601:15:21"},{"AST":{"nativeSrc":"3655:127:21","nodeType":"YulBlock","src":"3655:127:21","statements":[{"nativeSrc":"3749:19:21","nodeType":"YulAssignment","src":"3749:19:21","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:21","nodeType":"YulIdentifier","src":"3763:1:21"},{"name":"b","nativeSrc":"3766:1:21","nodeType":"YulIdentifier","src":"3766:1:21"}],"functionName":{"name":"mod","nativeSrc":"3759:3:21","nodeType":"YulIdentifier","src":"3759:3:21"},"nativeSrc":"3759:9:21","nodeType":"YulFunctionCall","src":"3759:9:21"},"variableNames":[{"name":"result","nativeSrc":"3749:6:21","nodeType":"YulIdentifier","src":"3749:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4149,"isOffset":false,"isSlot":false,"src":"3763:1:21","valueSize":1},{"declaration":4151,"isOffset":false,"isSlot":false,"src":"3766:1:21","valueSize":1},{"declaration":4156,"isOffset":false,"isSlot":false,"src":"3749:6:21","valueSize":1}],"flags":["memory-safe"],"id":4164,"nodeType":"InlineAssembly","src":"3630:152:21"}]}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"3348:123:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:21","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"a","nameLocation":"3500:1:21","nodeType":"VariableDeclaration","scope":4167,"src":"3492:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"b","nameLocation":"3511:1:21","nodeType":"VariableDeclaration","scope":4167,"src":"3503:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:21"},"returnParameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"success","nameLocation":"3542:7:21","nodeType":"VariableDeclaration","scope":4167,"src":"3537:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4153,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"result","nameLocation":"3559:6:21","nodeType":"VariableDeclaration","scope":4167,"src":"3551:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:21"},"scope":5606,"src":"3476:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4196,"nodeType":"Block","src":"3989:122:21","statements":[{"assignments":[4178,4180],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"success","nameLocation":"4005:7:21","nodeType":"VariableDeclaration","scope":4196,"src":"4000:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4177,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"result","nameLocation":"4022:6:21","nodeType":"VariableDeclaration","scope":4196,"src":"4014:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4185,"initialValue":{"arguments":[{"id":4182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"4039:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"4042:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4181,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"4032:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:21"},{"expression":{"arguments":[{"id":4187,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"4069:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"4078:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:21","memberName":"max","nodeType":"MemberAccess","src":"4086:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4186,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4061:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4195,"nodeType":"Return","src":"4054:50:21"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"3804:103:21","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4197,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:21","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"a","nameLocation":"3943:1:21","nodeType":"VariableDeclaration","scope":4197,"src":"3935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"b","nameLocation":"3954:1:21","nodeType":"VariableDeclaration","scope":4197,"src":"3946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:21"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4197,"src":"3980:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:21"},"scope":5606,"src":"3912:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"4294:73:21","statements":[{"assignments":[null,4208],"declarations":[null,{"constant":false,"id":4208,"mutability":"mutable","name":"result","nameLocation":"4315:6:21","nodeType":"VariableDeclaration","scope":4216,"src":"4307:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4213,"initialValue":{"arguments":[{"id":4210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"4332:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"4335:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"4325:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:21"},{"expression":{"id":4214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"4354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4206,"id":4215,"nodeType":"Return","src":"4347:13:21"}]},"documentation":{"id":4198,"nodeType":"StructuredDocumentation","src":"4117:95:21","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:21","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"a","nameLocation":"4248:1:21","nodeType":"VariableDeclaration","scope":4217,"src":"4240:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"b","nameLocation":"4259:1:21","nodeType":"VariableDeclaration","scope":4217,"src":"4251:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:21"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"4285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:21"},"scope":5606,"src":"4217:150:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4246,"nodeType":"Block","src":"4564:122:21","statements":[{"assignments":[4228,4230],"declarations":[{"constant":false,"id":4228,"mutability":"mutable","name":"success","nameLocation":"4580:7:21","nodeType":"VariableDeclaration","scope":4246,"src":"4575:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4227,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"result","nameLocation":"4597:6:21","nodeType":"VariableDeclaration","scope":4246,"src":"4589:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4235,"initialValue":{"arguments":[{"id":4232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"4614:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4233,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"4617:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4231,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"4607:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:21"},{"expression":{"arguments":[{"id":4237,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"4644:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"4653:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:21","memberName":"max","nodeType":"MemberAccess","src":"4661:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4236,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4636:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4226,"id":4245,"nodeType":"Return","src":"4629:50:21"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"4373:109:21","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:21","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"a","nameLocation":"4518:1:21","nodeType":"VariableDeclaration","scope":4247,"src":"4510:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"b","nameLocation":"4529:1:21","nodeType":"VariableDeclaration","scope":4247,"src":"4521:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:21"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"4555:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:21"},"scope":5606,"src":"4487:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4273,"nodeType":"Block","src":"5158:207:21","statements":[{"id":4272,"nodeType":"UncheckedBlock","src":"5168:191:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"5306:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"5312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"5316:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4266,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"5337:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4264,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"5321:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"5321:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4258,"id":4271,"nodeType":"Return","src":"5299:49:21"}]}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"4692:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:21","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"condition","nameLocation":"5093:9:21","nodeType":"VariableDeclaration","scope":4274,"src":"5088:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4249,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"a","nameLocation":"5112:1:21","nodeType":"VariableDeclaration","scope":4274,"src":"5104:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"b","nameLocation":"5123:1:21","nodeType":"VariableDeclaration","scope":4274,"src":"5115:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:21"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4274,"src":"5149:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4256,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:21"},"scope":5606,"src":"5071:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4292,"nodeType":"Block","src":"5502:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"5527:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"5531:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"5534:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"5537:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4284,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"5519:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4283,"id":4291,"nodeType":"Return","src":"5512:27:21"}]},"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"5371:59:21","text":" @dev Returns the largest of two numbers."},"id":4293,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:21","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"a","nameLocation":"5456:1:21","nodeType":"VariableDeclaration","scope":4293,"src":"5448:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4279,"mutability":"mutable","name":"b","nameLocation":"5467:1:21","nodeType":"VariableDeclaration","scope":4293,"src":"5459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:21"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4293,"src":"5493:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:21"},"scope":5606,"src":"5435:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4311,"nodeType":"Block","src":"5684:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"5709:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"5713:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"5716:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"5719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4303,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"5701:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4302,"id":4310,"nodeType":"Return","src":"5694:27:21"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"5552:60:21","text":" @dev Returns the smallest of two numbers."},"id":4312,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:21","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"a","nameLocation":"5638:1:21","nodeType":"VariableDeclaration","scope":4312,"src":"5630:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"b","nameLocation":"5649:1:21","nodeType":"VariableDeclaration","scope":4312,"src":"5641:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:21"},"returnParameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4312,"src":"5675:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:21"},"scope":5606,"src":"5617:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"5912:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"5967:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"5971:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"5977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"5981:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4321,"id":4333,"nodeType":"Return","src":"5959:28:21"}]},"documentation":{"id":4313,"nodeType":"StructuredDocumentation","src":"5734:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:21","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"a","nameLocation":"5866:1:21","nodeType":"VariableDeclaration","scope":4335,"src":"5858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"b","nameLocation":"5877:1:21","nodeType":"VariableDeclaration","scope":4335,"src":"5869:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:21"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"5903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:21"},"scope":5606,"src":"5841:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"6286:633:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6300:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"6296:150:21","trueBody":{"id":4355,"nodeType":"Block","src":"6308:138:21","statements":[{"expression":{"arguments":[{"expression":{"id":4351,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6412:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1512,"src":"6412:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4348,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6400:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"6400:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4354,"nodeType":"ExpressionStatement","src":"6400:35:21"}]}},{"id":4374,"nodeType":"UncheckedBlock","src":"6829:84:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"6876:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4357,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"6860:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"6860:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"6887:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4344,"id":4373,"nodeType":"Return","src":"6853:49:21"}]}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"6000:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:21","nodeType":"FunctionDefinition","parameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"a","nameLocation":"6240:1:21","nodeType":"VariableDeclaration","scope":4376,"src":"6232:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4340,"mutability":"mutable","name":"b","nameLocation":"6251:1:21","nodeType":"VariableDeclaration","scope":4376,"src":"6243:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:21"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4376,"src":"6277:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:21"},"scope":5606,"src":"6215:704:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4511,"nodeType":"Block","src":"7340:3585:21","statements":[{"id":4510,"nodeType":"UncheckedBlock","src":"7350:3569:21","statements":[{"assignments":[4389,4391],"declarations":[{"constant":false,"id":4389,"mutability":"mutable","name":"high","nameLocation":"7383:4:21","nodeType":"VariableDeclaration","scope":4510,"src":"7375:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"low","nameLocation":"7397:3:21","nodeType":"VariableDeclaration","scope":4510,"src":"7389:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4396,"initialValue":{"arguments":[{"id":4393,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"7411:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4394,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"7414:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4392,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7404:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7498:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4405,"nodeType":"IfStatement","src":"7494:365:21","trueBody":{"id":4404,"nodeType":"Block","src":"7509:350:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"7827:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4401,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"7833:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4387,"id":4403,"nodeType":"Return","src":"7820:24:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"7969:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4407,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7984:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"7965:142:21","trueBody":{"id":4423,"nodeType":"Block","src":"7990:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8028:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4416,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"8046:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1512,"src":"8046:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4418,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"8070:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"8070:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4412,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"8020:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4409,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"8008:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"8008:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4422,"nodeType":"ExpressionStatement","src":"8008:84:21"}]}},{"assignments":[4426],"declarations":[{"constant":false,"id":4426,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:21","nodeType":"VariableDeclaration","scope":4510,"src":"8359:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4427,"nodeType":"VariableDeclarationStatement","src":"8359:17:21"},{"AST":{"nativeSrc":"8415:283:21","nodeType":"YulBlock","src":"8415:283:21","statements":[{"nativeSrc":"8484:38:21","nodeType":"YulAssignment","src":"8484:38:21","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:21","nodeType":"YulIdentifier","src":"8504:1:21"},{"name":"y","nativeSrc":"8507:1:21","nodeType":"YulIdentifier","src":"8507:1:21"},{"name":"denominator","nativeSrc":"8510:11:21","nodeType":"YulIdentifier","src":"8510:11:21"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:21","nodeType":"YulIdentifier","src":"8497:6:21"},"nativeSrc":"8497:25:21","nodeType":"YulFunctionCall","src":"8497:25:21"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:21","nodeType":"YulIdentifier","src":"8484:9:21"}]},{"nativeSrc":"8604:37:21","nodeType":"YulAssignment","src":"8604:37:21","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:21","nodeType":"YulIdentifier","src":"8616:4:21"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:21","nodeType":"YulIdentifier","src":"8625:9:21"},{"name":"low","nativeSrc":"8636:3:21","nodeType":"YulIdentifier","src":"8636:3:21"}],"functionName":{"name":"gt","nativeSrc":"8622:2:21","nodeType":"YulIdentifier","src":"8622:2:21"},"nativeSrc":"8622:18:21","nodeType":"YulFunctionCall","src":"8622:18:21"}],"functionName":{"name":"sub","nativeSrc":"8612:3:21","nodeType":"YulIdentifier","src":"8612:3:21"},"nativeSrc":"8612:29:21","nodeType":"YulFunctionCall","src":"8612:29:21"},"variableNames":[{"name":"high","nativeSrc":"8604:4:21","nodeType":"YulIdentifier","src":"8604:4:21"}]},{"nativeSrc":"8658:26:21","nodeType":"YulAssignment","src":"8658:26:21","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:21","nodeType":"YulIdentifier","src":"8669:3:21"},{"name":"remainder","nativeSrc":"8674:9:21","nodeType":"YulIdentifier","src":"8674:9:21"}],"functionName":{"name":"sub","nativeSrc":"8665:3:21","nodeType":"YulIdentifier","src":"8665:3:21"},"nativeSrc":"8665:19:21","nodeType":"YulFunctionCall","src":"8665:19:21"},"variableNames":[{"name":"low","nativeSrc":"8658:3:21","nodeType":"YulIdentifier","src":"8658:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4383,"isOffset":false,"isSlot":false,"src":"8510:11:21","valueSize":1},{"declaration":4389,"isOffset":false,"isSlot":false,"src":"8604:4:21","valueSize":1},{"declaration":4389,"isOffset":false,"isSlot":false,"src":"8616:4:21","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"8636:3:21","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"8658:3:21","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"8669:3:21","valueSize":1},{"declaration":4426,"isOffset":false,"isSlot":false,"src":"8484:9:21","valueSize":1},{"declaration":4426,"isOffset":false,"isSlot":false,"src":"8625:9:21","valueSize":1},{"declaration":4426,"isOffset":false,"isSlot":false,"src":"8674:9:21","valueSize":1},{"declaration":4379,"isOffset":false,"isSlot":false,"src":"8504:1:21","valueSize":1},{"declaration":4381,"isOffset":false,"isSlot":false,"src":"8507:1:21","valueSize":1}],"flags":["memory-safe"],"id":4428,"nodeType":"InlineAssembly","src":"8390:308:21"},{"assignments":[4430],"declarations":[{"constant":false,"id":4430,"mutability":"mutable","name":"twos","nameLocation":"8910:4:21","nodeType":"VariableDeclaration","scope":4510,"src":"8902:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4437,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8917:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4433,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8936:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:21"},{"AST":{"nativeSrc":"8987:359:21","nodeType":"YulBlock","src":"8987:359:21","statements":[{"nativeSrc":"9052:37:21","nodeType":"YulAssignment","src":"9052:37:21","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:21","nodeType":"YulIdentifier","src":"9071:11:21"},{"name":"twos","nativeSrc":"9084:4:21","nodeType":"YulIdentifier","src":"9084:4:21"}],"functionName":{"name":"div","nativeSrc":"9067:3:21","nodeType":"YulIdentifier","src":"9067:3:21"},"nativeSrc":"9067:22:21","nodeType":"YulFunctionCall","src":"9067:22:21"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:21","nodeType":"YulIdentifier","src":"9052:11:21"}]},{"nativeSrc":"9153:21:21","nodeType":"YulAssignment","src":"9153:21:21","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:21","nodeType":"YulIdentifier","src":"9164:3:21"},{"name":"twos","nativeSrc":"9169:4:21","nodeType":"YulIdentifier","src":"9169:4:21"}],"functionName":{"name":"div","nativeSrc":"9160:3:21","nodeType":"YulIdentifier","src":"9160:3:21"},"nativeSrc":"9160:14:21","nodeType":"YulFunctionCall","src":"9160:14:21"},"variableNames":[{"name":"low","nativeSrc":"9153:3:21","nodeType":"YulIdentifier","src":"9153:3:21"}]},{"nativeSrc":"9293:39:21","nodeType":"YulAssignment","src":"9293:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:21","nodeType":"YulLiteral","src":"9313:1:21","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:21","nodeType":"YulIdentifier","src":"9316:4:21"}],"functionName":{"name":"sub","nativeSrc":"9309:3:21","nodeType":"YulIdentifier","src":"9309:3:21"},"nativeSrc":"9309:12:21","nodeType":"YulFunctionCall","src":"9309:12:21"},{"name":"twos","nativeSrc":"9323:4:21","nodeType":"YulIdentifier","src":"9323:4:21"}],"functionName":{"name":"div","nativeSrc":"9305:3:21","nodeType":"YulIdentifier","src":"9305:3:21"},"nativeSrc":"9305:23:21","nodeType":"YulFunctionCall","src":"9305:23:21"},{"kind":"number","nativeSrc":"9330:1:21","nodeType":"YulLiteral","src":"9330:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:21","nodeType":"YulIdentifier","src":"9301:3:21"},"nativeSrc":"9301:31:21","nodeType":"YulFunctionCall","src":"9301:31:21"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:21","nodeType":"YulIdentifier","src":"9293:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4383,"isOffset":false,"isSlot":false,"src":"9052:11:21","valueSize":1},{"declaration":4383,"isOffset":false,"isSlot":false,"src":"9071:11:21","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"9153:3:21","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"9164:3:21","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"9084:4:21","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"9169:4:21","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"9293:4:21","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"9316:4:21","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"9323:4:21","valueSize":1}],"flags":["memory-safe"],"id":4438,"nodeType":"InlineAssembly","src":"8962:384:21"},{"expression":{"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4439,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"9409:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"9416:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4441,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"9423:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4444,"nodeType":"ExpressionStatement","src":"9409:18:21"},{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:21","nodeType":"VariableDeclaration","scope":4510,"src":"9762:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4448,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"9785:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:21"},{"expression":{"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10033:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4457,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4461,"nodeType":"ExpressionStatement","src":"10018:36:21"},{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4462,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10103:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4465,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10117:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"10088:36:21"},{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10160:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10175:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4473,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4477,"nodeType":"ExpressionStatement","src":"10160:36:21"},{"expression":{"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10246:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4481,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10260:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4485,"nodeType":"ExpressionStatement","src":"10231:36:21"},{"expression":{"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10304:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10319:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4489,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10333:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4493,"nodeType":"ExpressionStatement","src":"10304:36:21"},{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4494,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10393:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4497,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"10378:36:21"},{"expression":{"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"10859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"10868:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4504,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"10874:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4507,"nodeType":"ExpressionStatement","src":"10859:22:21"},{"expression":{"id":4508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"10902:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4387,"id":4509,"nodeType":"Return","src":"10895:13:21"}]}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"6925:312:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4512,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:21","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"x","nameLocation":"7266:1:21","nodeType":"VariableDeclaration","scope":4512,"src":"7258:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4381,"mutability":"mutable","name":"y","nameLocation":"7277:1:21","nodeType":"VariableDeclaration","scope":4512,"src":"7269:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:21","nodeType":"VariableDeclaration","scope":4512,"src":"7280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:21"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"result","nameLocation":"7332:6:21","nodeType":"VariableDeclaration","scope":4512,"src":"7324:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:21"},"scope":5606,"src":"7242:3683:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4548,"nodeType":"Block","src":"11164:128:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4528,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"11188:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4529,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"11191:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4530,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"11194:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4527,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4512,4549],"referencedDeclaration":4512,"src":"11181:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4535,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"11242:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":4534,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"11225:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4538,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"11262:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4539,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"11265:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4540,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"11268:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"11209:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"11209:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4526,"id":4547,"nodeType":"Return","src":"11174:111:21"}]},"documentation":{"id":4513,"nodeType":"StructuredDocumentation","src":"10931:118:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:21","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"x","nameLocation":"11078:1:21","nodeType":"VariableDeclaration","scope":4549,"src":"11070:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4514,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4517,"mutability":"mutable","name":"y","nameLocation":"11089:1:21","nodeType":"VariableDeclaration","scope":4549,"src":"11081:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:21","nodeType":"VariableDeclaration","scope":4549,"src":"11092:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4522,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:21","nodeType":"VariableDeclaration","scope":4549,"src":"11113:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":4521,"nodeType":"UserDefinedTypeName","pathNode":{"id":4520,"name":"Rounding","nameLocations":["11113:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"11113:8:21"},"referencedDeclaration":3997,"src":"11113:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:21"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4549,"src":"11155:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:21"},"scope":5606,"src":"11054:238:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4598,"nodeType":"Block","src":"11500:245:21","statements":[{"id":4597,"nodeType":"UncheckedBlock","src":"11510:229:21","statements":[{"assignments":[4562,4564],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"high","nameLocation":"11543:4:21","nodeType":"VariableDeclaration","scope":4597,"src":"11535:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"low","nameLocation":"11557:3:21","nodeType":"VariableDeclaration","scope":4597,"src":"11549:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4569,"initialValue":{"arguments":[{"id":4566,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"11571:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4567,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"11574:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"11564:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"11594:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4572,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"11607:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4583,"nodeType":"IfStatement","src":"11590:86:21","trueBody":{"id":4582,"nodeType":"Block","src":"11610:66:21","statements":[{"expression":{"arguments":[{"expression":{"id":4578,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"11640:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"11640:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4575,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"11628:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"11628:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4581,"nodeType":"ExpressionStatement","src":"11628:33:21"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"11697:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4586,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"11712:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4591,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"11719:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4592,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"11726:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4560,"id":4596,"nodeType":"Return","src":"11689:39:21"}]}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"11298:111:21","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4599,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:21","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"x","nameLocation":"11438:1:21","nodeType":"VariableDeclaration","scope":4599,"src":"11430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"y","nameLocation":"11449:1:21","nodeType":"VariableDeclaration","scope":4599,"src":"11441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"n","nameLocation":"11458:1:21","nodeType":"VariableDeclaration","scope":4599,"src":"11452:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4555,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:21"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"result","nameLocation":"11492:6:21","nodeType":"VariableDeclaration","scope":4599,"src":"11484:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:21"},"scope":5606,"src":"11414:331:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"11963:113:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"11987:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4616,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"11990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4617,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"11993:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4614,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4599,4638],"referencedDeclaration":4599,"src":"11980:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4622,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"12031:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":4621,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"12014:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4625,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"12051:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4626,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"12054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4628,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"12062:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4624,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4619,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"11998:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"11998:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4613,"id":4636,"nodeType":"Return","src":"11973:96:21"}]},"documentation":{"id":4600,"nodeType":"StructuredDocumentation","src":"11751:109:21","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:21","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"x","nameLocation":"11889:1:21","nodeType":"VariableDeclaration","scope":4638,"src":"11881:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"y","nameLocation":"11900:1:21","nodeType":"VariableDeclaration","scope":4638,"src":"11892:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"n","nameLocation":"11909:1:21","nodeType":"VariableDeclaration","scope":4638,"src":"11903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4605,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4609,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:21","nodeType":"VariableDeclaration","scope":4638,"src":"11912:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":4608,"nodeType":"UserDefinedTypeName","pathNode":{"id":4607,"name":"Rounding","nameLocations":["11912:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"11912:8:21"},"referencedDeclaration":3997,"src":"11912:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:21"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"11954:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:21"},"scope":5606,"src":"11865:211:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4734,"nodeType":"Block","src":"12710:1849:21","statements":[{"id":4733,"nodeType":"UncheckedBlock","src":"12720:1833:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"12748:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4653,"nodeType":"IfStatement","src":"12744:20:21","trueBody":{"expression":{"hexValue":"30","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4647,"id":4652,"nodeType":"Return","src":"12756:8:21"}},{"assignments":[4655],"declarations":[{"constant":false,"id":4655,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:21","nodeType":"VariableDeclaration","scope":4733,"src":"13235:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4659,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"13255:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4657,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"13259:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:21"},{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:21","nodeType":"VariableDeclaration","scope":4733,"src":"13274:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4663,"initialValue":{"id":4662,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"13288:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:21"},{"assignments":[4665],"declarations":[{"constant":false,"id":4665,"mutability":"mutable","name":"x","nameLocation":"13432:1:21","nodeType":"VariableDeclaration","scope":4733,"src":"13425:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4664,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4667,"initialValue":{"hexValue":"30","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:21"},{"assignments":[4669],"declarations":[{"constant":false,"id":4669,"mutability":"mutable","name":"y","nameLocation":"13458:1:21","nodeType":"VariableDeclaration","scope":4733,"src":"13451:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4668,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4671,"initialValue":{"hexValue":"31","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:21"},{"body":{"id":4708,"nodeType":"Block","src":"13501:882:21","statements":[{"assignments":[4676],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:21","nodeType":"VariableDeclaration","scope":4708,"src":"13519:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4680,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"13538:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4678,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"13544:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:21"},{"expression":{"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4681,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"13573:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4682,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"13578:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4683,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4684,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"13678:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"13923:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4686,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"13929:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4687,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"13941:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4692,"nodeType":"ExpressionStatement","src":"13572:395:21"},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4693,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"13987:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4694,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"13990:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4695,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4696,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"14072:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"14326:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"14330:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4701,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"14341:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4699,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:21","typeDescriptions":{}}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4707,"nodeType":"ExpressionStatement","src":"13986:382:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4672,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"13485:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4709,"nodeType":"WhileStatement","src":"13478:905:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"14401:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"nodeType":"IfStatement","src":"14397:22:21","trueBody":{"expression":{"hexValue":"30","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4647,"id":4714,"nodeType":"Return","src":"14411:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"14470:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"14477:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:21","subExpression":{"id":4723,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"14490:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:21","typeDescriptions":{}}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4729,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"14502:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:21","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4716,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"14462:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4647,"id":4732,"nodeType":"Return","src":"14455:50:21"}]}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"12082:553:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4735,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:21","nodeType":"FunctionDefinition","parameters":{"id":4644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"a","nameLocation":"12664:1:21","nodeType":"VariableDeclaration","scope":4735,"src":"12656:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"n","nameLocation":"12675:1:21","nodeType":"VariableDeclaration","scope":4735,"src":"12667:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:21"},"returnParameters":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4735,"src":"12701:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:21"},"scope":5606,"src":"12640:1919:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4755,"nodeType":"Block","src":"15159:82:21","statements":[{"id":4754,"nodeType":"UncheckedBlock","src":"15169:66:21","statements":[{"expression":{"arguments":[{"id":4747,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"15212:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"15215:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4751,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"15222:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4745,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"15200:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5606_$","typeString":"type(library Math)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4792,"src":"15200:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4744,"id":4753,"nodeType":"Return","src":"15193:31:21"}]}]},"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"14565:514:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4756,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:21","nodeType":"FunctionDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"a","nameLocation":"15113:1:21","nodeType":"VariableDeclaration","scope":4756,"src":"15105:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4740,"mutability":"mutable","name":"p","nameLocation":"15124:1:21","nodeType":"VariableDeclaration","scope":4756,"src":"15116:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:21"},"returnParameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4756,"src":"15150:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:21"},"scope":5606,"src":"15084:157:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4791,"nodeType":"Block","src":"16011:174:21","statements":[{"assignments":[4769,4771],"declarations":[{"constant":false,"id":4769,"mutability":"mutable","name":"success","nameLocation":"16027:7:21","nodeType":"VariableDeclaration","scope":4791,"src":"16022:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4768,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4771,"mutability":"mutable","name":"result","nameLocation":"16044:6:21","nodeType":"VariableDeclaration","scope":4791,"src":"16036:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4777,"initialValue":{"arguments":[{"id":4773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"16064:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4774,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"16067:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4775,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"16070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4772,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4816,4898],"referencedDeclaration":4816,"src":"16054:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:21"},{"condition":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:21","subExpression":{"id":4778,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"16087:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4788,"nodeType":"IfStatement","src":"16082:74:21","trueBody":{"id":4787,"nodeType":"Block","src":"16096:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":4783,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"16122:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1512,"src":"16122:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4780,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"16110:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"16110:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4786,"nodeType":"ExpressionStatement","src":"16110:35:21"}]}},{"expression":{"id":4789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"16172:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4767,"id":4790,"nodeType":"Return","src":"16165:13:21"}]},"documentation":{"id":4757,"nodeType":"StructuredDocumentation","src":"15247:678:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4792,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:21","nodeType":"FunctionDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"b","nameLocation":"15954:1:21","nodeType":"VariableDeclaration","scope":4792,"src":"15946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4761,"mutability":"mutable","name":"e","nameLocation":"15965:1:21","nodeType":"VariableDeclaration","scope":4792,"src":"15957:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4763,"mutability":"mutable","name":"m","nameLocation":"15976:1:21","nodeType":"VariableDeclaration","scope":4792,"src":"15968:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:21"},"returnParameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4792,"src":"16002:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:21"},"scope":5606,"src":"15930:255:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4815,"nodeType":"Block","src":"17039:1493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"17053:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4813,"nodeType":"IfStatement","src":"17049:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4805,"id":4812,"nodeType":"Return","src":"17061:17:21"}},{"AST":{"nativeSrc":"17113:1413:21","nodeType":"YulBlock","src":"17113:1413:21","statements":[{"nativeSrc":"17127:22:21","nodeType":"YulVariableDeclaration","src":"17127:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:21","nodeType":"YulLiteral","src":"17144:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:21","nodeType":"YulIdentifier","src":"17138:5:21"},"nativeSrc":"17138:11:21","nodeType":"YulFunctionCall","src":"17138:11:21"},"variables":[{"name":"ptr","nativeSrc":"17131:3:21","nodeType":"YulTypedName","src":"17131:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:21","nodeType":"YulIdentifier","src":"18057:3:21"},{"kind":"number","nativeSrc":"18062:4:21","nodeType":"YulLiteral","src":"18062:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:21","nodeType":"YulIdentifier","src":"18050:6:21"},"nativeSrc":"18050:17:21","nodeType":"YulFunctionCall","src":"18050:17:21"},"nativeSrc":"18050:17:21","nodeType":"YulExpressionStatement","src":"18050:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:21","nodeType":"YulIdentifier","src":"18091:3:21"},{"kind":"number","nativeSrc":"18096:4:21","nodeType":"YulLiteral","src":"18096:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:21","nodeType":"YulIdentifier","src":"18087:3:21"},"nativeSrc":"18087:14:21","nodeType":"YulFunctionCall","src":"18087:14:21"},{"kind":"number","nativeSrc":"18103:4:21","nodeType":"YulLiteral","src":"18103:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:21","nodeType":"YulIdentifier","src":"18080:6:21"},"nativeSrc":"18080:28:21","nodeType":"YulFunctionCall","src":"18080:28:21"},"nativeSrc":"18080:28:21","nodeType":"YulExpressionStatement","src":"18080:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:21","nodeType":"YulIdentifier","src":"18132:3:21"},{"kind":"number","nativeSrc":"18137:4:21","nodeType":"YulLiteral","src":"18137:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:21","nodeType":"YulIdentifier","src":"18128:3:21"},"nativeSrc":"18128:14:21","nodeType":"YulFunctionCall","src":"18128:14:21"},{"kind":"number","nativeSrc":"18144:4:21","nodeType":"YulLiteral","src":"18144:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:21","nodeType":"YulIdentifier","src":"18121:6:21"},"nativeSrc":"18121:28:21","nodeType":"YulFunctionCall","src":"18121:28:21"},"nativeSrc":"18121:28:21","nodeType":"YulExpressionStatement","src":"18121:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:21","nodeType":"YulIdentifier","src":"18173:3:21"},{"kind":"number","nativeSrc":"18178:4:21","nodeType":"YulLiteral","src":"18178:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:21","nodeType":"YulIdentifier","src":"18169:3:21"},"nativeSrc":"18169:14:21","nodeType":"YulFunctionCall","src":"18169:14:21"},{"name":"b","nativeSrc":"18185:1:21","nodeType":"YulIdentifier","src":"18185:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:21","nodeType":"YulIdentifier","src":"18162:6:21"},"nativeSrc":"18162:25:21","nodeType":"YulFunctionCall","src":"18162:25:21"},"nativeSrc":"18162:25:21","nodeType":"YulExpressionStatement","src":"18162:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:21","nodeType":"YulIdentifier","src":"18211:3:21"},{"kind":"number","nativeSrc":"18216:4:21","nodeType":"YulLiteral","src":"18216:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:21","nodeType":"YulIdentifier","src":"18207:3:21"},"nativeSrc":"18207:14:21","nodeType":"YulFunctionCall","src":"18207:14:21"},{"name":"e","nativeSrc":"18223:1:21","nodeType":"YulIdentifier","src":"18223:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:21","nodeType":"YulIdentifier","src":"18200:6:21"},"nativeSrc":"18200:25:21","nodeType":"YulFunctionCall","src":"18200:25:21"},"nativeSrc":"18200:25:21","nodeType":"YulExpressionStatement","src":"18200:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:21","nodeType":"YulIdentifier","src":"18249:3:21"},{"kind":"number","nativeSrc":"18254:4:21","nodeType":"YulLiteral","src":"18254:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:21","nodeType":"YulIdentifier","src":"18245:3:21"},"nativeSrc":"18245:14:21","nodeType":"YulFunctionCall","src":"18245:14:21"},{"name":"m","nativeSrc":"18261:1:21","nodeType":"YulIdentifier","src":"18261:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:21","nodeType":"YulIdentifier","src":"18238:6:21"},"nativeSrc":"18238:25:21","nodeType":"YulFunctionCall","src":"18238:25:21"},"nativeSrc":"18238:25:21","nodeType":"YulExpressionStatement","src":"18238:25:21"},{"nativeSrc":"18425:57:21","nodeType":"YulAssignment","src":"18425:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:21","nodeType":"YulIdentifier","src":"18447:3:21"},"nativeSrc":"18447:5:21","nodeType":"YulFunctionCall","src":"18447:5:21"},{"kind":"number","nativeSrc":"18454:4:21","nodeType":"YulLiteral","src":"18454:4:21","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:21","nodeType":"YulIdentifier","src":"18460:3:21"},{"kind":"number","nativeSrc":"18465:4:21","nodeType":"YulLiteral","src":"18465:4:21","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:21","nodeType":"YulLiteral","src":"18471:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:21","nodeType":"YulLiteral","src":"18477:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:21","nodeType":"YulIdentifier","src":"18436:10:21"},"nativeSrc":"18436:46:21","nodeType":"YulFunctionCall","src":"18436:46:21"},"variableNames":[{"name":"success","nativeSrc":"18425:7:21","nodeType":"YulIdentifier","src":"18425:7:21"}]},{"nativeSrc":"18495:21:21","nodeType":"YulAssignment","src":"18495:21:21","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:21","nodeType":"YulLiteral","src":"18511:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:21","nodeType":"YulIdentifier","src":"18505:5:21"},"nativeSrc":"18505:11:21","nodeType":"YulFunctionCall","src":"18505:11:21"},"variableNames":[{"name":"result","nativeSrc":"18495:6:21","nodeType":"YulIdentifier","src":"18495:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4795,"isOffset":false,"isSlot":false,"src":"18185:1:21","valueSize":1},{"declaration":4797,"isOffset":false,"isSlot":false,"src":"18223:1:21","valueSize":1},{"declaration":4799,"isOffset":false,"isSlot":false,"src":"18261:1:21","valueSize":1},{"declaration":4804,"isOffset":false,"isSlot":false,"src":"18495:6:21","valueSize":1},{"declaration":4802,"isOffset":false,"isSlot":false,"src":"18425:7:21","valueSize":1}],"flags":["memory-safe"],"id":4814,"nodeType":"InlineAssembly","src":"17088:1438:21"}]},"documentation":{"id":4793,"nodeType":"StructuredDocumentation","src":"16191:738:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4816,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:21","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"b","nameLocation":"16961:1:21","nodeType":"VariableDeclaration","scope":4816,"src":"16953:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"e","nameLocation":"16972:1:21","nodeType":"VariableDeclaration","scope":4816,"src":"16964:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"m","nameLocation":"16983:1:21","nodeType":"VariableDeclaration","scope":4816,"src":"16975:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:21"},"returnParameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"success","nameLocation":"17014:7:21","nodeType":"VariableDeclaration","scope":4816,"src":"17009:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4801,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"result","nameLocation":"17031:6:21","nodeType":"VariableDeclaration","scope":4816,"src":"17023:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:21"},"scope":5606,"src":"16934:1598:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"18729:179:21","statements":[{"assignments":[4829,4831],"declarations":[{"constant":false,"id":4829,"mutability":"mutable","name":"success","nameLocation":"18745:7:21","nodeType":"VariableDeclaration","scope":4851,"src":"18740:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4828,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4831,"mutability":"mutable","name":"result","nameLocation":"18767:6:21","nodeType":"VariableDeclaration","scope":4851,"src":"18754:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4830,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4837,"initialValue":{"arguments":[{"id":4833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"18787:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4834,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"18790:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4835,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"18793:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4832,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4816,4898],"referencedDeclaration":4898,"src":"18777:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:21"},{"condition":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:21","subExpression":{"id":4838,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"18810:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4848,"nodeType":"IfStatement","src":"18805:74:21","trueBody":{"id":4847,"nodeType":"Block","src":"18819:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":4843,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"18845:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1512,"src":"18845:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4840,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"18833:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1545_$","typeString":"type(library Panic)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"18833:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4846,"nodeType":"ExpressionStatement","src":"18833:35:21"}]}},{"expression":{"id":4849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"18895:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4827,"id":4850,"nodeType":"Return","src":"18888:13:21"}]},"documentation":{"id":4817,"nodeType":"StructuredDocumentation","src":"18538:85:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:21","nodeType":"FunctionDefinition","parameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"b","nameLocation":"18657:1:21","nodeType":"VariableDeclaration","scope":4852,"src":"18644:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4818,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"e","nameLocation":"18673:1:21","nodeType":"VariableDeclaration","scope":4852,"src":"18660:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4820,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4823,"mutability":"mutable","name":"m","nameLocation":"18689:1:21","nodeType":"VariableDeclaration","scope":4852,"src":"18676:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4822,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:21"},"returnParameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"18715:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4825,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:21"},"scope":5606,"src":"18628:280:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4897,"nodeType":"Block","src":"19162:771:21","statements":[{"condition":{"arguments":[{"id":4867,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"19187:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4866,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"19176:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"19172:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4870,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4865,"id":4875,"nodeType":"Return","src":"19191:28:21"}},{"assignments":[4878],"declarations":[{"constant":false,"id":4878,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:21","nodeType":"VariableDeclaration","scope":4897,"src":"19230:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4881,"initialValue":{"expression":{"id":4879,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"19245:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:21","memberName":"length","nodeType":"MemberAccess","src":"19245:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:21"},{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"19335:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19361:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:21","memberName":"length","nodeType":"MemberAccess","src":"19361:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4887,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"19371:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:21","memberName":"length","nodeType":"MemberAccess","src":"19371:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4889,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19381:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4890,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19387:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4891,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"19390:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4892,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"19393:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4883,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4895,"nodeType":"ExpressionStatement","src":"19335:60:21"},{"AST":{"nativeSrc":"19431:496:21","nodeType":"YulBlock","src":"19431:496:21","statements":[{"nativeSrc":"19445:32:21","nodeType":"YulVariableDeclaration","src":"19445:32:21","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:21","nodeType":"YulIdentifier","src":"19464:6:21"},{"kind":"number","nativeSrc":"19472:4:21","nodeType":"YulLiteral","src":"19472:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:21","nodeType":"YulIdentifier","src":"19460:3:21"},"nativeSrc":"19460:17:21","nodeType":"YulFunctionCall","src":"19460:17:21"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:21","nodeType":"YulTypedName","src":"19449:7:21","type":""}]},{"nativeSrc":"19567:73:21","nodeType":"YulAssignment","src":"19567:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:21","nodeType":"YulIdentifier","src":"19589:3:21"},"nativeSrc":"19589:5:21","nodeType":"YulFunctionCall","src":"19589:5:21"},{"kind":"number","nativeSrc":"19596:4:21","nodeType":"YulLiteral","src":"19596:4:21","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:21","nodeType":"YulIdentifier","src":"19602:7:21"},{"arguments":[{"name":"result","nativeSrc":"19617:6:21","nodeType":"YulIdentifier","src":"19617:6:21"}],"functionName":{"name":"mload","nativeSrc":"19611:5:21","nodeType":"YulIdentifier","src":"19611:5:21"},"nativeSrc":"19611:13:21","nodeType":"YulFunctionCall","src":"19611:13:21"},{"name":"dataPtr","nativeSrc":"19626:7:21","nodeType":"YulIdentifier","src":"19626:7:21"},{"name":"mLen","nativeSrc":"19635:4:21","nodeType":"YulIdentifier","src":"19635:4:21"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:21","nodeType":"YulIdentifier","src":"19578:10:21"},"nativeSrc":"19578:62:21","nodeType":"YulFunctionCall","src":"19578:62:21"},"variableNames":[{"name":"success","nativeSrc":"19567:7:21","nodeType":"YulIdentifier","src":"19567:7:21"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:21","nodeType":"YulIdentifier","src":"19796:6:21"},{"name":"mLen","nativeSrc":"19804:4:21","nodeType":"YulIdentifier","src":"19804:4:21"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:21","nodeType":"YulIdentifier","src":"19789:6:21"},"nativeSrc":"19789:20:21","nodeType":"YulFunctionCall","src":"19789:20:21"},"nativeSrc":"19789:20:21","nodeType":"YulExpressionStatement","src":"19789:20:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:21","nodeType":"YulLiteral","src":"19892:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:21","nodeType":"YulIdentifier","src":"19902:7:21"},{"name":"mLen","nativeSrc":"19911:4:21","nodeType":"YulIdentifier","src":"19911:4:21"}],"functionName":{"name":"add","nativeSrc":"19898:3:21","nodeType":"YulIdentifier","src":"19898:3:21"},"nativeSrc":"19898:18:21","nodeType":"YulFunctionCall","src":"19898:18:21"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:21","nodeType":"YulIdentifier","src":"19885:6:21"},"nativeSrc":"19885:32:21","nodeType":"YulFunctionCall","src":"19885:32:21"},"nativeSrc":"19885:32:21","nodeType":"YulExpressionStatement","src":"19885:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4878,"isOffset":false,"isSlot":false,"src":"19635:4:21","valueSize":1},{"declaration":4878,"isOffset":false,"isSlot":false,"src":"19804:4:21","valueSize":1},{"declaration":4878,"isOffset":false,"isSlot":false,"src":"19911:4:21","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"19464:6:21","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"19617:6:21","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"19796:6:21","valueSize":1},{"declaration":4862,"isOffset":false,"isSlot":false,"src":"19567:7:21","valueSize":1}],"flags":["memory-safe"],"id":4896,"nodeType":"InlineAssembly","src":"19406:521:21"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"18914:88:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:21","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"b","nameLocation":"19048:1:21","nodeType":"VariableDeclaration","scope":4898,"src":"19035:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4854,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"e","nameLocation":"19072:1:21","nodeType":"VariableDeclaration","scope":4898,"src":"19059:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4856,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"m","nameLocation":"19096:1:21","nodeType":"VariableDeclaration","scope":4898,"src":"19083:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4858,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:21"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"success","nameLocation":"19132:7:21","nodeType":"VariableDeclaration","scope":4898,"src":"19127:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4861,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"result","nameLocation":"19154:6:21","nodeType":"VariableDeclaration","scope":4898,"src":"19141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4863,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:21"},"scope":5606,"src":"19007:926:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4930,"nodeType":"Block","src":"20088:176:21","statements":[{"body":{"id":4926,"nodeType":"Block","src":"20145:92:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4917,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"20163:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4919,"indexExpression":{"id":4918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"20173:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4925,"nodeType":"IfStatement","src":"20159:68:21","trueBody":{"id":4924,"nodeType":"Block","src":"20182:45:21","statements":[{"expression":{"hexValue":"66616c7365","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4905,"id":4923,"nodeType":"Return","src":"20200:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"20118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4911,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"20122:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:21","memberName":"length","nodeType":"MemberAccess","src":"20122:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4927,"initializationExpression":{"assignments":[4907],"declarations":[{"constant":false,"id":4907,"mutability":"mutable","name":"i","nameLocation":"20111:1:21","nodeType":"VariableDeclaration","scope":4927,"src":"20103:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4909,"initialValue":{"hexValue":"30","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:21","subExpression":{"id":4914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"20142:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"20140:3:21"},"nodeType":"ForStatement","src":"20098:139:21"},{"expression":{"hexValue":"74727565","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4905,"id":4929,"nodeType":"Return","src":"20246:11:21"}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"19939:72:21","text":" @dev Returns whether the provided byte array is zero."},"id":4931,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:21","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:21","nodeType":"VariableDeclaration","scope":4931,"src":"20036:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4900,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:21"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4931,"src":"20082:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4903,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:21"},"scope":5606,"src":"20016:248:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5149,"nodeType":"Block","src":"20624:5124:21","statements":[{"id":5148,"nodeType":"UncheckedBlock","src":"20634:5108:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"20728:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4945,"nodeType":"IfStatement","src":"20724:53:21","trueBody":{"id":4944,"nodeType":"Block","src":"20736:41:21","statements":[{"expression":{"id":4942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"20761:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4938,"id":4943,"nodeType":"Return","src":"20754:8:21"}]}},{"assignments":[4947],"declarations":[{"constant":false,"id":4947,"mutability":"mutable","name":"aa","nameLocation":"21712:2:21","nodeType":"VariableDeclaration","scope":5148,"src":"21704:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4949,"initialValue":{"id":4948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"21717:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:21"},{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"xn","nameLocation":"21740:2:21","nodeType":"VariableDeclaration","scope":5148,"src":"21732:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4953,"initialValue":{"hexValue":"31","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21765:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4969,"nodeType":"IfStatement","src":"21761:92:21","trueBody":{"id":4968,"nodeType":"Block","src":"21783:70:21","statements":[{"expression":{"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4960,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21801:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4963,"nodeType":"ExpressionStatement","src":"21801:10:21"},{"expression":{"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4964,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"21829:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4967,"nodeType":"ExpressionStatement","src":"21829:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21870:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"21866:90:21","trueBody":{"id":4984,"nodeType":"Block","src":"21887:69:21","statements":[{"expression":{"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4976,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21905:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4979,"nodeType":"ExpressionStatement","src":"21905:9:21"},{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4980,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"21932:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ExpressionStatement","src":"21932:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21973:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5001,"nodeType":"IfStatement","src":"21969:90:21","trueBody":{"id":5000,"nodeType":"Block","src":"21990:69:21","statements":[{"expression":{"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4992,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22008:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4995,"nodeType":"ExpressionStatement","src":"22008:9:21"},{"expression":{"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4996,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22035:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4999,"nodeType":"ExpressionStatement","src":"22035:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22076:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"22072:89:21","trueBody":{"id":5016,"nodeType":"Block","src":"22093:68:21","statements":[{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5008,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22111:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ExpressionStatement","src":"22111:9:21"},{"expression":{"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22138:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5015,"nodeType":"ExpressionStatement","src":"22138:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22178:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5033,"nodeType":"IfStatement","src":"22174:87:21","trueBody":{"id":5032,"nodeType":"Block","src":"22194:67:21","statements":[{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5024,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22212:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5027,"nodeType":"ExpressionStatement","src":"22212:8:21"},{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22238:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"22238:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5049,"nodeType":"IfStatement","src":"22274:87:21","trueBody":{"id":5048,"nodeType":"Block","src":"22294:67:21","statements":[{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5040,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22312:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"22312:8:21"},{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22338:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5047,"nodeType":"ExpressionStatement","src":"22338:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22378:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5061,"nodeType":"IfStatement","src":"22374:61:21","trueBody":{"id":5060,"nodeType":"Block","src":"22394:41:21","statements":[{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5056,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22412:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5059,"nodeType":"ExpressionStatement","src":"22412:8:21"}]}},{"expression":{"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5062,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22855:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5064,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"22865:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5070,"nodeType":"ExpressionStatement","src":"22855:18:21"},{"expression":{"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5071,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24760:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24766:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"24771:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5074,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24775:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5081,"nodeType":"ExpressionStatement","src":"24760:23:21"},{"expression":{"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5082,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24869:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24875:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"24880:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5085,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24884:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5092,"nodeType":"ExpressionStatement","src":"24869:23:21"},{"expression":{"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5093,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24980:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24986:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"24991:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5096,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"24995:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"nodeType":"ExpressionStatement","src":"24980:23:21"},{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5104,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25089:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25095:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"25100:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5107,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25104:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5114,"nodeType":"ExpressionStatement","src":"25089:23:21"},{"expression":{"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25199:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25205:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"25210:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5118,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25214:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5125,"nodeType":"ExpressionStatement","src":"25199:23:21"},{"expression":{"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5126,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25309:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25315:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"25320:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5129,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25324:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5136,"nodeType":"ExpressionStatement","src":"25309:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25698:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25719:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"25724:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5142,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"25728:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5138,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"25703:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"25703:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4938,"id":5147,"nodeType":"Return","src":"25691:40:21"}]}]},"documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"20270:292:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:21","nodeType":"FunctionDefinition","parameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"a","nameLocation":"20589:1:21","nodeType":"VariableDeclaration","scope":5150,"src":"20581:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:21"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5150,"src":"20615:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:21"},"scope":5606,"src":"20567:5181:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5183,"nodeType":"Block","src":"25921:171:21","statements":[{"id":5182,"nodeType":"UncheckedBlock","src":"25931:155:21","statements":[{"assignments":[5162],"declarations":[{"constant":false,"id":5162,"mutability":"mutable","name":"result","nameLocation":"25963:6:21","nodeType":"VariableDeclaration","scope":5182,"src":"25955:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5161,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5166,"initialValue":{"arguments":[{"id":5164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"25977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5163,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5150,5184],"referencedDeclaration":5150,"src":"25972:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"26000:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5171,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"26042:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":5170,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"26025:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"26055:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"26064:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"26073:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5168,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26009:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26009:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5160,"id":5181,"nodeType":"Return","src":"25993:82:21"}]}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"25754:86:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5184,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:21","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"a","nameLocation":"25867:1:21","nodeType":"VariableDeclaration","scope":5184,"src":"25859:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5156,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:21","nodeType":"VariableDeclaration","scope":5184,"src":"25870:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":5155,"nodeType":"UserDefinedTypeName","pathNode":{"id":5154,"name":"Rounding","nameLocations":["25870:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"25870:8:21"},"referencedDeclaration":3997,"src":"25870:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:21"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5184,"src":"25912:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:21"},"scope":5606,"src":"25845:247:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"26281:2334:21","statements":[{"expression":{"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5192,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26363:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"26383:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5193,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26367:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26367:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5202,"nodeType":"ExpressionStatement","src":"26363:64:21"},{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5203,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26503:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"26525:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5207,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26530:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5204,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26508:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26508:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5216,"nodeType":"ExpressionStatement","src":"26503:56:21"},{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5217,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"26656:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5221,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26661:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5218,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26639:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26639:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5230,"nodeType":"ExpressionStatement","src":"26634:48:21"},{"expression":{"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5231,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26757:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"26779:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5235,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26784:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5232,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26762:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26762:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5244,"nodeType":"ExpressionStatement","src":"26757:44:21"},{"expression":{"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26874:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"26896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5249,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26901:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5246,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26879:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26879:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5258,"nodeType":"ExpressionStatement","src":"26874:42:21"},{"expression":{"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5259,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"26988:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"27010:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5263,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"27015:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5260,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"26993:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"26993:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5272,"nodeType":"ExpressionStatement","src":"26988:41:21"},{"AST":{"nativeSrc":"28490:119:21","nodeType":"YulBlock","src":"28490:119:21","statements":[{"nativeSrc":"28504:95:21","nodeType":"YulAssignment","src":"28504:95:21","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:21","nodeType":"YulIdentifier","src":"28512:1:21"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:21","nodeType":"YulIdentifier","src":"28524:1:21"},{"name":"x","nativeSrc":"28527:1:21","nodeType":"YulIdentifier","src":"28527:1:21"}],"functionName":{"name":"shr","nativeSrc":"28520:3:21","nodeType":"YulIdentifier","src":"28520:3:21"},"nativeSrc":"28520:9:21","nodeType":"YulFunctionCall","src":"28520:9:21"},{"kind":"number","nativeSrc":"28531:66:21","nodeType":"YulLiteral","src":"28531:66:21","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:21","nodeType":"YulIdentifier","src":"28515:4:21"},"nativeSrc":"28515:83:21","nodeType":"YulFunctionCall","src":"28515:83:21"}],"functionName":{"name":"or","nativeSrc":"28509:2:21","nodeType":"YulIdentifier","src":"28509:2:21"},"nativeSrc":"28509:90:21","nodeType":"YulFunctionCall","src":"28509:90:21"},"variableNames":[{"name":"r","nativeSrc":"28504:1:21","nodeType":"YulIdentifier","src":"28504:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5190,"isOffset":false,"isSlot":false,"src":"28504:1:21","valueSize":1},{"declaration":5190,"isOffset":false,"isSlot":false,"src":"28512:1:21","valueSize":1},{"declaration":5190,"isOffset":false,"isSlot":false,"src":"28524:1:21","valueSize":1},{"declaration":5187,"isOffset":false,"isSlot":false,"src":"28527:1:21","valueSize":1}],"flags":["memory-safe"],"id":5273,"nodeType":"InlineAssembly","src":"28465:144:21"}]},"documentation":{"id":5185,"nodeType":"StructuredDocumentation","src":"26098:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:21","nodeType":"FunctionDefinition","parameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"x","nameLocation":"26244:1:21","nodeType":"VariableDeclaration","scope":5275,"src":"26236:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5186,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:21"},"returnParameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"r","nameLocation":"26278:1:21","nodeType":"VariableDeclaration","scope":5275,"src":"26270:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:21"},"scope":5606,"src":"26222:2393:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"28848:175:21","statements":[{"id":5307,"nodeType":"UncheckedBlock","src":"28858:159:21","statements":[{"assignments":[5287],"declarations":[{"constant":false,"id":5287,"mutability":"mutable","name":"result","nameLocation":"28890:6:21","nodeType":"VariableDeclaration","scope":5307,"src":"28882:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5291,"initialValue":{"arguments":[{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"28904:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5275,5309],"referencedDeclaration":5275,"src":"28899:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"28931:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5296,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"28973:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":5295,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"28956:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"28991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"29000:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5293,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"28940:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"28940:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5285,"id":5306,"nodeType":"Return","src":"28924:82:21"}]}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"28621:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:21","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"28790:5:21","nodeType":"VariableDeclaration","scope":5309,"src":"28782:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:21","nodeType":"VariableDeclaration","scope":5309,"src":"28797:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":5280,"nodeType":"UserDefinedTypeName","pathNode":{"id":5279,"name":"Rounding","nameLocations":["28797:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"28797:8:21"},"referencedDeclaration":3997,"src":"28797:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:21"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5309,"src":"28839:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:21"},"scope":5606,"src":"28768:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5437,"nodeType":"Block","src":"29216:854:21","statements":[{"assignments":[5318],"declarations":[{"constant":false,"id":5318,"mutability":"mutable","name":"result","nameLocation":"29234:6:21","nodeType":"VariableDeclaration","scope":5437,"src":"29226:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5320,"initialValue":{"hexValue":"30","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:21"},{"id":5434,"nodeType":"UncheckedBlock","src":"29254:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29282:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5337,"nodeType":"IfStatement","src":"29278:103:21","trueBody":{"id":5336,"nodeType":"Block","src":"29301:80:21","statements":[{"expression":{"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29319:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5331,"nodeType":"ExpressionStatement","src":"29319:17:21"},{"expression":{"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"29354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5335,"nodeType":"ExpressionStatement","src":"29354:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29398:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5354,"nodeType":"IfStatement","src":"29394:103:21","trueBody":{"id":5353,"nodeType":"Block","src":"29417:80:21","statements":[{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29435:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"29435:17:21"},{"expression":{"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"29470:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5352,"nodeType":"ExpressionStatement","src":"29470:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29514:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5371,"nodeType":"IfStatement","src":"29510:103:21","trueBody":{"id":5370,"nodeType":"Block","src":"29533:80:21","statements":[{"expression":{"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5365,"nodeType":"ExpressionStatement","src":"29551:17:21"},{"expression":{"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"29586:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5369,"nodeType":"ExpressionStatement","src":"29586:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29630:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5388,"nodeType":"IfStatement","src":"29626:100:21","trueBody":{"id":5387,"nodeType":"Block","src":"29648:78:21","statements":[{"expression":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29666:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5382,"nodeType":"ExpressionStatement","src":"29666:16:21"},{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"29700:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5386,"nodeType":"ExpressionStatement","src":"29700:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5405,"nodeType":"IfStatement","src":"29739:100:21","trueBody":{"id":5404,"nodeType":"Block","src":"29761:78:21","statements":[{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29779:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5399,"nodeType":"ExpressionStatement","src":"29779:16:21"},{"expression":{"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5400,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"29813:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5403,"nodeType":"ExpressionStatement","src":"29813:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29856:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5422,"nodeType":"IfStatement","src":"29852:100:21","trueBody":{"id":5421,"nodeType":"Block","src":"29874:78:21","statements":[{"expression":{"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29892:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5416,"nodeType":"ExpressionStatement","src":"29892:16:21"},{"expression":{"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"29926:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5420,"nodeType":"ExpressionStatement","src":"29926:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"29969:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"29965:66:21","trueBody":{"id":5432,"nodeType":"Block","src":"29987:44:21","statements":[{"expression":{"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"30005:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5431,"nodeType":"ExpressionStatement","src":"30005:11:21"}]}}]},{"expression":{"id":5435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"30057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5316,"id":5436,"nodeType":"Return","src":"30050:13:21"}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"29029:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5438,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:21","nodeType":"FunctionDefinition","parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"value","nameLocation":"29177:5:21","nodeType":"VariableDeclaration","scope":5438,"src":"29169:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:21"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5438,"src":"29207:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:21"},"scope":5606,"src":"29154:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5471,"nodeType":"Block","src":"30305:177:21","statements":[{"id":5470,"nodeType":"UncheckedBlock","src":"30315:161:21","statements":[{"assignments":[5450],"declarations":[{"constant":false,"id":5450,"mutability":"mutable","name":"result","nameLocation":"30347:6:21","nodeType":"VariableDeclaration","scope":5470,"src":"30339:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5454,"initialValue":{"arguments":[{"id":5452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5451,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5438,5472],"referencedDeclaration":5438,"src":"30356:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"30389:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5459,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"30431:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":5458,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"30414:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"30450:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"30459:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5456,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"30398:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"30398:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5448,"id":5469,"nodeType":"Return","src":"30382:83:21"}]}]},"documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"30076:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5472,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:21","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"value","nameLocation":"30247:5:21","nodeType":"VariableDeclaration","scope":5472,"src":"30239:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:21","nodeType":"VariableDeclaration","scope":5472,"src":"30254:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":5443,"nodeType":"UserDefinedTypeName","pathNode":{"id":5442,"name":"Rounding","nameLocations":["30254:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"30254:8:21"},"referencedDeclaration":3997,"src":"30254:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:21"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5472,"src":"30296:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:21"},"scope":5606,"src":"30224:258:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5548,"nodeType":"Block","src":"30800:675:21","statements":[{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5480,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"30882:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"30902:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"30886:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"30886:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"30882:64:21"},{"expression":{"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31022:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"31044:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5495,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31049:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5492,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"31027:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"31027:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5504,"nodeType":"ExpressionStatement","src":"31022:56:21"},{"expression":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31153:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"31175:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31180:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5506,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"31158:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"31158:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5518,"nodeType":"ExpressionStatement","src":"31153:48:21"},{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5519,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31276:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"31298:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5523,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31303:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5520,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"31281:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"31281:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5532,"nodeType":"ExpressionStatement","src":"31276:44:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31426:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5539,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"31453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5540,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"31458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5537,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"31436:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"31436:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5479,"id":5547,"nodeType":"Return","src":"31418:50:21"}]},"documentation":{"id":5473,"nodeType":"StructuredDocumentation","src":"30488:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5549,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:21","nodeType":"FunctionDefinition","parameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"x","nameLocation":"30763:1:21","nodeType":"VariableDeclaration","scope":5549,"src":"30755:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5474,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:21"},"returnParameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"r","nameLocation":"30797:1:21","nodeType":"VariableDeclaration","scope":5549,"src":"30789:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:21"},"scope":5606,"src":"30739:736:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"31712:184:21","statements":[{"id":5584,"nodeType":"UncheckedBlock","src":"31722:168:21","statements":[{"assignments":[5561],"declarations":[{"constant":false,"id":5561,"mutability":"mutable","name":"result","nameLocation":"31754:6:21","nodeType":"VariableDeclaration","scope":5584,"src":"31746:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5565,"initialValue":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"31770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5549,5586],"referencedDeclaration":5549,"src":"31763:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"31797:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5570,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"31839:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":5569,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"31822:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"31873:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5567,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"31806:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"31806:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5559,"id":5583,"nodeType":"Return","src":"31790:89:21"}]}]},"documentation":{"id":5550,"nodeType":"StructuredDocumentation","src":"31481:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:21","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"value","nameLocation":"31654:5:21","nodeType":"VariableDeclaration","scope":5586,"src":"31646:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5555,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:21","nodeType":"VariableDeclaration","scope":5586,"src":"31661:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":5554,"nodeType":"UserDefinedTypeName","pathNode":{"id":5553,"name":"Rounding","nameLocations":["31661:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"31661:8:21"},"referencedDeclaration":3997,"src":"31661:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:21"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"31703:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:21"},"scope":5606,"src":"31630:266:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5604,"nodeType":"Block","src":"32094:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5597,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"32117:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}],"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5595,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:21","typeDescriptions":{}}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5594,"id":5603,"nodeType":"Return","src":"32104:31:21"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"31902:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5605,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:21","nodeType":"FunctionDefinition","parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:21","nodeType":"VariableDeclaration","scope":5605,"src":"32046:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"},"typeName":{"id":5589,"nodeType":"UserDefinedTypeName","pathNode":{"id":5588,"name":"Rounding","nameLocations":["32046:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"32046:8:21"},"referencedDeclaration":3997,"src":"32046:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:21"},"returnParameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5605,"src":"32088:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5592,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:21"},"scope":5606,"src":"32020:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5607,"src":"281:31863:21","usedErrors":[],"usedEvents":[]}],"src":"103:32042:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7371]},"id":7372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5609,"nodeType":"StructuredDocumentation","src":"218:550:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7371,"linearizedBaseContracts":[7371],"name":"SafeCast","nameLocation":"777:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"792:68:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5616,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:22","nodeType":"ErrorDefinition","parameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"bits","nameLocation":"908:4:22","nodeType":"VariableDeclaration","scope":5616,"src":"902:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5611,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5614,"mutability":"mutable","name":"value","nameLocation":"922:5:22","nodeType":"VariableDeclaration","scope":5616,"src":"914:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:22"},"src":"865:64:22"},{"documentation":{"id":5617,"nodeType":"StructuredDocumentation","src":"935:75:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5621,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:22","nodeType":"ErrorDefinition","parameters":{"id":5620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"value","nameLocation":"1056:5:22","nodeType":"VariableDeclaration","scope":5621,"src":"1049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5618,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:22"},"src":"1015:48:22"},{"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"1069:67:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5628,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:22","nodeType":"ErrorDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"bits","nameLocation":"1183:4:22","nodeType":"VariableDeclaration","scope":5628,"src":"1177:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5623,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"1196:5:22","nodeType":"VariableDeclaration","scope":5628,"src":"1189:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5625,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:22"},"src":"1141:62:22"},{"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"1209:75:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5633,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:22","nodeType":"ErrorDefinition","parameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"value","nameLocation":"1331:5:22","nodeType":"VariableDeclaration","scope":5633,"src":"1323:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:22"},"src":"1289:49:22"},{"body":{"id":5660,"nodeType":"Block","src":"1695:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"1709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5643,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:22","memberName":"max","nodeType":"MemberAccess","src":"1717:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"1705:105:22","trueBody":{"id":5653,"nodeType":"Block","src":"1736:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"1793:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5648,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"1757:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5652,"nodeType":"RevertStatement","src":"1750:49:22"}]}},{"expression":{"arguments":[{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"1834:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5655,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:22","typeDescriptions":{}}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5640,"id":5659,"nodeType":"Return","src":"1819:21:22"}]},"documentation":{"id":5634,"nodeType":"StructuredDocumentation","src":"1344:280:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5661,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:22","nodeType":"FunctionDefinition","parameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":5661,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:22"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5661,"src":"1686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5638,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:22"},"scope":7371,"src":"1629:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5688,"nodeType":"Block","src":"2204:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"2218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5671,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5670,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:22","memberName":"max","nodeType":"MemberAccess","src":"2226:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5682,"nodeType":"IfStatement","src":"2214:105:22","trueBody":{"id":5681,"nodeType":"Block","src":"2245:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"2302:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5676,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2266:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5680,"nodeType":"RevertStatement","src":"2259:49:22"}]}},{"expression":{"arguments":[{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5683,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:22","typeDescriptions":{}}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5668,"id":5687,"nodeType":"Return","src":"2328:21:22"}]},"documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"1853:280:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5689,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:22","nodeType":"FunctionDefinition","parameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"value","nameLocation":"2165:5:22","nodeType":"VariableDeclaration","scope":5689,"src":"2157:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:22"},"returnParameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5689,"src":"2195:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5666,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:22"},"scope":7371,"src":"2138:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5716,"nodeType":"Block","src":"2713:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"2727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5699,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5698,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:22","memberName":"max","nodeType":"MemberAccess","src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5710,"nodeType":"IfStatement","src":"2723:105:22","trueBody":{"id":5709,"nodeType":"Block","src":"2754:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5704,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2775:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5708,"nodeType":"RevertStatement","src":"2768:49:22"}]}},{"expression":{"arguments":[{"id":5713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"2852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5711,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5696,"id":5715,"nodeType":"Return","src":"2837:21:22"}]},"documentation":{"id":5690,"nodeType":"StructuredDocumentation","src":"2362:280:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5717,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:22","nodeType":"FunctionDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"value","nameLocation":"2674:5:22","nodeType":"VariableDeclaration","scope":5717,"src":"2666:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:22"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5717,"src":"2704:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5694,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:22"},"scope":7371,"src":"2647:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5744,"nodeType":"Block","src":"3222:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"3236:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5727,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5726,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:22","memberName":"max","nodeType":"MemberAccess","src":"3244:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5738,"nodeType":"IfStatement","src":"3232:105:22","trueBody":{"id":5737,"nodeType":"Block","src":"3263:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"3320:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5732,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"3284:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5736,"nodeType":"RevertStatement","src":"3277:49:22"}]}},{"expression":{"arguments":[{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"3361:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5739,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:22","typeDescriptions":{}}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5724,"id":5743,"nodeType":"Return","src":"3346:21:22"}]},"documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"2871:280:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5745,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:22","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"value","nameLocation":"3183:5:22","nodeType":"VariableDeclaration","scope":5745,"src":"3175:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5719,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:22"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5745,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5722,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":7371,"src":"3156:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"3731:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5755,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:22","memberName":"max","nodeType":"MemberAccess","src":"3753:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5766,"nodeType":"IfStatement","src":"3741:105:22","trueBody":{"id":5765,"nodeType":"Block","src":"3772:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"3829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5760,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"3793:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5764,"nodeType":"RevertStatement","src":"3786:49:22"}]}},{"expression":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"3870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5767,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:22","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5752,"id":5771,"nodeType":"Return","src":"3855:21:22"}]},"documentation":{"id":5746,"nodeType":"StructuredDocumentation","src":"3380:280:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:22","nodeType":"FunctionDefinition","parameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"value","nameLocation":"3692:5:22","nodeType":"VariableDeclaration","scope":5773,"src":"3684:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:22"},"returnParameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5773,"src":"3722:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5750,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:22"},"scope":7371,"src":"3665:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5800,"nodeType":"Block","src":"4240:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"4254:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5783,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5782,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:22","memberName":"max","nodeType":"MemberAccess","src":"4262:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"4250:105:22","trueBody":{"id":5793,"nodeType":"Block","src":"4281:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"4338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5788,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"4302:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5792,"nodeType":"RevertStatement","src":"4295:49:22"}]}},{"expression":{"arguments":[{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"4379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5795,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:22","typeDescriptions":{}}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5780,"id":5799,"nodeType":"Return","src":"4364:21:22"}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"3889:280:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5801,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:22","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"4201:5:22","nodeType":"VariableDeclaration","scope":5801,"src":"4193:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:22"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5801,"src":"4231:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5778,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:22"},"scope":7371,"src":"4174:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"4749:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"4763:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5811,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5810,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:22","memberName":"max","nodeType":"MemberAccess","src":"4771:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5822,"nodeType":"IfStatement","src":"4759:105:22","trueBody":{"id":5821,"nodeType":"Block","src":"4790:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"4847:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5816,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"4811:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5820,"nodeType":"RevertStatement","src":"4804:49:22"}]}},{"expression":{"arguments":[{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"4888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5823,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:22","typeDescriptions":{}}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5808,"id":5827,"nodeType":"Return","src":"4873:21:22"}]},"documentation":{"id":5802,"nodeType":"StructuredDocumentation","src":"4398:280:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:22","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"value","nameLocation":"4710:5:22","nodeType":"VariableDeclaration","scope":5829,"src":"4702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5803,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:22"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5829,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5806,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:22"},"scope":7371,"src":"4683:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5856,"nodeType":"Block","src":"5258:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"5272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5839,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5838,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:22","memberName":"max","nodeType":"MemberAccess","src":"5280:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5850,"nodeType":"IfStatement","src":"5268:105:22","trueBody":{"id":5849,"nodeType":"Block","src":"5299:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"5356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5844,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"5320:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5848,"nodeType":"RevertStatement","src":"5313:49:22"}]}},{"expression":{"arguments":[{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"5397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5851,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:22","typeDescriptions":{}}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5836,"id":5855,"nodeType":"Return","src":"5382:21:22"}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"4907:280:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5857,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:22","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"value","nameLocation":"5219:5:22","nodeType":"VariableDeclaration","scope":5857,"src":"5211:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:22"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5857,"src":"5249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5834,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:22"},"scope":7371,"src":"5192:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5884,"nodeType":"Block","src":"5767:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"5781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5867,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5866,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:22","memberName":"max","nodeType":"MemberAccess","src":"5789:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"5777:105:22","trueBody":{"id":5877,"nodeType":"Block","src":"5808:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5872,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"5829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5876,"nodeType":"RevertStatement","src":"5822:49:22"}]}},{"expression":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"5906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5879,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:22","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5864,"id":5883,"nodeType":"Return","src":"5891:21:22"}]},"documentation":{"id":5858,"nodeType":"StructuredDocumentation","src":"5416:280:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5885,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:22","nodeType":"FunctionDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"value","nameLocation":"5728:5:22","nodeType":"VariableDeclaration","scope":5885,"src":"5720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:22"},"returnParameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"5758:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5862,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:22"},"scope":7371,"src":"5701:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"6276:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"6290:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5895,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5894,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:22","memberName":"max","nodeType":"MemberAccess","src":"6298:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5906,"nodeType":"IfStatement","src":"6286:105:22","trueBody":{"id":5905,"nodeType":"Block","src":"6317:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"6374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5900,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"6338:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5904,"nodeType":"RevertStatement","src":"6331:49:22"}]}},{"expression":{"arguments":[{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"6415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5907,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5892,"id":5911,"nodeType":"Return","src":"6400:21:22"}]},"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"5925:280:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:22","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"value","nameLocation":"6237:5:22","nodeType":"VariableDeclaration","scope":5913,"src":"6229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5887,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:22"},"returnParameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5913,"src":"6267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5890,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:22"},"scope":7371,"src":"6210:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5940,"nodeType":"Block","src":"6785:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"6799:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5923,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:22","memberName":"max","nodeType":"MemberAccess","src":"6807:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5934,"nodeType":"IfStatement","src":"6795:105:22","trueBody":{"id":5933,"nodeType":"Block","src":"6826:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"6883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5928,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"6847:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5932,"nodeType":"RevertStatement","src":"6840:49:22"}]}},{"expression":{"arguments":[{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"6924:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5935,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{}}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5920,"id":5939,"nodeType":"Return","src":"6909:21:22"}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"6434:280:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:22","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"value","nameLocation":"6746:5:22","nodeType":"VariableDeclaration","scope":5941,"src":"6738:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:22"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5941,"src":"6776:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5918,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:22"},"scope":7371,"src":"6719:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5968,"nodeType":"Block","src":"7294:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"7308:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5951,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5950,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:22","memberName":"max","nodeType":"MemberAccess","src":"7316:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"7304:105:22","trueBody":{"id":5961,"nodeType":"Block","src":"7335:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"7392:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5956,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"7356:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5960,"nodeType":"RevertStatement","src":"7349:49:22"}]}},{"expression":{"arguments":[{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"7433:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5963,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:22","typeDescriptions":{}}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5948,"id":5967,"nodeType":"Return","src":"7418:21:22"}]},"documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"6943:280:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5969,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:22","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"value","nameLocation":"7255:5:22","nodeType":"VariableDeclaration","scope":5969,"src":"7247:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:22"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5969,"src":"7285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5946,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:22"},"scope":7371,"src":"7228:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5996,"nodeType":"Block","src":"7803:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"7817:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5979,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:22","memberName":"max","nodeType":"MemberAccess","src":"7825:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5990,"nodeType":"IfStatement","src":"7813:105:22","trueBody":{"id":5989,"nodeType":"Block","src":"7844:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"7901:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5984,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"7865:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5988,"nodeType":"RevertStatement","src":"7858:49:22"}]}},{"expression":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"7942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5991,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:22","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5976,"id":5995,"nodeType":"Return","src":"7927:21:22"}]},"documentation":{"id":5970,"nodeType":"StructuredDocumentation","src":"7452:280:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:22","nodeType":"FunctionDefinition","parameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"value","nameLocation":"7764:5:22","nodeType":"VariableDeclaration","scope":5997,"src":"7756:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:22"},"returnParameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"7794:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5974,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:22"},"scope":7371,"src":"7737:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"8312:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"8326:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6007,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6006,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:22","memberName":"max","nodeType":"MemberAccess","src":"8334:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6018,"nodeType":"IfStatement","src":"8322:105:22","trueBody":{"id":6017,"nodeType":"Block","src":"8353:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"8410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6012,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"8374:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6016,"nodeType":"RevertStatement","src":"8367:49:22"}]}},{"expression":{"arguments":[{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"8451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6019,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:22","typeDescriptions":{}}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6004,"id":6023,"nodeType":"Return","src":"8436:21:22"}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"7961:280:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:22","nodeType":"FunctionDefinition","parameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"value","nameLocation":"8273:5:22","nodeType":"VariableDeclaration","scope":6025,"src":"8265:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:22"},"returnParameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"8303:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6002,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:22"},"scope":7371,"src":"8246:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"8821:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"8835:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6035,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:22","memberName":"max","nodeType":"MemberAccess","src":"8843:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6046,"nodeType":"IfStatement","src":"8831:105:22","trueBody":{"id":6045,"nodeType":"Block","src":"8862:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"8919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6040,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"8883:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6044,"nodeType":"RevertStatement","src":"8876:49:22"}]}},{"expression":{"arguments":[{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"8960:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6047,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:22","typeDescriptions":{}}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6032,"id":6051,"nodeType":"Return","src":"8945:21:22"}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"8470:280:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:22","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"value","nameLocation":"8782:5:22","nodeType":"VariableDeclaration","scope":6053,"src":"8774:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:22"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"8812:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6030,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:22"},"scope":7371,"src":"8755:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6080,"nodeType":"Block","src":"9330:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"9344:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6063,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6062,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:22","memberName":"max","nodeType":"MemberAccess","src":"9352:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6074,"nodeType":"IfStatement","src":"9340:105:22","trueBody":{"id":6073,"nodeType":"Block","src":"9371:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"9428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6068,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"9392:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6072,"nodeType":"RevertStatement","src":"9385:49:22"}]}},{"expression":{"arguments":[{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"9469:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6075,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:22","typeDescriptions":{}}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6060,"id":6079,"nodeType":"Return","src":"9454:21:22"}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"8979:280:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6081,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:22","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"9291:5:22","nodeType":"VariableDeclaration","scope":6081,"src":"9283:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:22"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6081,"src":"9321:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6058,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:22"},"scope":7371,"src":"9264:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"9839:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6091,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6090,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:22","memberName":"max","nodeType":"MemberAccess","src":"9861:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"9849:105:22","trueBody":{"id":6101,"nodeType":"Block","src":"9880:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"9937:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6096,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"9901:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"RevertStatement","src":"9894:49:22"}]}},{"expression":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"9978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6103,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:22","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6088,"id":6107,"nodeType":"Return","src":"9963:21:22"}]},"documentation":{"id":6082,"nodeType":"StructuredDocumentation","src":"9488:280:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:22","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"value","nameLocation":"9800:5:22","nodeType":"VariableDeclaration","scope":6109,"src":"9792:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:22"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"9830:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6086,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:22"},"scope":7371,"src":"9773:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"10348:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"10362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6119,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6118,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:22","memberName":"max","nodeType":"MemberAccess","src":"10370:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"10358:105:22","trueBody":{"id":6129,"nodeType":"Block","src":"10389:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"10446:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6124,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"10410:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"RevertStatement","src":"10403:49:22"}]}},{"expression":{"arguments":[{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"10487:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6131,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:22","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6116,"id":6135,"nodeType":"Return","src":"10472:21:22"}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"9997:280:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:22","nodeType":"FunctionDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"10309:5:22","nodeType":"VariableDeclaration","scope":6137,"src":"10301:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:22"},"returnParameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6137,"src":"10339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6114,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:22"},"scope":7371,"src":"10282:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6164,"nodeType":"Block","src":"10857:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"10871:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6147,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:22","memberName":"max","nodeType":"MemberAccess","src":"10879:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6158,"nodeType":"IfStatement","src":"10867:105:22","trueBody":{"id":6157,"nodeType":"Block","src":"10898:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"10955:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6152,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"10919:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6156,"nodeType":"RevertStatement","src":"10912:49:22"}]}},{"expression":{"arguments":[{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"10996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6159,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:22","typeDescriptions":{}}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6144,"id":6163,"nodeType":"Return","src":"10981:21:22"}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"10506:280:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6165,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:22","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"10818:5:22","nodeType":"VariableDeclaration","scope":6165,"src":"10810:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:22"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6165,"src":"10848:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6142,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:22"},"scope":7371,"src":"10791:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"11360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"11374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6175,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:22","memberName":"max","nodeType":"MemberAccess","src":"11382:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"11370:103:22","trueBody":{"id":6185,"nodeType":"Block","src":"11400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"11456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6180,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"11421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6184,"nodeType":"RevertStatement","src":"11414:48:22"}]}},{"expression":{"arguments":[{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"11496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6187,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:22","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6172,"id":6191,"nodeType":"Return","src":"11482:20:22"}]},"documentation":{"id":6166,"nodeType":"StructuredDocumentation","src":"11015:276:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"value","nameLocation":"11322:5:22","nodeType":"VariableDeclaration","scope":6193,"src":"11314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:22"},"returnParameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"11352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6170,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:22"},"scope":7371,"src":"11296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6220,"nodeType":"Block","src":"11860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"11874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6203,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:22","memberName":"max","nodeType":"MemberAccess","src":"11882:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"11870:103:22","trueBody":{"id":6213,"nodeType":"Block","src":"11900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"11956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6208,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"11921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6212,"nodeType":"RevertStatement","src":"11914:48:22"}]}},{"expression":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"11996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6215,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:22","typeDescriptions":{}}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6200,"id":6219,"nodeType":"Return","src":"11982:20:22"}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"11515:276:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"11822:5:22","nodeType":"VariableDeclaration","scope":6221,"src":"11814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6195,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:22"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6221,"src":"11852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6198,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:22"},"scope":7371,"src":"11796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6248,"nodeType":"Block","src":"12360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"12374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6231,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:22","memberName":"max","nodeType":"MemberAccess","src":"12382:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"12370:103:22","trueBody":{"id":6241,"nodeType":"Block","src":"12400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"12456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6236,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"12421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6240,"nodeType":"RevertStatement","src":"12414:48:22"}]}},{"expression":{"arguments":[{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"12496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6243,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:22","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6228,"id":6247,"nodeType":"Return","src":"12482:20:22"}]},"documentation":{"id":6222,"nodeType":"StructuredDocumentation","src":"12015:276:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6249,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"value","nameLocation":"12322:5:22","nodeType":"VariableDeclaration","scope":6249,"src":"12314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:22"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6249,"src":"12352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6226,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:22"},"scope":7371,"src":"12296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"12860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"12874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6259,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:22","memberName":"max","nodeType":"MemberAccess","src":"12882:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6270,"nodeType":"IfStatement","src":"12870:103:22","trueBody":{"id":6269,"nodeType":"Block","src":"12900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"12956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6264,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"12921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6268,"nodeType":"RevertStatement","src":"12914:48:22"}]}},{"expression":{"arguments":[{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"12996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6271,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:22","typeDescriptions":{}}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6256,"id":6275,"nodeType":"Return","src":"12982:20:22"}]},"documentation":{"id":6250,"nodeType":"StructuredDocumentation","src":"12515:276:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"value","nameLocation":"12822:5:22","nodeType":"VariableDeclaration","scope":6277,"src":"12814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6251,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:22"},"returnParameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6277,"src":"12852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6254,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:22"},"scope":7371,"src":"12796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6304,"nodeType":"Block","src":"13360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"13374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6287,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:22","memberName":"max","nodeType":"MemberAccess","src":"13382:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6298,"nodeType":"IfStatement","src":"13370:103:22","trueBody":{"id":6297,"nodeType":"Block","src":"13400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"13456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6292,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"13421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6296,"nodeType":"RevertStatement","src":"13414:48:22"}]}},{"expression":{"arguments":[{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"13496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6299,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:22","typeDescriptions":{}}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6284,"id":6303,"nodeType":"Return","src":"13482:20:22"}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"13015:276:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"value","nameLocation":"13322:5:22","nodeType":"VariableDeclaration","scope":6305,"src":"13314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:22"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6305,"src":"13352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6282,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:22"},"scope":7371,"src":"13296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6332,"nodeType":"Block","src":"13860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"13874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6315,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6314,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:22","memberName":"max","nodeType":"MemberAccess","src":"13882:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"IfStatement","src":"13870:103:22","trueBody":{"id":6325,"nodeType":"Block","src":"13900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"13956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6320,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"13921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6324,"nodeType":"RevertStatement","src":"13914:48:22"}]}},{"expression":{"arguments":[{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"13996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6327,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:22","typeDescriptions":{}}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6312,"id":6331,"nodeType":"Return","src":"13982:20:22"}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"13515:276:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"13822:5:22","nodeType":"VariableDeclaration","scope":6333,"src":"13814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:22"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6333,"src":"13852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6310,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:22"},"scope":7371,"src":"13796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6360,"nodeType":"Block","src":"14360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"14374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6343,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6342,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:22","memberName":"max","nodeType":"MemberAccess","src":"14382:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6354,"nodeType":"IfStatement","src":"14370:103:22","trueBody":{"id":6353,"nodeType":"Block","src":"14400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"14456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6348,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"14421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6352,"nodeType":"RevertStatement","src":"14414:48:22"}]}},{"expression":{"arguments":[{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"14496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6355,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:22","typeDescriptions":{}}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6340,"id":6359,"nodeType":"Return","src":"14482:20:22"}]},"documentation":{"id":6334,"nodeType":"StructuredDocumentation","src":"14015:276:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6361,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"value","nameLocation":"14322:5:22","nodeType":"VariableDeclaration","scope":6361,"src":"14314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6335,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:22"},"returnParameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6361,"src":"14352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6338,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:22"},"scope":7371,"src":"14296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6388,"nodeType":"Block","src":"14860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"14874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6371,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:22","memberName":"max","nodeType":"MemberAccess","src":"14882:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6382,"nodeType":"IfStatement","src":"14870:103:22","trueBody":{"id":6381,"nodeType":"Block","src":"14900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"14956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6376,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"14921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"RevertStatement","src":"14914:48:22"}]}},{"expression":{"arguments":[{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"14996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6383,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:22","typeDescriptions":{}}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6368,"id":6387,"nodeType":"Return","src":"14982:20:22"}]},"documentation":{"id":6362,"nodeType":"StructuredDocumentation","src":"14515:276:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6389,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"value","nameLocation":"14822:5:22","nodeType":"VariableDeclaration","scope":6389,"src":"14814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6363,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:22"},"returnParameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6389,"src":"14852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6366,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:22"},"scope":7371,"src":"14796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6416,"nodeType":"Block","src":"15360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"15374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6399,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:22","memberName":"max","nodeType":"MemberAccess","src":"15382:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6410,"nodeType":"IfStatement","src":"15370:103:22","trueBody":{"id":6409,"nodeType":"Block","src":"15400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"15456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6404,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"15421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6408,"nodeType":"RevertStatement","src":"15414:48:22"}]}},{"expression":{"arguments":[{"id":6413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"15496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6411,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:22","typeDescriptions":{}}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6396,"id":6415,"nodeType":"Return","src":"15482:20:22"}]},"documentation":{"id":6390,"nodeType":"StructuredDocumentation","src":"15015:276:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"value","nameLocation":"15322:5:22","nodeType":"VariableDeclaration","scope":6417,"src":"15314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:22"},"returnParameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6417,"src":"15352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6394,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:22"},"scope":7371,"src":"15296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6444,"nodeType":"Block","src":"15860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"15874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6427,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:22","memberName":"max","nodeType":"MemberAccess","src":"15882:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6438,"nodeType":"IfStatement","src":"15870:103:22","trueBody":{"id":6437,"nodeType":"Block","src":"15900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"15956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6432,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"15921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6436,"nodeType":"RevertStatement","src":"15914:48:22"}]}},{"expression":{"arguments":[{"id":6441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"15996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6439,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:22","typeDescriptions":{}}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6424,"id":6443,"nodeType":"Return","src":"15982:20:22"}]},"documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"15515:276:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6445,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"value","nameLocation":"15822:5:22","nodeType":"VariableDeclaration","scope":6445,"src":"15814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6419,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:22"},"returnParameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6445,"src":"15852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6422,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:22"},"scope":7371,"src":"15796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6472,"nodeType":"Block","src":"16360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"16374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6455,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:22","memberName":"max","nodeType":"MemberAccess","src":"16382:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"16370:103:22","trueBody":{"id":6465,"nodeType":"Block","src":"16400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"16456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6460,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"16421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"RevertStatement","src":"16414:48:22"}]}},{"expression":{"arguments":[{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"16496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6467,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:22","typeDescriptions":{}}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6452,"id":6471,"nodeType":"Return","src":"16482:20:22"}]},"documentation":{"id":6446,"nodeType":"StructuredDocumentation","src":"16015:276:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6473,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"value","nameLocation":"16322:5:22","nodeType":"VariableDeclaration","scope":6473,"src":"16314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:22"},"returnParameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6473,"src":"16352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6450,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:22"},"scope":7371,"src":"16296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6500,"nodeType":"Block","src":"16854:146:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"16868:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6483,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:22","memberName":"max","nodeType":"MemberAccess","src":"16876:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6494,"nodeType":"IfStatement","src":"16864:101:22","trueBody":{"id":6493,"nodeType":"Block","src":"16893:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"16948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6488,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"16914:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"RevertStatement","src":"16907:47:22"}]}},{"expression":{"arguments":[{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"16987:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6495,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:22","typeDescriptions":{}}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6480,"id":6499,"nodeType":"Return","src":"16974:19:22"}]},"documentation":{"id":6474,"nodeType":"StructuredDocumentation","src":"16515:272:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6501,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:22","nodeType":"FunctionDefinition","parameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"value","nameLocation":"16817:5:22","nodeType":"VariableDeclaration","scope":6501,"src":"16809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6475,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:22"},"returnParameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6501,"src":"16847:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6478,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:22"},"scope":7371,"src":"16792:208:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6523,"nodeType":"Block","src":"17236:128:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"17250:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6517,"nodeType":"IfStatement","src":"17246:81:22","trueBody":{"id":6516,"nodeType":"Block","src":"17261:66:22","statements":[{"errorCall":{"arguments":[{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"17310:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6512,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"17282:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6515,"nodeType":"RevertStatement","src":"17275:41:22"}]}},{"expression":{"arguments":[{"id":6520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"17351:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:22","typeDescriptions":{}}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6508,"id":6522,"nodeType":"Return","src":"17336:21:22"}]},"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"17006:160:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6524,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:22","nodeType":"FunctionDefinition","parameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"value","nameLocation":"17197:5:22","nodeType":"VariableDeclaration","scope":6524,"src":"17190:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6503,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:22"},"returnParameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6524,"src":"17227:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:22"},"scope":7371,"src":"17171:193:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6549,"nodeType":"Block","src":"17761:150:22","statements":[{"expression":{"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"17771:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"17791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6533,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:22","typeDescriptions":{}}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6538,"nodeType":"ExpressionStatement","src":"17771:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"17811:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"17825:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6548,"nodeType":"IfStatement","src":"17807:98:22","trueBody":{"id":6547,"nodeType":"Block","src":"17832:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"17888:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"17853:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6546,"nodeType":"RevertStatement","src":"17846:48:22"}]}}]},"documentation":{"id":6525,"nodeType":"StructuredDocumentation","src":"17370:312:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:22","nodeType":"FunctionDefinition","parameters":{"id":6528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"value","nameLocation":"17712:5:22","nodeType":"VariableDeclaration","scope":6550,"src":"17705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6526,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:22"},"returnParameters":{"id":6531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6530,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:22","nodeType":"VariableDeclaration","scope":6550,"src":"17742:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6529,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:22"},"scope":7371,"src":"17687:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6575,"nodeType":"Block","src":"18308:150:22","statements":[{"expression":{"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"18318:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"18338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6559,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:22","typeDescriptions":{}}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6564,"nodeType":"ExpressionStatement","src":"18318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"18358:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"18372:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6574,"nodeType":"IfStatement","src":"18354:98:22","trueBody":{"id":6573,"nodeType":"Block","src":"18379:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"18435:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"18400:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6572,"nodeType":"RevertStatement","src":"18393:48:22"}]}}]},"documentation":{"id":6551,"nodeType":"StructuredDocumentation","src":"17917:312:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:22","nodeType":"FunctionDefinition","parameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6553,"mutability":"mutable","name":"value","nameLocation":"18259:5:22","nodeType":"VariableDeclaration","scope":6576,"src":"18252:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6552,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:22"},"returnParameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:22","nodeType":"VariableDeclaration","scope":6576,"src":"18289:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6555,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:22"},"scope":7371,"src":"18234:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6601,"nodeType":"Block","src":"18855:150:22","statements":[{"expression":{"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"18865:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"18885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6585,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:22","typeDescriptions":{}}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6590,"nodeType":"ExpressionStatement","src":"18865:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"18905:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"18919:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6600,"nodeType":"IfStatement","src":"18901:98:22","trueBody":{"id":6599,"nodeType":"Block","src":"18926:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"18982:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"18947:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6598,"nodeType":"RevertStatement","src":"18940:48:22"}]}}]},"documentation":{"id":6577,"nodeType":"StructuredDocumentation","src":"18464:312:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:22","nodeType":"FunctionDefinition","parameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"value","nameLocation":"18806:5:22","nodeType":"VariableDeclaration","scope":6602,"src":"18799:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6578,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:22"},"returnParameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:22","nodeType":"VariableDeclaration","scope":6602,"src":"18836:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6581,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:22"},"scope":7371,"src":"18781:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6627,"nodeType":"Block","src":"19402:150:22","statements":[{"expression":{"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"19412:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"19432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6611,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:22","typeDescriptions":{}}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6616,"nodeType":"ExpressionStatement","src":"19412:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"19452:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"19466:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6626,"nodeType":"IfStatement","src":"19448:98:22","trueBody":{"id":6625,"nodeType":"Block","src":"19473:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"19529:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"19494:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6624,"nodeType":"RevertStatement","src":"19487:48:22"}]}}]},"documentation":{"id":6603,"nodeType":"StructuredDocumentation","src":"19011:312:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:22","nodeType":"FunctionDefinition","parameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"value","nameLocation":"19353:5:22","nodeType":"VariableDeclaration","scope":6628,"src":"19346:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6604,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:22"},"returnParameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:22","nodeType":"VariableDeclaration","scope":6628,"src":"19383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6607,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:22"},"scope":7371,"src":"19328:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6653,"nodeType":"Block","src":"19949:150:22","statements":[{"expression":{"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"19959:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"19979:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6637,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:22","typeDescriptions":{}}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6642,"nodeType":"ExpressionStatement","src":"19959:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"19999:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"20013:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6652,"nodeType":"IfStatement","src":"19995:98:22","trueBody":{"id":6651,"nodeType":"Block","src":"20020:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"20076:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"20041:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6650,"nodeType":"RevertStatement","src":"20034:48:22"}]}}]},"documentation":{"id":6629,"nodeType":"StructuredDocumentation","src":"19558:312:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:22","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"value","nameLocation":"19900:5:22","nodeType":"VariableDeclaration","scope":6654,"src":"19893:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6630,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:22"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:22","nodeType":"VariableDeclaration","scope":6654,"src":"19930:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6633,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:22"},"scope":7371,"src":"19875:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6679,"nodeType":"Block","src":"20496:150:22","statements":[{"expression":{"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"20506:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"20526:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6663,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:22","typeDescriptions":{}}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6668,"nodeType":"ExpressionStatement","src":"20506:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"20546:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"20560:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6678,"nodeType":"IfStatement","src":"20542:98:22","trueBody":{"id":6677,"nodeType":"Block","src":"20567:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"20623:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"20588:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"RevertStatement","src":"20581:48:22"}]}}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"20105:312:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:22","nodeType":"FunctionDefinition","parameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"value","nameLocation":"20447:5:22","nodeType":"VariableDeclaration","scope":6680,"src":"20440:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6656,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:22"},"returnParameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:22","nodeType":"VariableDeclaration","scope":6680,"src":"20477:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6659,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:22"},"scope":7371,"src":"20422:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6705,"nodeType":"Block","src":"21043:150:22","statements":[{"expression":{"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"21053:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"21073:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6689,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:22","typeDescriptions":{}}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6694,"nodeType":"ExpressionStatement","src":"21053:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"21093:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"21107:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"21089:98:22","trueBody":{"id":6703,"nodeType":"Block","src":"21114:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"21170:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"21135:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6702,"nodeType":"RevertStatement","src":"21128:48:22"}]}}]},"documentation":{"id":6681,"nodeType":"StructuredDocumentation","src":"20652:312:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:22","nodeType":"FunctionDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"value","nameLocation":"20994:5:22","nodeType":"VariableDeclaration","scope":6706,"src":"20987:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6682,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:22"},"returnParameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:22","nodeType":"VariableDeclaration","scope":6706,"src":"21024:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6685,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:22"},"scope":7371,"src":"20969:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6731,"nodeType":"Block","src":"21590:150:22","statements":[{"expression":{"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"21600:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"21620:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6715,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:22","typeDescriptions":{}}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6720,"nodeType":"ExpressionStatement","src":"21600:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"21640:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"21654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6730,"nodeType":"IfStatement","src":"21636:98:22","trueBody":{"id":6729,"nodeType":"Block","src":"21661:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"21717:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6724,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"21682:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6728,"nodeType":"RevertStatement","src":"21675:48:22"}]}}]},"documentation":{"id":6707,"nodeType":"StructuredDocumentation","src":"21199:312:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6732,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:22","nodeType":"FunctionDefinition","parameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"value","nameLocation":"21541:5:22","nodeType":"VariableDeclaration","scope":6732,"src":"21534:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6708,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:22"},"returnParameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:22","nodeType":"VariableDeclaration","scope":6732,"src":"21571:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6711,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:22"},"scope":7371,"src":"21516:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6757,"nodeType":"Block","src":"22137:150:22","statements":[{"expression":{"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"22147:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"22167:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6741,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:22","typeDescriptions":{}}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6746,"nodeType":"ExpressionStatement","src":"22147:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"22187:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"22201:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"IfStatement","src":"22183:98:22","trueBody":{"id":6755,"nodeType":"Block","src":"22208:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"22264:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6750,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"22229:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6754,"nodeType":"RevertStatement","src":"22222:48:22"}]}}]},"documentation":{"id":6733,"nodeType":"StructuredDocumentation","src":"21746:312:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6758,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:22","nodeType":"FunctionDefinition","parameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"value","nameLocation":"22088:5:22","nodeType":"VariableDeclaration","scope":6758,"src":"22081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6734,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:22"},"returnParameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:22","nodeType":"VariableDeclaration","scope":6758,"src":"22118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6737,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:22"},"scope":7371,"src":"22063:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6783,"nodeType":"Block","src":"22684:150:22","statements":[{"expression":{"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"22694:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"22714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6767,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:22","typeDescriptions":{}}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6772,"nodeType":"ExpressionStatement","src":"22694:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"22734:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"22748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6782,"nodeType":"IfStatement","src":"22730:98:22","trueBody":{"id":6781,"nodeType":"Block","src":"22755:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"22811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6776,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"22776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6780,"nodeType":"RevertStatement","src":"22769:48:22"}]}}]},"documentation":{"id":6759,"nodeType":"StructuredDocumentation","src":"22293:312:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6784,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:22","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"value","nameLocation":"22635:5:22","nodeType":"VariableDeclaration","scope":6784,"src":"22628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6760,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:22"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:22","nodeType":"VariableDeclaration","scope":6784,"src":"22665:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6763,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:22"},"scope":7371,"src":"22610:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6809,"nodeType":"Block","src":"23231:150:22","statements":[{"expression":{"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"23241:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"23261:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6793,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:22","typeDescriptions":{}}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6798,"nodeType":"ExpressionStatement","src":"23241:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"23281:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"23295:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6808,"nodeType":"IfStatement","src":"23277:98:22","trueBody":{"id":6807,"nodeType":"Block","src":"23302:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"23358:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6802,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"23323:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6806,"nodeType":"RevertStatement","src":"23316:48:22"}]}}]},"documentation":{"id":6785,"nodeType":"StructuredDocumentation","src":"22840:312:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:22","nodeType":"FunctionDefinition","parameters":{"id":6788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"value","nameLocation":"23182:5:22","nodeType":"VariableDeclaration","scope":6810,"src":"23175:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6786,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:22"},"returnParameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:22","nodeType":"VariableDeclaration","scope":6810,"src":"23212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6789,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:22"},"scope":7371,"src":"23157:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6835,"nodeType":"Block","src":"23778:150:22","statements":[{"expression":{"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"23788:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"23808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6819,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:22","typeDescriptions":{}}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6824,"nodeType":"ExpressionStatement","src":"23788:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"23828:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"23842:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6834,"nodeType":"IfStatement","src":"23824:98:22","trueBody":{"id":6833,"nodeType":"Block","src":"23849:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"23905:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6828,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"23870:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6832,"nodeType":"RevertStatement","src":"23863:48:22"}]}}]},"documentation":{"id":6811,"nodeType":"StructuredDocumentation","src":"23387:312:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6836,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:22","nodeType":"FunctionDefinition","parameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"value","nameLocation":"23729:5:22","nodeType":"VariableDeclaration","scope":6836,"src":"23722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6812,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:22"},"returnParameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:22","nodeType":"VariableDeclaration","scope":6836,"src":"23759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6815,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:22"},"scope":7371,"src":"23704:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6861,"nodeType":"Block","src":"24325:150:22","statements":[{"expression":{"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"24335:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"24355:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6845,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:22","typeDescriptions":{}}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6850,"nodeType":"ExpressionStatement","src":"24335:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"24375:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"24389:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6860,"nodeType":"IfStatement","src":"24371:98:22","trueBody":{"id":6859,"nodeType":"Block","src":"24396:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"24452:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6854,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"24417:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6858,"nodeType":"RevertStatement","src":"24410:48:22"}]}}]},"documentation":{"id":6837,"nodeType":"StructuredDocumentation","src":"23934:312:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:22","nodeType":"FunctionDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6839,"mutability":"mutable","name":"value","nameLocation":"24276:5:22","nodeType":"VariableDeclaration","scope":6862,"src":"24269:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6838,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:22"},"returnParameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:22","nodeType":"VariableDeclaration","scope":6862,"src":"24306:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6841,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:22"},"scope":7371,"src":"24251:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6887,"nodeType":"Block","src":"24872:150:22","statements":[{"expression":{"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"24882:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"24902:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6871,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:22","typeDescriptions":{}}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6876,"nodeType":"ExpressionStatement","src":"24882:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"24922:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"24936:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6886,"nodeType":"IfStatement","src":"24918:98:22","trueBody":{"id":6885,"nodeType":"Block","src":"24943:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"24999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6880,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"24964:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6884,"nodeType":"RevertStatement","src":"24957:48:22"}]}}]},"documentation":{"id":6863,"nodeType":"StructuredDocumentation","src":"24481:312:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:22","nodeType":"FunctionDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"value","nameLocation":"24823:5:22","nodeType":"VariableDeclaration","scope":6888,"src":"24816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6864,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:22"},"returnParameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:22","nodeType":"VariableDeclaration","scope":6888,"src":"24853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6867,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:22"},"scope":7371,"src":"24798:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6913,"nodeType":"Block","src":"25419:150:22","statements":[{"expression":{"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"25429:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"25449:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6897,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:22","typeDescriptions":{}}},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6902,"nodeType":"ExpressionStatement","src":"25429:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"25469:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"25483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6912,"nodeType":"IfStatement","src":"25465:98:22","trueBody":{"id":6911,"nodeType":"Block","src":"25490:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"25546:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6906,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"25511:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6910,"nodeType":"RevertStatement","src":"25504:48:22"}]}}]},"documentation":{"id":6889,"nodeType":"StructuredDocumentation","src":"25028:312:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:22","nodeType":"FunctionDefinition","parameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"mutability":"mutable","name":"value","nameLocation":"25370:5:22","nodeType":"VariableDeclaration","scope":6914,"src":"25363:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6890,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:22"},"returnParameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:22","nodeType":"VariableDeclaration","scope":6914,"src":"25400:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6893,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:22"},"scope":7371,"src":"25345:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6939,"nodeType":"Block","src":"25966:150:22","statements":[{"expression":{"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"25976:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"25996:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6923,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:22","typeDescriptions":{}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6928,"nodeType":"ExpressionStatement","src":"25976:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"26016:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"26030:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6938,"nodeType":"IfStatement","src":"26012:98:22","trueBody":{"id":6937,"nodeType":"Block","src":"26037:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"26093:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6932,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"26058:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6936,"nodeType":"RevertStatement","src":"26051:48:22"}]}}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"25575:312:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6940,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:22","nodeType":"FunctionDefinition","parameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"value","nameLocation":"25917:5:22","nodeType":"VariableDeclaration","scope":6940,"src":"25910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6916,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:22"},"returnParameters":{"id":6921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6920,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:22","nodeType":"VariableDeclaration","scope":6940,"src":"25947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6919,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:22"},"scope":7371,"src":"25892:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6965,"nodeType":"Block","src":"26513:150:22","statements":[{"expression":{"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"26523:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"26543:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6949,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:22","typeDescriptions":{}}},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6954,"nodeType":"ExpressionStatement","src":"26523:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"26563:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"26577:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6964,"nodeType":"IfStatement","src":"26559:98:22","trueBody":{"id":6963,"nodeType":"Block","src":"26584:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"26640:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6958,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"26605:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6962,"nodeType":"RevertStatement","src":"26598:48:22"}]}}]},"documentation":{"id":6941,"nodeType":"StructuredDocumentation","src":"26122:312:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:22","nodeType":"FunctionDefinition","parameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"value","nameLocation":"26464:5:22","nodeType":"VariableDeclaration","scope":6966,"src":"26457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6942,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:22"},"returnParameters":{"id":6947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6946,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:22","nodeType":"VariableDeclaration","scope":6966,"src":"26494:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6945,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:22"},"scope":7371,"src":"26439:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6991,"nodeType":"Block","src":"27060:150:22","statements":[{"expression":{"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"27070:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"27090:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6975,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:22","typeDescriptions":{}}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6980,"nodeType":"ExpressionStatement","src":"27070:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"27110:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"27124:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6990,"nodeType":"IfStatement","src":"27106:98:22","trueBody":{"id":6989,"nodeType":"Block","src":"27131:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"27187:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6984,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"27152:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6988,"nodeType":"RevertStatement","src":"27145:48:22"}]}}]},"documentation":{"id":6967,"nodeType":"StructuredDocumentation","src":"26669:312:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6992,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:22","nodeType":"FunctionDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"value","nameLocation":"27011:5:22","nodeType":"VariableDeclaration","scope":6992,"src":"27004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6968,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:22"},"returnParameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6972,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:22","nodeType":"VariableDeclaration","scope":6992,"src":"27041:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6971,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:22"},"scope":7371,"src":"26986:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7017,"nodeType":"Block","src":"27607:150:22","statements":[{"expression":{"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"27617:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"27637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7001,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:22","typeDescriptions":{}}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7006,"nodeType":"ExpressionStatement","src":"27617:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"27657:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"27671:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7016,"nodeType":"IfStatement","src":"27653:98:22","trueBody":{"id":7015,"nodeType":"Block","src":"27678:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"27734:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7010,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"27699:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7014,"nodeType":"RevertStatement","src":"27692:48:22"}]}}]},"documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"27216:312:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7018,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:22","nodeType":"FunctionDefinition","parameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"value","nameLocation":"27558:5:22","nodeType":"VariableDeclaration","scope":7018,"src":"27551:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6994,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:22"},"returnParameters":{"id":6999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6998,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:22","nodeType":"VariableDeclaration","scope":7018,"src":"27588:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6997,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:22"},"scope":7371,"src":"27533:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7043,"nodeType":"Block","src":"28147:148:22","statements":[{"expression":{"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"28157:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"28176:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7027,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:22","typeDescriptions":{}}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7032,"nodeType":"ExpressionStatement","src":"28157:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"28196:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"28210:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7042,"nodeType":"IfStatement","src":"28192:97:22","trueBody":{"id":7041,"nodeType":"Block","src":"28217:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"28272:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7036,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"28238:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7040,"nodeType":"RevertStatement","src":"28231:47:22"}]}}]},"documentation":{"id":7019,"nodeType":"StructuredDocumentation","src":"27763:307:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:22","nodeType":"FunctionDefinition","parameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"value","nameLocation":"28099:5:22","nodeType":"VariableDeclaration","scope":7044,"src":"28092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7020,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:22"},"returnParameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:22","nodeType":"VariableDeclaration","scope":7044,"src":"28129:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7023,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:22"},"scope":7371,"src":"28075:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7069,"nodeType":"Block","src":"28685:148:22","statements":[{"expression":{"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"28695:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"28714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7053,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:22","typeDescriptions":{}}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7058,"nodeType":"ExpressionStatement","src":"28695:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"28734:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"28748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7068,"nodeType":"IfStatement","src":"28730:97:22","trueBody":{"id":7067,"nodeType":"Block","src":"28755:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"28810:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7062,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"28776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7066,"nodeType":"RevertStatement","src":"28769:47:22"}]}}]},"documentation":{"id":7045,"nodeType":"StructuredDocumentation","src":"28301:307:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7070,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:22","nodeType":"FunctionDefinition","parameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"value","nameLocation":"28637:5:22","nodeType":"VariableDeclaration","scope":7070,"src":"28630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:22"},"returnParameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:22","nodeType":"VariableDeclaration","scope":7070,"src":"28667:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7049,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:22"},"scope":7371,"src":"28613:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7095,"nodeType":"Block","src":"29223:148:22","statements":[{"expression":{"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"29233:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"29252:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7079,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:22","typeDescriptions":{}}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7084,"nodeType":"ExpressionStatement","src":"29233:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"29272:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"29286:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7094,"nodeType":"IfStatement","src":"29268:97:22","trueBody":{"id":7093,"nodeType":"Block","src":"29293:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"29348:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7088,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"29314:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7092,"nodeType":"RevertStatement","src":"29307:47:22"}]}}]},"documentation":{"id":7071,"nodeType":"StructuredDocumentation","src":"28839:307:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7096,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:22","nodeType":"FunctionDefinition","parameters":{"id":7074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"value","nameLocation":"29175:5:22","nodeType":"VariableDeclaration","scope":7096,"src":"29168:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7072,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:22"},"returnParameters":{"id":7077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7076,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:22","nodeType":"VariableDeclaration","scope":7096,"src":"29205:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7075,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:22"},"scope":7371,"src":"29151:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7121,"nodeType":"Block","src":"29761:148:22","statements":[{"expression":{"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"29771:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"29790:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7105,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:22","typeDescriptions":{}}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7110,"nodeType":"ExpressionStatement","src":"29771:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"29810:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"29824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7120,"nodeType":"IfStatement","src":"29806:97:22","trueBody":{"id":7119,"nodeType":"Block","src":"29831:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"29886:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7114,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"29852:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7118,"nodeType":"RevertStatement","src":"29845:47:22"}]}}]},"documentation":{"id":7097,"nodeType":"StructuredDocumentation","src":"29377:307:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7122,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:22","nodeType":"FunctionDefinition","parameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"value","nameLocation":"29713:5:22","nodeType":"VariableDeclaration","scope":7122,"src":"29706:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7098,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:22"},"returnParameters":{"id":7103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:22","nodeType":"VariableDeclaration","scope":7122,"src":"29743:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7101,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:22"},"scope":7371,"src":"29689:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7147,"nodeType":"Block","src":"30299:148:22","statements":[{"expression":{"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"30309:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"30328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7131,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:22","typeDescriptions":{}}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7136,"nodeType":"ExpressionStatement","src":"30309:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"30348:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7146,"nodeType":"IfStatement","src":"30344:97:22","trueBody":{"id":7145,"nodeType":"Block","src":"30369:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"30424:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7140,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"30390:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7144,"nodeType":"RevertStatement","src":"30383:47:22"}]}}]},"documentation":{"id":7123,"nodeType":"StructuredDocumentation","src":"29915:307:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:22","nodeType":"FunctionDefinition","parameters":{"id":7126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7125,"mutability":"mutable","name":"value","nameLocation":"30251:5:22","nodeType":"VariableDeclaration","scope":7148,"src":"30244:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7124,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:22"},"returnParameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:22","nodeType":"VariableDeclaration","scope":7148,"src":"30281:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7127,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:22"},"scope":7371,"src":"30227:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7173,"nodeType":"Block","src":"30837:148:22","statements":[{"expression":{"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"30847:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"30866:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7157,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:22","typeDescriptions":{}}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7162,"nodeType":"ExpressionStatement","src":"30847:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"30886:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"30900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7172,"nodeType":"IfStatement","src":"30882:97:22","trueBody":{"id":7171,"nodeType":"Block","src":"30907:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"30962:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7166,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"30928:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7170,"nodeType":"RevertStatement","src":"30921:47:22"}]}}]},"documentation":{"id":7149,"nodeType":"StructuredDocumentation","src":"30453:307:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7174,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:22","nodeType":"FunctionDefinition","parameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"value","nameLocation":"30789:5:22","nodeType":"VariableDeclaration","scope":7174,"src":"30782:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7150,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:22"},"returnParameters":{"id":7155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7154,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:22","nodeType":"VariableDeclaration","scope":7174,"src":"30819:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7153,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:22"},"scope":7371,"src":"30765:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7199,"nodeType":"Block","src":"31375:148:22","statements":[{"expression":{"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"31385:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"31404:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7183,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:22","typeDescriptions":{}}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7188,"nodeType":"ExpressionStatement","src":"31385:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"31424:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"31438:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7198,"nodeType":"IfStatement","src":"31420:97:22","trueBody":{"id":7197,"nodeType":"Block","src":"31445:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"31500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7192,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"31466:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7196,"nodeType":"RevertStatement","src":"31459:47:22"}]}}]},"documentation":{"id":7175,"nodeType":"StructuredDocumentation","src":"30991:307:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7200,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:22","nodeType":"FunctionDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"value","nameLocation":"31327:5:22","nodeType":"VariableDeclaration","scope":7200,"src":"31320:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7176,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:22"},"returnParameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:22","nodeType":"VariableDeclaration","scope":7200,"src":"31357:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7179,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:22"},"scope":7371,"src":"31303:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7225,"nodeType":"Block","src":"31913:148:22","statements":[{"expression":{"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"31923:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31942:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7209,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:22","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7214,"nodeType":"ExpressionStatement","src":"31923:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"31962:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31976:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7224,"nodeType":"IfStatement","src":"31958:97:22","trueBody":{"id":7223,"nodeType":"Block","src":"31983:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"32038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7218,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"32004:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7222,"nodeType":"RevertStatement","src":"31997:47:22"}]}}]},"documentation":{"id":7201,"nodeType":"StructuredDocumentation","src":"31529:307:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7226,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:22","nodeType":"FunctionDefinition","parameters":{"id":7204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"value","nameLocation":"31865:5:22","nodeType":"VariableDeclaration","scope":7226,"src":"31858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7202,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:22"},"returnParameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:22","nodeType":"VariableDeclaration","scope":7226,"src":"31895:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7205,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:22"},"scope":7371,"src":"31841:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7251,"nodeType":"Block","src":"32451:148:22","statements":[{"expression":{"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"32461:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"32480:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7235,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:22","typeDescriptions":{}}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7240,"nodeType":"ExpressionStatement","src":"32461:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"32500:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"32514:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7250,"nodeType":"IfStatement","src":"32496:97:22","trueBody":{"id":7249,"nodeType":"Block","src":"32521:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"32576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7244,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"32542:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7248,"nodeType":"RevertStatement","src":"32535:47:22"}]}}]},"documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"32067:307:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7252,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:22","nodeType":"FunctionDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"value","nameLocation":"32403:5:22","nodeType":"VariableDeclaration","scope":7252,"src":"32396:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7228,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:22"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7232,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:22","nodeType":"VariableDeclaration","scope":7252,"src":"32433:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7231,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:22"},"scope":7371,"src":"32379:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7277,"nodeType":"Block","src":"32989:148:22","statements":[{"expression":{"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"32999:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"33018:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7261,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:22","typeDescriptions":{}}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7266,"nodeType":"ExpressionStatement","src":"32999:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"33038:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"33052:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7276,"nodeType":"IfStatement","src":"33034:97:22","trueBody":{"id":7275,"nodeType":"Block","src":"33059:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"33114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7270,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"33080:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7274,"nodeType":"RevertStatement","src":"33073:47:22"}]}}]},"documentation":{"id":7253,"nodeType":"StructuredDocumentation","src":"32605:307:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7278,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:22","nodeType":"FunctionDefinition","parameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7255,"mutability":"mutable","name":"value","nameLocation":"32941:5:22","nodeType":"VariableDeclaration","scope":7278,"src":"32934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7254,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:22"},"returnParameters":{"id":7259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7258,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:22","nodeType":"VariableDeclaration","scope":7278,"src":"32971:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7257,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:22"},"scope":7371,"src":"32917:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7303,"nodeType":"Block","src":"33527:148:22","statements":[{"expression":{"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"33537:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"33556:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7287,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:22","typeDescriptions":{}}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7292,"nodeType":"ExpressionStatement","src":"33537:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"33576:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"33590:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7302,"nodeType":"IfStatement","src":"33572:97:22","trueBody":{"id":7301,"nodeType":"Block","src":"33597:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"33652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7296,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"33618:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7300,"nodeType":"RevertStatement","src":"33611:47:22"}]}}]},"documentation":{"id":7279,"nodeType":"StructuredDocumentation","src":"33143:307:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7304,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:22","nodeType":"FunctionDefinition","parameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7281,"mutability":"mutable","name":"value","nameLocation":"33479:5:22","nodeType":"VariableDeclaration","scope":7304,"src":"33472:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7280,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:22"},"returnParameters":{"id":7285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7284,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:22","nodeType":"VariableDeclaration","scope":7304,"src":"33509:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7283,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:22"},"scope":7371,"src":"33455:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7329,"nodeType":"Block","src":"34058:146:22","statements":[{"expression":{"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"34068:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"34086:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7313,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:22","typeDescriptions":{}}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7318,"nodeType":"ExpressionStatement","src":"34068:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"34106:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"34120:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7328,"nodeType":"IfStatement","src":"34102:96:22","trueBody":{"id":7327,"nodeType":"Block","src":"34127:71:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"34181:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7322,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"34148:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7326,"nodeType":"RevertStatement","src":"34141:46:22"}]}}]},"documentation":{"id":7305,"nodeType":"StructuredDocumentation","src":"33681:302:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7330,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:22","nodeType":"FunctionDefinition","parameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"value","nameLocation":"34011:5:22","nodeType":"VariableDeclaration","scope":7330,"src":"34004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7306,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:22"},"returnParameters":{"id":7311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7310,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:22","nodeType":"VariableDeclaration","scope":7330,"src":"34041:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7309,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:22"},"scope":7371,"src":"33988:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7359,"nodeType":"Block","src":"34444:250:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"34557:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7342,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7341,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:22","memberName":"max","nodeType":"MemberAccess","src":"34573:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:22","typeDescriptions":{}}},"id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7353,"nodeType":"IfStatement","src":"34553:105:22","trueBody":{"id":7352,"nodeType":"Block","src":"34592:66:22","statements":[{"errorCall":{"arguments":[{"id":7349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"34641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7348,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"34613:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7351,"nodeType":"RevertStatement","src":"34606:41:22"}]}},{"expression":{"arguments":[{"id":7356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"34681:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7354,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:22","typeDescriptions":{}}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7337,"id":7358,"nodeType":"Return","src":"34667:20:22"}]},"documentation":{"id":7331,"nodeType":"StructuredDocumentation","src":"34210:165:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:22","nodeType":"FunctionDefinition","parameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"value","nameLocation":"34406:5:22","nodeType":"VariableDeclaration","scope":7360,"src":"34398:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7332,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:22"},"returnParameters":{"id":7337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7360,"src":"34436:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7335,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:22"},"scope":7371,"src":"34380:314:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7369,"nodeType":"Block","src":"34853:87:22","statements":[{"AST":{"nativeSrc":"34888:46:22","nodeType":"YulBlock","src":"34888:46:22","statements":[{"nativeSrc":"34902:22:22","nodeType":"YulAssignment","src":"34902:22:22","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:22","nodeType":"YulIdentifier","src":"34921:1:22"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:22","nodeType":"YulIdentifier","src":"34914:6:22"},"nativeSrc":"34914:9:22","nodeType":"YulFunctionCall","src":"34914:9:22"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:22","nodeType":"YulIdentifier","src":"34907:6:22"},"nativeSrc":"34907:17:22","nodeType":"YulFunctionCall","src":"34907:17:22"},"variableNames":[{"name":"u","nativeSrc":"34902:1:22","nodeType":"YulIdentifier","src":"34902:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7363,"isOffset":false,"isSlot":false,"src":"34921:1:22","valueSize":1},{"declaration":7366,"isOffset":false,"isSlot":false,"src":"34902:1:22","valueSize":1}],"flags":["memory-safe"],"id":7368,"nodeType":"InlineAssembly","src":"34863:71:22"}]},"documentation":{"id":7361,"nodeType":"StructuredDocumentation","src":"34700:90:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7370,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:22","nodeType":"FunctionDefinition","parameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"b","nameLocation":"34816:1:22","nodeType":"VariableDeclaration","scope":7370,"src":"34811:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7362,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:22"},"returnParameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"u","nameLocation":"34850:1:22","nodeType":"VariableDeclaration","scope":7370,"src":"34842:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7365,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:22"},"scope":7371,"src":"34795:145:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7372,"src":"769:34173:22","usedErrors":[5616,5621,5628,5633],"usedEvents":[]}],"src":"192:34751:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7371],"SignedMath":[7515]},"id":7516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7373,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7516,"sourceUnit":7372,"src":"135:40:23","symbolAliases":[{"foreign":{"id":7374,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"143:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7376,"nodeType":"StructuredDocumentation","src":"177:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7515,"linearizedBaseContracts":[7515],"name":"SignedMath","nameLocation":"266:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":7405,"nodeType":"Block","src":"746:215:23","statements":[{"id":7404,"nodeType":"UncheckedBlock","src":"756:199:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"894:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"900:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"904:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7397,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"932:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"916:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7371_$","typeString":"type(library SafeCast)"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7370,"src":"916:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7393,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:23","typeDescriptions":{}}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7387,"id":7403,"nodeType":"Return","src":"887:57:23"}]}]},"documentation":{"id":7377,"nodeType":"StructuredDocumentation","src":"283:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7406,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:23","nodeType":"FunctionDefinition","parameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7379,"mutability":"mutable","name":"condition","nameLocation":"684:9:23","nodeType":"VariableDeclaration","scope":7406,"src":"679:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7378,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7381,"mutability":"mutable","name":"a","nameLocation":"702:1:23","nodeType":"VariableDeclaration","scope":7406,"src":"695:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7380,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7383,"mutability":"mutable","name":"b","nameLocation":"712:1:23","nodeType":"VariableDeclaration","scope":7406,"src":"705:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7382,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:23"},"returnParameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7406,"src":"738:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7385,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:23"},"scope":7515,"src":"662:299:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7424,"nodeType":"Block","src":"1102:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"1127:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"1131:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"1134:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"1137:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7416,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"1119:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7415,"id":7423,"nodeType":"Return","src":"1112:27:23"}]},"documentation":{"id":7407,"nodeType":"StructuredDocumentation","src":"967:66:23","text":" @dev Returns the largest of two signed numbers."},"id":7425,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:23","nodeType":"FunctionDefinition","parameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7409,"mutability":"mutable","name":"a","nameLocation":"1058:1:23","nodeType":"VariableDeclaration","scope":7425,"src":"1051:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7408,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7411,"mutability":"mutable","name":"b","nameLocation":"1068:1:23","nodeType":"VariableDeclaration","scope":7425,"src":"1061:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7410,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:23"},"returnParameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7425,"src":"1094:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7413,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:23"},"scope":7515,"src":"1038:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7443,"nodeType":"Block","src":"1288:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"1313:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"1317:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"1320:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"1323:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7435,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"1305:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7434,"id":7442,"nodeType":"Return","src":"1298:27:23"}]},"documentation":{"id":7426,"nodeType":"StructuredDocumentation","src":"1152:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":7444,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:23","nodeType":"FunctionDefinition","parameters":{"id":7431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"a","nameLocation":"1244:1:23","nodeType":"VariableDeclaration","scope":7444,"src":"1237:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7427,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7430,"mutability":"mutable","name":"b","nameLocation":"1254:1:23","nodeType":"VariableDeclaration","scope":7444,"src":"1247:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7429,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:23"},"returnParameters":{"id":7434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7444,"src":"1280:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7432,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:23"},"scope":7515,"src":"1224:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7487,"nodeType":"Block","src":"1537:162:23","statements":[{"assignments":[7455],"declarations":[{"constant":false,"id":7455,"mutability":"mutable","name":"x","nameLocation":"1606:1:23","nodeType":"VariableDeclaration","scope":7487,"src":"1599:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7454,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7468,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"1611:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"1615:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"1622:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"1626:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"1651:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7474,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"1671:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:23","typeDescriptions":{}}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7470,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:23","typeDescriptions":{}}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"1685:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"1689:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7453,"id":7486,"nodeType":"Return","src":"1644:48:23"}]},"documentation":{"id":7445,"nodeType":"StructuredDocumentation","src":"1338:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7488,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:23","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"a","nameLocation":"1493:1:23","nodeType":"VariableDeclaration","scope":7488,"src":"1486:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7446,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7449,"mutability":"mutable","name":"b","nameLocation":"1503:1:23","nodeType":"VariableDeclaration","scope":7488,"src":"1496:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7448,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:23"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7488,"src":"1529:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7451,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:23"},"scope":7515,"src":"1469:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7513,"nodeType":"Block","src":"1843:767:23","statements":[{"id":7512,"nodeType":"UncheckedBlock","src":"1853:751:23","statements":[{"assignments":[7497],"declarations":[{"constant":false,"id":7497,"mutability":"mutable","name":"mask","nameLocation":"2424:4:23","nodeType":"VariableDeclaration","scope":7512,"src":"2417:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7496,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7501,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"2431:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7504,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"2576:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7505,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"2580:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7508,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"2588:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:23","typeDescriptions":{}}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7495,"id":7511,"nodeType":"Return","src":"2560:33:23"}]}]},"documentation":{"id":7489,"nodeType":"StructuredDocumentation","src":"1705:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7514,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:23","nodeType":"FunctionDefinition","parameters":{"id":7492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"n","nameLocation":"1808:1:23","nodeType":"VariableDeclaration","scope":7514,"src":"1801:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7490,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:23"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7514,"src":"1834:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:23"},"scope":7515,"src":"1788:822:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7516,"src":"258:2354:23","usedErrors":[],"usedEvents":[]}],"src":"109:2504:23"},"id":23},"contracts/HelixStakedICP.sol":{"ast":{"absolutePath":"contracts/HelixStakedICP.sol","exportedSymbols":{"AccessControl":[295],"ERC20":[1055],"ERC20Burnable":[1179],"ERC20Permit":[1333],"HelixStakedICP":[7580]},"id":7581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7517,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"81:24:24"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7581,"sourceUnit":296,"src":"107:79:24","symbolAliases":[{"foreign":{"id":7518,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"115:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7581,"sourceUnit":1056,"src":"187:68:24","symbolAliases":[{"foreign":{"id":7520,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"195:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":7523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7581,"sourceUnit":1180,"src":"256:95:24","symbolAliases":[{"foreign":{"id":7522,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"264:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7581,"sourceUnit":1334,"src":"352:91:24","symbolAliases":[{"foreign":{"id":7524,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"360:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7526,"name":"ERC20","nameLocations":["472:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"472:5:24"},"id":7527,"nodeType":"InheritanceSpecifier","src":"472:5:24"},{"baseName":{"id":7528,"name":"ERC20Burnable","nameLocations":["479:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"479:13:24"},"id":7529,"nodeType":"InheritanceSpecifier","src":"479:13:24"},{"baseName":{"id":7530,"name":"AccessControl","nameLocations":["494:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"494:13:24"},"id":7531,"nodeType":"InheritanceSpecifier","src":"494:13:24"},{"baseName":{"id":7532,"name":"ERC20Permit","nameLocations":["509:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":1333,"src":"509:11:24"},"id":7533,"nodeType":"InheritanceSpecifier","src":"509:11:24"}],"canonicalName":"HelixStakedICP","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7580,"linearizedBaseContracts":[7580,1333,1493,3863,403,1395,295,3973,3985,378,1179,1055,445,1359,1133,1425],"name":"HelixStakedICP","nameLocation":"454:14:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":7538,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"551:11:24","nodeType":"VariableDeclaration","scope":7580,"src":"527:62:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"527:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":7536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"575:13:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":7535,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"565:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"565:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":7562,"nodeType":"Block","src":"734:102:24","statements":[{"expression":{"arguments":[{"id":7553,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"755:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7554,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"775:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7552,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"744:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"744:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7556,"nodeType":"ExpressionStatement","src":"744:44:24"},{"expression":{"arguments":[{"id":7558,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"809:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7559,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"822:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7557,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"798:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"798:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7561,"nodeType":"ExpressionStatement","src":"798:31:24"}]},"id":7563,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"48656c6978205374616b656420494350","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"660:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f583f1aa19ebd5a681e57d8451296a312fc140f4a5721984131a58a7ec41538e","typeString":"literal_string \"Helix Staked ICP\""},"value":"Helix Staked ICP"},{"hexValue":"687374494350","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"680:8:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8a1589eacfc851bce30c4770b90aa1051211f0c4f09cad1df4c1d2994cdbc46","typeString":"literal_string \"hstICP\""},"value":"hstICP"}],"id":7547,"kind":"baseConstructorSpecifier","modifierName":{"id":7544,"name":"ERC20","nameLocations":["654:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"654:5:24"},"nodeType":"ModifierInvocation","src":"654:35:24"},{"arguments":[{"hexValue":"48656c6978205374616b656420494350","id":7549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"710:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f583f1aa19ebd5a681e57d8451296a312fc140f4a5721984131a58a7ec41538e","typeString":"literal_string \"Helix Staked ICP\""},"value":"Helix Staked ICP"}],"id":7550,"kind":"baseConstructorSpecifier","modifierName":{"id":7548,"name":"ERC20Permit","nameLocations":["698:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":1333,"src":"698:11:24"},"nodeType":"ModifierInvocation","src":"698:31:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7540,"mutability":"mutable","name":"defaultAdmin","nameLocation":"616:12:24","nodeType":"VariableDeclaration","scope":7563,"src":"608:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7539,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7542,"mutability":"mutable","name":"minter","nameLocation":"638:6:24","nodeType":"VariableDeclaration","scope":7563,"src":"630:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7541,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"607:38:24"},"returnParameters":{"id":7551,"nodeType":"ParameterList","parameters":[],"src":"734:0:24"},"scope":7580,"src":"596:240:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7578,"nodeType":"Block","src":"913:34:24","statements":[{"expression":{"arguments":[{"id":7574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"929:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"933:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7573,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"923:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7577,"nodeType":"ExpressionStatement","src":"923:17:24"}]},"functionSelector":"40c10f19","id":7579,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7570,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"900:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7571,"kind":"modifierInvocation","modifierName":{"id":7569,"name":"onlyRole","nameLocations":["891:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"891:8:24"},"nodeType":"ModifierInvocation","src":"891:21:24"}],"name":"mint","nameLocation":"851:4:24","nodeType":"FunctionDefinition","parameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"to","nameLocation":"864:2:24","nodeType":"VariableDeclaration","scope":7579,"src":"856:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7564,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7567,"mutability":"mutable","name":"amount","nameLocation":"876:6:24","nodeType":"VariableDeclaration","scope":7579,"src":"868:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7566,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"855:28:24"},"returnParameters":{"id":7572,"nodeType":"ParameterList","parameters":[],"src":"913:0:24"},"scope":7580,"src":"842:105:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7581,"src":"445:504:24","usedErrors":[305,308,415,420,425,434,439,444,1210,1217,1435,1559,1561,3299,3304,3309],"usedEvents":[317,326,335,383,1067,1076]}],"src":"81:868:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0d77dd4e879591fa15de7c6ebcb390d9b816090023e3ad58169309da172562064736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xD7 PUSH30 0xD4E879591FA15DE7C6EBCB390D9B816090023E3AD58169309DA172562064 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0d77dd4e879591fa15de7c6ebcb390d9b816090023e3ad58169309da172562064736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xD7 PUSH30 0xD4E879591FA15DE7C6EBCB390D9B816090023E3AD58169309DA172562064 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f202d383eac11d5f0cd042969ad4a7de31910a8b0c5f978635b59739f89f09c664736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE MUL 0xD3 DUP4 0xEA 0xC1 SAR PUSH0 0xC 0xD0 TIMESTAMP SWAP7 SWAP11 0xD4 0xA7 0xDE BALANCE SWAP2 EXP DUP12 0xC PUSH0 SWAP8 DUP7 CALLDATALOAD 0xB5 SWAP8 CODECOPY 0xF8 SWAP16 MULMOD 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1255:3046:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f202d383eac11d5f0cd042969ad4a7de31910a8b0c5f978635b59739f89f09c664736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE MUL 0xD3 DUP4 0xEA 0xC1 SAR PUSH0 0xC 0xD0 TIMESTAMP SWAP7 SWAP11 0xD4 0xA7 0xDE BALANCE SWAP2 EXP DUP12 0xC PUSH0 SWAP8 DUP7 CALLDATALOAD 0xB5 SWAP8 CODECOPY 0xF8 SWAP16 MULMOD 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1255:3046:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093e2f2e4a67166a704986129457815afd2bcb9c48b54e25900758c655cd6da0a64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xE2 CALLCODE 0xE4 0xA6 PUSH18 0x66A704986129457815AFD2BCB9C48B54E259 STOP PUSH22 0x8C655CD6DA0A64736F6C634300081600330000000000 ","sourceMap":"1407:2774:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093e2f2e4a67166a704986129457815afd2bcb9c48b54e25900758c655cd6da0a64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xE2 CALLCODE 0xE4 0xA6 PUSH18 0x66A704986129457815AFD2BCB9C48B54E259 STOP PUSH22 0x8C655CD6DA0A64736F6C634300081600330000000000 ","sourceMap":"1407:2774:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c47a2182fad159957023f26060f8efd868df918e8aeaee32536e0632be46074b64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 PUSH27 0x2182FAD159957023F26060F8EFD868DF918E8AEAEE32536E0632BE CHAINID SMOD 0x4B PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18980:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c47a2182fad159957023f26060f8efd868df918e8aeaee32536e0632be46074b64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 PUSH27 0x2182FAD159957023F26060F8EFD868DF918E8AEAEE32536E0632BE CHAINID SMOD 0x4B PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18980:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd4765f1f6c67133190d36a101f11ef876b2f2a58dee2adcf516c33971c8df2264736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SELFBALANCE PUSH6 0xF1F6C6713319 0xD CALLDATASIZE LOG1 ADD CALL 0x1E 0xF8 PUSH23 0xB2F2A58DEE2ADCF516C33971C8DF2264736F6C63430008 AND STOP CALLER ","sourceMap":"344:7470:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd4765f1f6c67133190d36a101f11ef876b2f2a58dee2adcf516c33971c8df2264736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SELFBALANCE PUSH6 0xF1F6C6713319 0xD CALLDATASIZE LOG1 ADD CALL 0x1E 0xF8 PUSH23 0xB2F2A58DEE2ADCF516C33971C8DF2264736F6C63430008 AND STOP CALLER ","sourceMap":"344:7470:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cc20e836022bc0e25254477c33c62d8a3d56ddd4e3e2fbc051a247071682b1c64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC2 0xE DUP4 PUSH1 0x22 0xBC 0xE 0x25 0x25 PREVRANDAO PUSH24 0xC33C62D8A3D56DDD4E3E2FBC051A247071682B1C64736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"521:3729:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cc20e836022bc0e25254477c33c62d8a3d56ddd4e3e2fbc051a247071682b1c64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC2 0xE DUP4 PUSH1 0x22 0xBC 0xE 0x25 0x25 PREVRANDAO PUSH24 0xC33C62D8A3D56DDD4E3E2FBC051A247071682B1C64736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"521:3729:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220523e77825bd60908b624b61517f079b79d08062281da95b29ae7335620f071ec64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE RETURNDATACOPY PUSH24 0x825BD60908B624B61517F079B79D08062281DA95B29AE733 JUMP KECCAK256 CREATE PUSH18 0xEC64736F6C63430008160033000000000000 ","sourceMap":"281:31863:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220523e77825bd60908b624b61517f079b79d08062281da95b29ae7335620f071ec64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE RETURNDATACOPY PUSH24 0x825BD60908B624B61517F079B79D08062281DA95B29AE733 JUMP KECCAK256 CREATE PUSH18 0xEC64736F6C63430008160033000000000000 ","sourceMap":"281:31863:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220890a48d9bb721c1fa73fd01c8694705bd26aeb441fe8a274c816f123e22c91aa64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 EXP BASEFEE 0xD9 0xBB PUSH19 0x1C1FA73FD01C8694705BD26AEB441FE8A274C8 AND CALL 0x23 0xE2 0x2C SWAP2 0xAA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220890a48d9bb721c1fa73fd01c8694705bd26aeb441fe8a274c816f123e22c91aa64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 EXP BASEFEE 0xD9 0xBB PUSH19 0x1C1FA73FD01C8694705BD26AEB441FE8A274C8 AND CALL 0x23 0xE2 0x2C SWAP2 0xAA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220002bf2e1154a2fbdbf9f879eb58428bdf76a6a357dde8e35a5732fbc19164ed764736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x2B CALLCODE 0xE1 ISZERO 0x4A 0x2F 0xBD 0xBF SWAP16 DUP8 SWAP15 0xB5 DUP5 0x28 0xBD 0xF7 PUSH11 0x6A357DDE8E35A5732FBC19 AND 0x4E 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220002bf2e1154a2fbdbf9f879eb58428bdf76a6a357dde8e35a5732fbc19164ed764736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x2B CALLCODE 0xE1 ISZERO 0x4A 0x2F 0xBD 0xBF SWAP16 DUP8 SWAP15 0xB5 DUP5 0x28 0xBD 0xF7 PUSH11 0x6A357DDE8E35A5732FBC19 AND 0x4E 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/HelixStakedICP.sol":{"HelixStakedICP":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1228":{"entryPoint":null,"id":1228,"parameterSlots":1,"returnSlots":0},"@_3733":{"entryPoint":null,"id":3733,"parameterSlots":2,"returnSlots":0},"@_592":{"entryPoint":null,"id":592,"parameterSlots":2,"returnSlots":0},"@_7563":{"entryPoint":null,"id":7563,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_3780":{"entryPoint":null,"id":3780,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":536,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1407":{"entryPoint":null,"id":1407,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1863":{"entryPoint":null,"id":1863,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_1703":{"entryPoint":479,"id":1703,"parameterSlots":2,"returnSlots":1},"@toShortString_1605":{"entryPoint":714,"id":1605,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":819,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1246,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":957,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1042,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":875,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4552:25","nodeType":"YulBlock","src":"0:4552:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"74:117:25","nodeType":"YulBlock","src":"74:117:25","statements":[{"nativeSrc":"84:22:25","nodeType":"YulAssignment","src":"84:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:25","nodeType":"YulIdentifier","src":"99:6:25"}],"functionName":{"name":"mload","nativeSrc":"93:5:25","nodeType":"YulIdentifier","src":"93:5:25"},"nativeSrc":"93:13:25","nodeType":"YulFunctionCall","src":"93:13:25"},"variableNames":[{"name":"value","nativeSrc":"84:5:25","nodeType":"YulIdentifier","src":"84:5:25"}]},{"body":{"nativeSrc":"169:16:25","nodeType":"YulBlock","src":"169:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:25","nodeType":"YulLiteral","src":"178:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:25","nodeType":"YulLiteral","src":"181:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:25","nodeType":"YulIdentifier","src":"171:6:25"},"nativeSrc":"171:12:25","nodeType":"YulFunctionCall","src":"171:12:25"},"nativeSrc":"171:12:25","nodeType":"YulExpressionStatement","src":"171:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:25","nodeType":"YulIdentifier","src":"128:5:25"},{"arguments":[{"name":"value","nativeSrc":"139:5:25","nodeType":"YulIdentifier","src":"139:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:25","nodeType":"YulLiteral","src":"154:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:25","nodeType":"YulLiteral","src":"159:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:25","nodeType":"YulIdentifier","src":"150:3:25"},"nativeSrc":"150:11:25","nodeType":"YulFunctionCall","src":"150:11:25"},{"kind":"number","nativeSrc":"163:1:25","nodeType":"YulLiteral","src":"163:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:25","nodeType":"YulIdentifier","src":"146:3:25"},"nativeSrc":"146:19:25","nodeType":"YulFunctionCall","src":"146:19:25"}],"functionName":{"name":"and","nativeSrc":"135:3:25","nodeType":"YulIdentifier","src":"135:3:25"},"nativeSrc":"135:31:25","nodeType":"YulFunctionCall","src":"135:31:25"}],"functionName":{"name":"eq","nativeSrc":"125:2:25","nodeType":"YulIdentifier","src":"125:2:25"},"nativeSrc":"125:42:25","nodeType":"YulFunctionCall","src":"125:42:25"}],"functionName":{"name":"iszero","nativeSrc":"118:6:25","nodeType":"YulIdentifier","src":"118:6:25"},"nativeSrc":"118:50:25","nodeType":"YulFunctionCall","src":"118:50:25"},"nativeSrc":"115:70:25","nodeType":"YulIf","src":"115:70:25"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:25","nodeType":"YulTypedName","src":"53:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:25","nodeType":"YulTypedName","src":"64:5:25","type":""}],"src":"14:177:25"},{"body":{"nativeSrc":"294:195:25","nodeType":"YulBlock","src":"294:195:25","statements":[{"body":{"nativeSrc":"340:16:25","nodeType":"YulBlock","src":"340:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"349:1:25","nodeType":"YulLiteral","src":"349:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"352:1:25","nodeType":"YulLiteral","src":"352:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"342:6:25","nodeType":"YulIdentifier","src":"342:6:25"},"nativeSrc":"342:12:25","nodeType":"YulFunctionCall","src":"342:12:25"},"nativeSrc":"342:12:25","nodeType":"YulExpressionStatement","src":"342:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"315:7:25","nodeType":"YulIdentifier","src":"315:7:25"},{"name":"headStart","nativeSrc":"324:9:25","nodeType":"YulIdentifier","src":"324:9:25"}],"functionName":{"name":"sub","nativeSrc":"311:3:25","nodeType":"YulIdentifier","src":"311:3:25"},"nativeSrc":"311:23:25","nodeType":"YulFunctionCall","src":"311:23:25"},{"kind":"number","nativeSrc":"336:2:25","nodeType":"YulLiteral","src":"336:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"307:3:25","nodeType":"YulIdentifier","src":"307:3:25"},"nativeSrc":"307:32:25","nodeType":"YulFunctionCall","src":"307:32:25"},"nativeSrc":"304:52:25","nodeType":"YulIf","src":"304:52:25"},{"nativeSrc":"365:50:25","nodeType":"YulAssignment","src":"365:50:25","value":{"arguments":[{"name":"headStart","nativeSrc":"405:9:25","nodeType":"YulIdentifier","src":"405:9:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"375:29:25","nodeType":"YulIdentifier","src":"375:29:25"},"nativeSrc":"375:40:25","nodeType":"YulFunctionCall","src":"375:40:25"},"variableNames":[{"name":"value0","nativeSrc":"365:6:25","nodeType":"YulIdentifier","src":"365:6:25"}]},{"nativeSrc":"424:59:25","nodeType":"YulAssignment","src":"424:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:25","nodeType":"YulIdentifier","src":"468:9:25"},{"kind":"number","nativeSrc":"479:2:25","nodeType":"YulLiteral","src":"479:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:25","nodeType":"YulIdentifier","src":"464:3:25"},"nativeSrc":"464:18:25","nodeType":"YulFunctionCall","src":"464:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"434:29:25","nodeType":"YulIdentifier","src":"434:29:25"},"nativeSrc":"434:49:25","nodeType":"YulFunctionCall","src":"434:49:25"},"variableNames":[{"name":"value1","nativeSrc":"424:6:25","nodeType":"YulIdentifier","src":"424:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"196:293:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"252:9:25","nodeType":"YulTypedName","src":"252:9:25","type":""},{"name":"dataEnd","nativeSrc":"263:7:25","nodeType":"YulTypedName","src":"263:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"275:6:25","nodeType":"YulTypedName","src":"275:6:25","type":""},{"name":"value1","nativeSrc":"283:6:25","nodeType":"YulTypedName","src":"283:6:25","type":""}],"src":"196:293:25"},{"body":{"nativeSrc":"526:95:25","nodeType":"YulBlock","src":"526:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"543:1:25","nodeType":"YulLiteral","src":"543:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"550:3:25","nodeType":"YulLiteral","src":"550:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"555:10:25","nodeType":"YulLiteral","src":"555:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"546:3:25","nodeType":"YulIdentifier","src":"546:3:25"},"nativeSrc":"546:20:25","nodeType":"YulFunctionCall","src":"546:20:25"}],"functionName":{"name":"mstore","nativeSrc":"536:6:25","nodeType":"YulIdentifier","src":"536:6:25"},"nativeSrc":"536:31:25","nodeType":"YulFunctionCall","src":"536:31:25"},"nativeSrc":"536:31:25","nodeType":"YulExpressionStatement","src":"536:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"583:1:25","nodeType":"YulLiteral","src":"583:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"586:4:25","nodeType":"YulLiteral","src":"586:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"576:6:25","nodeType":"YulIdentifier","src":"576:6:25"},"nativeSrc":"576:15:25","nodeType":"YulFunctionCall","src":"576:15:25"},"nativeSrc":"576:15:25","nodeType":"YulExpressionStatement","src":"576:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"607:1:25","nodeType":"YulLiteral","src":"607:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"610:4:25","nodeType":"YulLiteral","src":"610:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"600:6:25","nodeType":"YulIdentifier","src":"600:6:25"},"nativeSrc":"600:15:25","nodeType":"YulFunctionCall","src":"600:15:25"},"nativeSrc":"600:15:25","nodeType":"YulExpressionStatement","src":"600:15:25"}]},"name":"panic_error_0x41","nativeSrc":"494:127:25","nodeType":"YulFunctionDefinition","src":"494:127:25"},{"body":{"nativeSrc":"681:325:25","nodeType":"YulBlock","src":"681:325:25","statements":[{"nativeSrc":"691:22:25","nodeType":"YulAssignment","src":"691:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"705:1:25","nodeType":"YulLiteral","src":"705:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"708:4:25","nodeType":"YulIdentifier","src":"708:4:25"}],"functionName":{"name":"shr","nativeSrc":"701:3:25","nodeType":"YulIdentifier","src":"701:3:25"},"nativeSrc":"701:12:25","nodeType":"YulFunctionCall","src":"701:12:25"},"variableNames":[{"name":"length","nativeSrc":"691:6:25","nodeType":"YulIdentifier","src":"691:6:25"}]},{"nativeSrc":"722:38:25","nodeType":"YulVariableDeclaration","src":"722:38:25","value":{"arguments":[{"name":"data","nativeSrc":"752:4:25","nodeType":"YulIdentifier","src":"752:4:25"},{"kind":"number","nativeSrc":"758:1:25","nodeType":"YulLiteral","src":"758:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"748:3:25","nodeType":"YulIdentifier","src":"748:3:25"},"nativeSrc":"748:12:25","nodeType":"YulFunctionCall","src":"748:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"726:18:25","nodeType":"YulTypedName","src":"726:18:25","type":""}]},{"body":{"nativeSrc":"799:31:25","nodeType":"YulBlock","src":"799:31:25","statements":[{"nativeSrc":"801:27:25","nodeType":"YulAssignment","src":"801:27:25","value":{"arguments":[{"name":"length","nativeSrc":"815:6:25","nodeType":"YulIdentifier","src":"815:6:25"},{"kind":"number","nativeSrc":"823:4:25","nodeType":"YulLiteral","src":"823:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"811:3:25","nodeType":"YulIdentifier","src":"811:3:25"},"nativeSrc":"811:17:25","nodeType":"YulFunctionCall","src":"811:17:25"},"variableNames":[{"name":"length","nativeSrc":"801:6:25","nodeType":"YulIdentifier","src":"801:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"779:18:25","nodeType":"YulIdentifier","src":"779:18:25"}],"functionName":{"name":"iszero","nativeSrc":"772:6:25","nodeType":"YulIdentifier","src":"772:6:25"},"nativeSrc":"772:26:25","nodeType":"YulFunctionCall","src":"772:26:25"},"nativeSrc":"769:61:25","nodeType":"YulIf","src":"769:61:25"},{"body":{"nativeSrc":"889:111:25","nodeType":"YulBlock","src":"889:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"910:1:25","nodeType":"YulLiteral","src":"910:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"917:3:25","nodeType":"YulLiteral","src":"917:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"922:10:25","nodeType":"YulLiteral","src":"922:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"913:3:25","nodeType":"YulIdentifier","src":"913:3:25"},"nativeSrc":"913:20:25","nodeType":"YulFunctionCall","src":"913:20:25"}],"functionName":{"name":"mstore","nativeSrc":"903:6:25","nodeType":"YulIdentifier","src":"903:6:25"},"nativeSrc":"903:31:25","nodeType":"YulFunctionCall","src":"903:31:25"},"nativeSrc":"903:31:25","nodeType":"YulExpressionStatement","src":"903:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"954:1:25","nodeType":"YulLiteral","src":"954:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"957:4:25","nodeType":"YulLiteral","src":"957:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"947:6:25","nodeType":"YulIdentifier","src":"947:6:25"},"nativeSrc":"947:15:25","nodeType":"YulFunctionCall","src":"947:15:25"},"nativeSrc":"947:15:25","nodeType":"YulExpressionStatement","src":"947:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"982:1:25","nodeType":"YulLiteral","src":"982:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"985:4:25","nodeType":"YulLiteral","src":"985:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"975:6:25","nodeType":"YulIdentifier","src":"975:6:25"},"nativeSrc":"975:15:25","nodeType":"YulFunctionCall","src":"975:15:25"},"nativeSrc":"975:15:25","nodeType":"YulExpressionStatement","src":"975:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"845:18:25","nodeType":"YulIdentifier","src":"845:18:25"},{"arguments":[{"name":"length","nativeSrc":"868:6:25","nodeType":"YulIdentifier","src":"868:6:25"},{"kind":"number","nativeSrc":"876:2:25","nodeType":"YulLiteral","src":"876:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"865:2:25","nodeType":"YulIdentifier","src":"865:2:25"},"nativeSrc":"865:14:25","nodeType":"YulFunctionCall","src":"865:14:25"}],"functionName":{"name":"eq","nativeSrc":"842:2:25","nodeType":"YulIdentifier","src":"842:2:25"},"nativeSrc":"842:38:25","nodeType":"YulFunctionCall","src":"842:38:25"},"nativeSrc":"839:161:25","nodeType":"YulIf","src":"839:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"626:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"661:4:25","nodeType":"YulTypedName","src":"661:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"670:6:25","nodeType":"YulTypedName","src":"670:6:25","type":""}],"src":"626:380:25"},{"body":{"nativeSrc":"1067:65:25","nodeType":"YulBlock","src":"1067:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1084:1:25","nodeType":"YulLiteral","src":"1084:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"1087:3:25","nodeType":"YulIdentifier","src":"1087:3:25"}],"functionName":{"name":"mstore","nativeSrc":"1077:6:25","nodeType":"YulIdentifier","src":"1077:6:25"},"nativeSrc":"1077:14:25","nodeType":"YulFunctionCall","src":"1077:14:25"},"nativeSrc":"1077:14:25","nodeType":"YulExpressionStatement","src":"1077:14:25"},{"nativeSrc":"1100:26:25","nodeType":"YulAssignment","src":"1100:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"1118:1:25","nodeType":"YulLiteral","src":"1118:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1121:4:25","nodeType":"YulLiteral","src":"1121:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1108:9:25","nodeType":"YulIdentifier","src":"1108:9:25"},"nativeSrc":"1108:18:25","nodeType":"YulFunctionCall","src":"1108:18:25"},"variableNames":[{"name":"data","nativeSrc":"1100:4:25","nodeType":"YulIdentifier","src":"1100:4:25"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1011:121:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1050:3:25","nodeType":"YulTypedName","src":"1050:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1058:4:25","nodeType":"YulTypedName","src":"1058:4:25","type":""}],"src":"1011:121:25"},{"body":{"nativeSrc":"1218:462:25","nodeType":"YulBlock","src":"1218:462:25","statements":[{"body":{"nativeSrc":"1251:423:25","nodeType":"YulBlock","src":"1251:423:25","statements":[{"nativeSrc":"1265:11:25","nodeType":"YulVariableDeclaration","src":"1265:11:25","value":{"kind":"number","nativeSrc":"1275:1:25","nodeType":"YulLiteral","src":"1275:1:25","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"1269:2:25","nodeType":"YulTypedName","src":"1269:2:25","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1296:1:25","nodeType":"YulLiteral","src":"1296:1:25","type":"","value":"0"},{"name":"array","nativeSrc":"1299:5:25","nodeType":"YulIdentifier","src":"1299:5:25"}],"functionName":{"name":"mstore","nativeSrc":"1289:6:25","nodeType":"YulIdentifier","src":"1289:6:25"},"nativeSrc":"1289:16:25","nodeType":"YulFunctionCall","src":"1289:16:25"},"nativeSrc":"1289:16:25","nodeType":"YulExpressionStatement","src":"1289:16:25"},{"nativeSrc":"1318:30:25","nodeType":"YulVariableDeclaration","src":"1318:30:25","value":{"arguments":[{"kind":"number","nativeSrc":"1340:1:25","nodeType":"YulLiteral","src":"1340:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1343:4:25","nodeType":"YulLiteral","src":"1343:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1330:9:25","nodeType":"YulIdentifier","src":"1330:9:25"},"nativeSrc":"1330:18:25","nodeType":"YulFunctionCall","src":"1330:18:25"},"variables":[{"name":"data","nativeSrc":"1322:4:25","nodeType":"YulTypedName","src":"1322:4:25","type":""}]},{"nativeSrc":"1361:57:25","nodeType":"YulVariableDeclaration","src":"1361:57:25","value":{"arguments":[{"name":"data","nativeSrc":"1384:4:25","nodeType":"YulIdentifier","src":"1384:4:25"},{"arguments":[{"kind":"number","nativeSrc":"1394:1:25","nodeType":"YulLiteral","src":"1394:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1401:10:25","nodeType":"YulIdentifier","src":"1401:10:25"},{"kind":"number","nativeSrc":"1413:2:25","nodeType":"YulLiteral","src":"1413:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1397:3:25","nodeType":"YulIdentifier","src":"1397:3:25"},"nativeSrc":"1397:19:25","nodeType":"YulFunctionCall","src":"1397:19:25"}],"functionName":{"name":"shr","nativeSrc":"1390:3:25","nodeType":"YulIdentifier","src":"1390:3:25"},"nativeSrc":"1390:27:25","nodeType":"YulFunctionCall","src":"1390:27:25"}],"functionName":{"name":"add","nativeSrc":"1380:3:25","nodeType":"YulIdentifier","src":"1380:3:25"},"nativeSrc":"1380:38:25","nodeType":"YulFunctionCall","src":"1380:38:25"},"variables":[{"name":"deleteStart","nativeSrc":"1365:11:25","nodeType":"YulTypedName","src":"1365:11:25","type":""}]},{"body":{"nativeSrc":"1455:23:25","nodeType":"YulBlock","src":"1455:23:25","statements":[{"nativeSrc":"1457:19:25","nodeType":"YulAssignment","src":"1457:19:25","value":{"name":"data","nativeSrc":"1472:4:25","nodeType":"YulIdentifier","src":"1472:4:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"1457:11:25","nodeType":"YulIdentifier","src":"1457:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1437:10:25","nodeType":"YulIdentifier","src":"1437:10:25"},{"kind":"number","nativeSrc":"1449:4:25","nodeType":"YulLiteral","src":"1449:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1434:2:25","nodeType":"YulIdentifier","src":"1434:2:25"},"nativeSrc":"1434:20:25","nodeType":"YulFunctionCall","src":"1434:20:25"},"nativeSrc":"1431:47:25","nodeType":"YulIf","src":"1431:47:25"},{"nativeSrc":"1491:41:25","nodeType":"YulVariableDeclaration","src":"1491:41:25","value":{"arguments":[{"name":"data","nativeSrc":"1505:4:25","nodeType":"YulIdentifier","src":"1505:4:25"},{"arguments":[{"kind":"number","nativeSrc":"1515:1:25","nodeType":"YulLiteral","src":"1515:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1522:3:25","nodeType":"YulIdentifier","src":"1522:3:25"},{"kind":"number","nativeSrc":"1527:2:25","nodeType":"YulLiteral","src":"1527:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1518:3:25","nodeType":"YulIdentifier","src":"1518:3:25"},"nativeSrc":"1518:12:25","nodeType":"YulFunctionCall","src":"1518:12:25"}],"functionName":{"name":"shr","nativeSrc":"1511:3:25","nodeType":"YulIdentifier","src":"1511:3:25"},"nativeSrc":"1511:20:25","nodeType":"YulFunctionCall","src":"1511:20:25"}],"functionName":{"name":"add","nativeSrc":"1501:3:25","nodeType":"YulIdentifier","src":"1501:3:25"},"nativeSrc":"1501:31:25","nodeType":"YulFunctionCall","src":"1501:31:25"},"variables":[{"name":"_2","nativeSrc":"1495:2:25","nodeType":"YulTypedName","src":"1495:2:25","type":""}]},{"nativeSrc":"1545:24:25","nodeType":"YulVariableDeclaration","src":"1545:24:25","value":{"name":"deleteStart","nativeSrc":"1558:11:25","nodeType":"YulIdentifier","src":"1558:11:25"},"variables":[{"name":"start","nativeSrc":"1549:5:25","nodeType":"YulTypedName","src":"1549:5:25","type":""}]},{"body":{"nativeSrc":"1643:21:25","nodeType":"YulBlock","src":"1643:21:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1652:5:25","nodeType":"YulIdentifier","src":"1652:5:25"},{"name":"_1","nativeSrc":"1659:2:25","nodeType":"YulIdentifier","src":"1659:2:25"}],"functionName":{"name":"sstore","nativeSrc":"1645:6:25","nodeType":"YulIdentifier","src":"1645:6:25"},"nativeSrc":"1645:17:25","nodeType":"YulFunctionCall","src":"1645:17:25"},"nativeSrc":"1645:17:25","nodeType":"YulExpressionStatement","src":"1645:17:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1593:5:25","nodeType":"YulIdentifier","src":"1593:5:25"},{"name":"_2","nativeSrc":"1600:2:25","nodeType":"YulIdentifier","src":"1600:2:25"}],"functionName":{"name":"lt","nativeSrc":"1590:2:25","nodeType":"YulIdentifier","src":"1590:2:25"},"nativeSrc":"1590:13:25","nodeType":"YulFunctionCall","src":"1590:13:25"},"nativeSrc":"1582:82:25","nodeType":"YulForLoop","post":{"nativeSrc":"1604:26:25","nodeType":"YulBlock","src":"1604:26:25","statements":[{"nativeSrc":"1606:22:25","nodeType":"YulAssignment","src":"1606:22:25","value":{"arguments":[{"name":"start","nativeSrc":"1619:5:25","nodeType":"YulIdentifier","src":"1619:5:25"},{"kind":"number","nativeSrc":"1626:1:25","nodeType":"YulLiteral","src":"1626:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1615:3:25","nodeType":"YulIdentifier","src":"1615:3:25"},"nativeSrc":"1615:13:25","nodeType":"YulFunctionCall","src":"1615:13:25"},"variableNames":[{"name":"start","nativeSrc":"1606:5:25","nodeType":"YulIdentifier","src":"1606:5:25"}]}]},"pre":{"nativeSrc":"1586:3:25","nodeType":"YulBlock","src":"1586:3:25","statements":[]},"src":"1582:82:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1234:3:25","nodeType":"YulIdentifier","src":"1234:3:25"},{"kind":"number","nativeSrc":"1239:2:25","nodeType":"YulLiteral","src":"1239:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1231:2:25","nodeType":"YulIdentifier","src":"1231:2:25"},"nativeSrc":"1231:11:25","nodeType":"YulFunctionCall","src":"1231:11:25"},"nativeSrc":"1228:446:25","nodeType":"YulIf","src":"1228:446:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1137:543:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1190:5:25","nodeType":"YulTypedName","src":"1190:5:25","type":""},{"name":"len","nativeSrc":"1197:3:25","nodeType":"YulTypedName","src":"1197:3:25","type":""},{"name":"startIndex","nativeSrc":"1202:10:25","nodeType":"YulTypedName","src":"1202:10:25","type":""}],"src":"1137:543:25"},{"body":{"nativeSrc":"1770:81:25","nodeType":"YulBlock","src":"1770:81:25","statements":[{"nativeSrc":"1780:65:25","nodeType":"YulAssignment","src":"1780:65:25","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1795:4:25","nodeType":"YulIdentifier","src":"1795:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1813:1:25","nodeType":"YulLiteral","src":"1813:1:25","type":"","value":"3"},{"name":"len","nativeSrc":"1816:3:25","nodeType":"YulIdentifier","src":"1816:3:25"}],"functionName":{"name":"shl","nativeSrc":"1809:3:25","nodeType":"YulIdentifier","src":"1809:3:25"},"nativeSrc":"1809:11:25","nodeType":"YulFunctionCall","src":"1809:11:25"},{"arguments":[{"kind":"number","nativeSrc":"1826:1:25","nodeType":"YulLiteral","src":"1826:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1822:3:25","nodeType":"YulIdentifier","src":"1822:3:25"},"nativeSrc":"1822:6:25","nodeType":"YulFunctionCall","src":"1822:6:25"}],"functionName":{"name":"shr","nativeSrc":"1805:3:25","nodeType":"YulIdentifier","src":"1805:3:25"},"nativeSrc":"1805:24:25","nodeType":"YulFunctionCall","src":"1805:24:25"}],"functionName":{"name":"not","nativeSrc":"1801:3:25","nodeType":"YulIdentifier","src":"1801:3:25"},"nativeSrc":"1801:29:25","nodeType":"YulFunctionCall","src":"1801:29:25"}],"functionName":{"name":"and","nativeSrc":"1791:3:25","nodeType":"YulIdentifier","src":"1791:3:25"},"nativeSrc":"1791:40:25","nodeType":"YulFunctionCall","src":"1791:40:25"},{"arguments":[{"kind":"number","nativeSrc":"1837:1:25","nodeType":"YulLiteral","src":"1837:1:25","type":"","value":"1"},{"name":"len","nativeSrc":"1840:3:25","nodeType":"YulIdentifier","src":"1840:3:25"}],"functionName":{"name":"shl","nativeSrc":"1833:3:25","nodeType":"YulIdentifier","src":"1833:3:25"},"nativeSrc":"1833:11:25","nodeType":"YulFunctionCall","src":"1833:11:25"}],"functionName":{"name":"or","nativeSrc":"1788:2:25","nodeType":"YulIdentifier","src":"1788:2:25"},"nativeSrc":"1788:57:25","nodeType":"YulFunctionCall","src":"1788:57:25"},"variableNames":[{"name":"used","nativeSrc":"1780:4:25","nodeType":"YulIdentifier","src":"1780:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1685:166:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1747:4:25","nodeType":"YulTypedName","src":"1747:4:25","type":""},{"name":"len","nativeSrc":"1753:3:25","nodeType":"YulTypedName","src":"1753:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1761:4:25","nodeType":"YulTypedName","src":"1761:4:25","type":""}],"src":"1685:166:25"},{"body":{"nativeSrc":"1952:1249:25","nodeType":"YulBlock","src":"1952:1249:25","statements":[{"nativeSrc":"1962:24:25","nodeType":"YulVariableDeclaration","src":"1962:24:25","value":{"arguments":[{"name":"src","nativeSrc":"1982:3:25","nodeType":"YulIdentifier","src":"1982:3:25"}],"functionName":{"name":"mload","nativeSrc":"1976:5:25","nodeType":"YulIdentifier","src":"1976:5:25"},"nativeSrc":"1976:10:25","nodeType":"YulFunctionCall","src":"1976:10:25"},"variables":[{"name":"newLen","nativeSrc":"1966:6:25","nodeType":"YulTypedName","src":"1966:6:25","type":""}]},{"body":{"nativeSrc":"2029:22:25","nodeType":"YulBlock","src":"2029:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2031:16:25","nodeType":"YulIdentifier","src":"2031:16:25"},"nativeSrc":"2031:18:25","nodeType":"YulFunctionCall","src":"2031:18:25"},"nativeSrc":"2031:18:25","nodeType":"YulExpressionStatement","src":"2031:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2001:6:25","nodeType":"YulIdentifier","src":"2001:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2017:2:25","nodeType":"YulLiteral","src":"2017:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"2021:1:25","nodeType":"YulLiteral","src":"2021:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2013:3:25","nodeType":"YulIdentifier","src":"2013:3:25"},"nativeSrc":"2013:10:25","nodeType":"YulFunctionCall","src":"2013:10:25"},{"kind":"number","nativeSrc":"2025:1:25","nodeType":"YulLiteral","src":"2025:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2009:3:25","nodeType":"YulIdentifier","src":"2009:3:25"},"nativeSrc":"2009:18:25","nodeType":"YulFunctionCall","src":"2009:18:25"}],"functionName":{"name":"gt","nativeSrc":"1998:2:25","nodeType":"YulIdentifier","src":"1998:2:25"},"nativeSrc":"1998:30:25","nodeType":"YulFunctionCall","src":"1998:30:25"},"nativeSrc":"1995:56:25","nodeType":"YulIf","src":"1995:56:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2104:4:25","nodeType":"YulIdentifier","src":"2104:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2142:4:25","nodeType":"YulIdentifier","src":"2142:4:25"}],"functionName":{"name":"sload","nativeSrc":"2136:5:25","nodeType":"YulIdentifier","src":"2136:5:25"},"nativeSrc":"2136:11:25","nodeType":"YulFunctionCall","src":"2136:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"2110:25:25","nodeType":"YulIdentifier","src":"2110:25:25"},"nativeSrc":"2110:38:25","nodeType":"YulFunctionCall","src":"2110:38:25"},{"name":"newLen","nativeSrc":"2150:6:25","nodeType":"YulIdentifier","src":"2150:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2060:43:25","nodeType":"YulIdentifier","src":"2060:43:25"},"nativeSrc":"2060:97:25","nodeType":"YulFunctionCall","src":"2060:97:25"},"nativeSrc":"2060:97:25","nodeType":"YulExpressionStatement","src":"2060:97:25"},{"nativeSrc":"2166:18:25","nodeType":"YulVariableDeclaration","src":"2166:18:25","value":{"kind":"number","nativeSrc":"2183:1:25","nodeType":"YulLiteral","src":"2183:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"2170:9:25","nodeType":"YulTypedName","src":"2170:9:25","type":""}]},{"nativeSrc":"2193:23:25","nodeType":"YulVariableDeclaration","src":"2193:23:25","value":{"kind":"number","nativeSrc":"2212:4:25","nodeType":"YulLiteral","src":"2212:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"2197:11:25","nodeType":"YulTypedName","src":"2197:11:25","type":""}]},{"nativeSrc":"2225:17:25","nodeType":"YulAssignment","src":"2225:17:25","value":{"kind":"number","nativeSrc":"2238:4:25","nodeType":"YulLiteral","src":"2238:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2225:9:25","nodeType":"YulIdentifier","src":"2225:9:25"}]},{"cases":[{"body":{"nativeSrc":"2288:656:25","nodeType":"YulBlock","src":"2288:656:25","statements":[{"nativeSrc":"2302:35:25","nodeType":"YulVariableDeclaration","src":"2302:35:25","value":{"arguments":[{"name":"newLen","nativeSrc":"2321:6:25","nodeType":"YulIdentifier","src":"2321:6:25"},{"arguments":[{"kind":"number","nativeSrc":"2333:2:25","nodeType":"YulLiteral","src":"2333:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2329:3:25","nodeType":"YulIdentifier","src":"2329:3:25"},"nativeSrc":"2329:7:25","nodeType":"YulFunctionCall","src":"2329:7:25"}],"functionName":{"name":"and","nativeSrc":"2317:3:25","nodeType":"YulIdentifier","src":"2317:3:25"},"nativeSrc":"2317:20:25","nodeType":"YulFunctionCall","src":"2317:20:25"},"variables":[{"name":"loopEnd","nativeSrc":"2306:7:25","nodeType":"YulTypedName","src":"2306:7:25","type":""}]},{"nativeSrc":"2350:49:25","nodeType":"YulVariableDeclaration","src":"2350:49:25","value":{"arguments":[{"name":"slot","nativeSrc":"2394:4:25","nodeType":"YulIdentifier","src":"2394:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2364:29:25","nodeType":"YulIdentifier","src":"2364:29:25"},"nativeSrc":"2364:35:25","nodeType":"YulFunctionCall","src":"2364:35:25"},"variables":[{"name":"dstPtr","nativeSrc":"2354:6:25","nodeType":"YulTypedName","src":"2354:6:25","type":""}]},{"nativeSrc":"2412:10:25","nodeType":"YulVariableDeclaration","src":"2412:10:25","value":{"kind":"number","nativeSrc":"2421:1:25","nodeType":"YulLiteral","src":"2421:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2416:1:25","nodeType":"YulTypedName","src":"2416:1:25","type":""}]},{"body":{"nativeSrc":"2499:172:25","nodeType":"YulBlock","src":"2499:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2524:6:25","nodeType":"YulIdentifier","src":"2524:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2542:3:25","nodeType":"YulIdentifier","src":"2542:3:25"},{"name":"srcOffset","nativeSrc":"2547:9:25","nodeType":"YulIdentifier","src":"2547:9:25"}],"functionName":{"name":"add","nativeSrc":"2538:3:25","nodeType":"YulIdentifier","src":"2538:3:25"},"nativeSrc":"2538:19:25","nodeType":"YulFunctionCall","src":"2538:19:25"}],"functionName":{"name":"mload","nativeSrc":"2532:5:25","nodeType":"YulIdentifier","src":"2532:5:25"},"nativeSrc":"2532:26:25","nodeType":"YulFunctionCall","src":"2532:26:25"}],"functionName":{"name":"sstore","nativeSrc":"2517:6:25","nodeType":"YulIdentifier","src":"2517:6:25"},"nativeSrc":"2517:42:25","nodeType":"YulFunctionCall","src":"2517:42:25"},"nativeSrc":"2517:42:25","nodeType":"YulExpressionStatement","src":"2517:42:25"},{"nativeSrc":"2576:24:25","nodeType":"YulAssignment","src":"2576:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2590:6:25","nodeType":"YulIdentifier","src":"2590:6:25"},{"kind":"number","nativeSrc":"2598:1:25","nodeType":"YulLiteral","src":"2598:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2586:3:25","nodeType":"YulIdentifier","src":"2586:3:25"},"nativeSrc":"2586:14:25","nodeType":"YulFunctionCall","src":"2586:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"2576:6:25","nodeType":"YulIdentifier","src":"2576:6:25"}]},{"nativeSrc":"2617:40:25","nodeType":"YulAssignment","src":"2617:40:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2634:9:25","nodeType":"YulIdentifier","src":"2634:9:25"},{"name":"srcOffset_1","nativeSrc":"2645:11:25","nodeType":"YulIdentifier","src":"2645:11:25"}],"functionName":{"name":"add","nativeSrc":"2630:3:25","nodeType":"YulIdentifier","src":"2630:3:25"},"nativeSrc":"2630:27:25","nodeType":"YulFunctionCall","src":"2630:27:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"2617:9:25","nodeType":"YulIdentifier","src":"2617:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2446:1:25","nodeType":"YulIdentifier","src":"2446:1:25"},{"name":"loopEnd","nativeSrc":"2449:7:25","nodeType":"YulIdentifier","src":"2449:7:25"}],"functionName":{"name":"lt","nativeSrc":"2443:2:25","nodeType":"YulIdentifier","src":"2443:2:25"},"nativeSrc":"2443:14:25","nodeType":"YulFunctionCall","src":"2443:14:25"},"nativeSrc":"2435:236:25","nodeType":"YulForLoop","post":{"nativeSrc":"2458:28:25","nodeType":"YulBlock","src":"2458:28:25","statements":[{"nativeSrc":"2460:24:25","nodeType":"YulAssignment","src":"2460:24:25","value":{"arguments":[{"name":"i","nativeSrc":"2469:1:25","nodeType":"YulIdentifier","src":"2469:1:25"},{"name":"srcOffset_1","nativeSrc":"2472:11:25","nodeType":"YulIdentifier","src":"2472:11:25"}],"functionName":{"name":"add","nativeSrc":"2465:3:25","nodeType":"YulIdentifier","src":"2465:3:25"},"nativeSrc":"2465:19:25","nodeType":"YulFunctionCall","src":"2465:19:25"},"variableNames":[{"name":"i","nativeSrc":"2460:1:25","nodeType":"YulIdentifier","src":"2460:1:25"}]}]},"pre":{"nativeSrc":"2439:3:25","nodeType":"YulBlock","src":"2439:3:25","statements":[]},"src":"2435:236:25"},{"body":{"nativeSrc":"2719:166:25","nodeType":"YulBlock","src":"2719:166:25","statements":[{"nativeSrc":"2737:43:25","nodeType":"YulVariableDeclaration","src":"2737:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2764:3:25","nodeType":"YulIdentifier","src":"2764:3:25"},{"name":"srcOffset","nativeSrc":"2769:9:25","nodeType":"YulIdentifier","src":"2769:9:25"}],"functionName":{"name":"add","nativeSrc":"2760:3:25","nodeType":"YulIdentifier","src":"2760:3:25"},"nativeSrc":"2760:19:25","nodeType":"YulFunctionCall","src":"2760:19:25"}],"functionName":{"name":"mload","nativeSrc":"2754:5:25","nodeType":"YulIdentifier","src":"2754:5:25"},"nativeSrc":"2754:26:25","nodeType":"YulFunctionCall","src":"2754:26:25"},"variables":[{"name":"lastValue","nativeSrc":"2741:9:25","nodeType":"YulTypedName","src":"2741:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2804:6:25","nodeType":"YulIdentifier","src":"2804:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"2816:9:25","nodeType":"YulIdentifier","src":"2816:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2843:1:25","nodeType":"YulLiteral","src":"2843:1:25","type":"","value":"3"},{"name":"newLen","nativeSrc":"2846:6:25","nodeType":"YulIdentifier","src":"2846:6:25"}],"functionName":{"name":"shl","nativeSrc":"2839:3:25","nodeType":"YulIdentifier","src":"2839:3:25"},"nativeSrc":"2839:14:25","nodeType":"YulFunctionCall","src":"2839:14:25"},{"kind":"number","nativeSrc":"2855:3:25","nodeType":"YulLiteral","src":"2855:3:25","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2835:3:25","nodeType":"YulIdentifier","src":"2835:3:25"},"nativeSrc":"2835:24:25","nodeType":"YulFunctionCall","src":"2835:24:25"},{"arguments":[{"kind":"number","nativeSrc":"2865:1:25","nodeType":"YulLiteral","src":"2865:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2861:3:25","nodeType":"YulIdentifier","src":"2861:3:25"},"nativeSrc":"2861:6:25","nodeType":"YulFunctionCall","src":"2861:6:25"}],"functionName":{"name":"shr","nativeSrc":"2831:3:25","nodeType":"YulIdentifier","src":"2831:3:25"},"nativeSrc":"2831:37:25","nodeType":"YulFunctionCall","src":"2831:37:25"}],"functionName":{"name":"not","nativeSrc":"2827:3:25","nodeType":"YulIdentifier","src":"2827:3:25"},"nativeSrc":"2827:42:25","nodeType":"YulFunctionCall","src":"2827:42:25"}],"functionName":{"name":"and","nativeSrc":"2812:3:25","nodeType":"YulIdentifier","src":"2812:3:25"},"nativeSrc":"2812:58:25","nodeType":"YulFunctionCall","src":"2812:58:25"}],"functionName":{"name":"sstore","nativeSrc":"2797:6:25","nodeType":"YulIdentifier","src":"2797:6:25"},"nativeSrc":"2797:74:25","nodeType":"YulFunctionCall","src":"2797:74:25"},"nativeSrc":"2797:74:25","nodeType":"YulExpressionStatement","src":"2797:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2690:7:25","nodeType":"YulIdentifier","src":"2690:7:25"},{"name":"newLen","nativeSrc":"2699:6:25","nodeType":"YulIdentifier","src":"2699:6:25"}],"functionName":{"name":"lt","nativeSrc":"2687:2:25","nodeType":"YulIdentifier","src":"2687:2:25"},"nativeSrc":"2687:19:25","nodeType":"YulFunctionCall","src":"2687:19:25"},"nativeSrc":"2684:201:25","nodeType":"YulIf","src":"2684:201:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2905:4:25","nodeType":"YulIdentifier","src":"2905:4:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2919:1:25","nodeType":"YulLiteral","src":"2919:1:25","type":"","value":"1"},{"name":"newLen","nativeSrc":"2922:6:25","nodeType":"YulIdentifier","src":"2922:6:25"}],"functionName":{"name":"shl","nativeSrc":"2915:3:25","nodeType":"YulIdentifier","src":"2915:3:25"},"nativeSrc":"2915:14:25","nodeType":"YulFunctionCall","src":"2915:14:25"},{"kind":"number","nativeSrc":"2931:1:25","nodeType":"YulLiteral","src":"2931:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2911:3:25","nodeType":"YulIdentifier","src":"2911:3:25"},"nativeSrc":"2911:22:25","nodeType":"YulFunctionCall","src":"2911:22:25"}],"functionName":{"name":"sstore","nativeSrc":"2898:6:25","nodeType":"YulIdentifier","src":"2898:6:25"},"nativeSrc":"2898:36:25","nodeType":"YulFunctionCall","src":"2898:36:25"},"nativeSrc":"2898:36:25","nodeType":"YulExpressionStatement","src":"2898:36:25"}]},"nativeSrc":"2281:663:25","nodeType":"YulCase","src":"2281:663:25","value":{"kind":"number","nativeSrc":"2286:1:25","nodeType":"YulLiteral","src":"2286:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"2961:234:25","nodeType":"YulBlock","src":"2961:234:25","statements":[{"nativeSrc":"2975:14:25","nodeType":"YulVariableDeclaration","src":"2975:14:25","value":{"kind":"number","nativeSrc":"2988:1:25","nodeType":"YulLiteral","src":"2988:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2979:5:25","nodeType":"YulTypedName","src":"2979:5:25","type":""}]},{"body":{"nativeSrc":"3024:67:25","nodeType":"YulBlock","src":"3024:67:25","statements":[{"nativeSrc":"3042:35:25","nodeType":"YulAssignment","src":"3042:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3061:3:25","nodeType":"YulIdentifier","src":"3061:3:25"},{"name":"srcOffset","nativeSrc":"3066:9:25","nodeType":"YulIdentifier","src":"3066:9:25"}],"functionName":{"name":"add","nativeSrc":"3057:3:25","nodeType":"YulIdentifier","src":"3057:3:25"},"nativeSrc":"3057:19:25","nodeType":"YulFunctionCall","src":"3057:19:25"}],"functionName":{"name":"mload","nativeSrc":"3051:5:25","nodeType":"YulIdentifier","src":"3051:5:25"},"nativeSrc":"3051:26:25","nodeType":"YulFunctionCall","src":"3051:26:25"},"variableNames":[{"name":"value","nativeSrc":"3042:5:25","nodeType":"YulIdentifier","src":"3042:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"3005:6:25","nodeType":"YulIdentifier","src":"3005:6:25"},"nativeSrc":"3002:89:25","nodeType":"YulIf","src":"3002:89:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3111:4:25","nodeType":"YulIdentifier","src":"3111:4:25"},{"arguments":[{"name":"value","nativeSrc":"3170:5:25","nodeType":"YulIdentifier","src":"3170:5:25"},{"name":"newLen","nativeSrc":"3177:6:25","nodeType":"YulIdentifier","src":"3177:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3117:52:25","nodeType":"YulIdentifier","src":"3117:52:25"},"nativeSrc":"3117:67:25","nodeType":"YulFunctionCall","src":"3117:67:25"}],"functionName":{"name":"sstore","nativeSrc":"3104:6:25","nodeType":"YulIdentifier","src":"3104:6:25"},"nativeSrc":"3104:81:25","nodeType":"YulFunctionCall","src":"3104:81:25"},"nativeSrc":"3104:81:25","nodeType":"YulExpressionStatement","src":"3104:81:25"}]},"nativeSrc":"2953:242:25","nodeType":"YulCase","src":"2953:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2261:6:25","nodeType":"YulIdentifier","src":"2261:6:25"},{"kind":"number","nativeSrc":"2269:2:25","nodeType":"YulLiteral","src":"2269:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2258:2:25","nodeType":"YulIdentifier","src":"2258:2:25"},"nativeSrc":"2258:14:25","nodeType":"YulFunctionCall","src":"2258:14:25"},"nativeSrc":"2251:944:25","nodeType":"YulSwitch","src":"2251:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1856:1345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1937:4:25","nodeType":"YulTypedName","src":"1937:4:25","type":""},{"name":"src","nativeSrc":"1943:3:25","nodeType":"YulTypedName","src":"1943:3:25","type":""}],"src":"1856:1345:25"},{"body":{"nativeSrc":"3419:276:25","nodeType":"YulBlock","src":"3419:276:25","statements":[{"nativeSrc":"3429:27:25","nodeType":"YulAssignment","src":"3429:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3441:9:25","nodeType":"YulIdentifier","src":"3441:9:25"},{"kind":"number","nativeSrc":"3452:3:25","nodeType":"YulLiteral","src":"3452:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3437:3:25","nodeType":"YulIdentifier","src":"3437:3:25"},"nativeSrc":"3437:19:25","nodeType":"YulFunctionCall","src":"3437:19:25"},"variableNames":[{"name":"tail","nativeSrc":"3429:4:25","nodeType":"YulIdentifier","src":"3429:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3472:9:25","nodeType":"YulIdentifier","src":"3472:9:25"},{"name":"value0","nativeSrc":"3483:6:25","nodeType":"YulIdentifier","src":"3483:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3465:6:25","nodeType":"YulIdentifier","src":"3465:6:25"},"nativeSrc":"3465:25:25","nodeType":"YulFunctionCall","src":"3465:25:25"},"nativeSrc":"3465:25:25","nodeType":"YulExpressionStatement","src":"3465:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3510:9:25","nodeType":"YulIdentifier","src":"3510:9:25"},{"kind":"number","nativeSrc":"3521:2:25","nodeType":"YulLiteral","src":"3521:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3506:3:25","nodeType":"YulIdentifier","src":"3506:3:25"},"nativeSrc":"3506:18:25","nodeType":"YulFunctionCall","src":"3506:18:25"},{"name":"value1","nativeSrc":"3526:6:25","nodeType":"YulIdentifier","src":"3526:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3499:6:25","nodeType":"YulIdentifier","src":"3499:6:25"},"nativeSrc":"3499:34:25","nodeType":"YulFunctionCall","src":"3499:34:25"},"nativeSrc":"3499:34:25","nodeType":"YulExpressionStatement","src":"3499:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3553:9:25","nodeType":"YulIdentifier","src":"3553:9:25"},{"kind":"number","nativeSrc":"3564:2:25","nodeType":"YulLiteral","src":"3564:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3549:3:25","nodeType":"YulIdentifier","src":"3549:3:25"},"nativeSrc":"3549:18:25","nodeType":"YulFunctionCall","src":"3549:18:25"},{"name":"value2","nativeSrc":"3569:6:25","nodeType":"YulIdentifier","src":"3569:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3542:6:25","nodeType":"YulIdentifier","src":"3542:6:25"},"nativeSrc":"3542:34:25","nodeType":"YulFunctionCall","src":"3542:34:25"},"nativeSrc":"3542:34:25","nodeType":"YulExpressionStatement","src":"3542:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3596:9:25","nodeType":"YulIdentifier","src":"3596:9:25"},{"kind":"number","nativeSrc":"3607:2:25","nodeType":"YulLiteral","src":"3607:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3592:3:25","nodeType":"YulIdentifier","src":"3592:3:25"},"nativeSrc":"3592:18:25","nodeType":"YulFunctionCall","src":"3592:18:25"},{"name":"value3","nativeSrc":"3612:6:25","nodeType":"YulIdentifier","src":"3612:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3585:6:25","nodeType":"YulIdentifier","src":"3585:6:25"},"nativeSrc":"3585:34:25","nodeType":"YulFunctionCall","src":"3585:34:25"},"nativeSrc":"3585:34:25","nodeType":"YulExpressionStatement","src":"3585:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3639:9:25","nodeType":"YulIdentifier","src":"3639:9:25"},{"kind":"number","nativeSrc":"3650:3:25","nodeType":"YulLiteral","src":"3650:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3635:3:25","nodeType":"YulIdentifier","src":"3635:3:25"},"nativeSrc":"3635:19:25","nodeType":"YulFunctionCall","src":"3635:19:25"},{"arguments":[{"name":"value4","nativeSrc":"3660:6:25","nodeType":"YulIdentifier","src":"3660:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3676:3:25","nodeType":"YulLiteral","src":"3676:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"3681:1:25","nodeType":"YulLiteral","src":"3681:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3672:3:25","nodeType":"YulIdentifier","src":"3672:3:25"},"nativeSrc":"3672:11:25","nodeType":"YulFunctionCall","src":"3672:11:25"},{"kind":"number","nativeSrc":"3685:1:25","nodeType":"YulLiteral","src":"3685:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3668:3:25","nodeType":"YulIdentifier","src":"3668:3:25"},"nativeSrc":"3668:19:25","nodeType":"YulFunctionCall","src":"3668:19:25"}],"functionName":{"name":"and","nativeSrc":"3656:3:25","nodeType":"YulIdentifier","src":"3656:3:25"},"nativeSrc":"3656:32:25","nodeType":"YulFunctionCall","src":"3656:32:25"}],"functionName":{"name":"mstore","nativeSrc":"3628:6:25","nodeType":"YulIdentifier","src":"3628:6:25"},"nativeSrc":"3628:61:25","nodeType":"YulFunctionCall","src":"3628:61:25"},"nativeSrc":"3628:61:25","nodeType":"YulExpressionStatement","src":"3628:61:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"3206:489:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3356:9:25","nodeType":"YulTypedName","src":"3356:9:25","type":""},{"name":"value4","nativeSrc":"3367:6:25","nodeType":"YulTypedName","src":"3367:6:25","type":""},{"name":"value3","nativeSrc":"3375:6:25","nodeType":"YulTypedName","src":"3375:6:25","type":""},{"name":"value2","nativeSrc":"3383:6:25","nodeType":"YulTypedName","src":"3383:6:25","type":""},{"name":"value1","nativeSrc":"3391:6:25","nodeType":"YulTypedName","src":"3391:6:25","type":""},{"name":"value0","nativeSrc":"3399:6:25","nodeType":"YulTypedName","src":"3399:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3410:4:25","nodeType":"YulTypedName","src":"3410:4:25","type":""}],"src":"3206:489:25"},{"body":{"nativeSrc":"3821:427:25","nodeType":"YulBlock","src":"3821:427:25","statements":[{"nativeSrc":"3831:12:25","nodeType":"YulVariableDeclaration","src":"3831:12:25","value":{"kind":"number","nativeSrc":"3841:2:25","nodeType":"YulLiteral","src":"3841:2:25","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3835:2:25","nodeType":"YulTypedName","src":"3835:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3859:9:25","nodeType":"YulIdentifier","src":"3859:9:25"},{"kind":"number","nativeSrc":"3870:2:25","nodeType":"YulLiteral","src":"3870:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3852:6:25","nodeType":"YulIdentifier","src":"3852:6:25"},"nativeSrc":"3852:21:25","nodeType":"YulFunctionCall","src":"3852:21:25"},"nativeSrc":"3852:21:25","nodeType":"YulExpressionStatement","src":"3852:21:25"},{"nativeSrc":"3882:27:25","nodeType":"YulVariableDeclaration","src":"3882:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"3902:6:25","nodeType":"YulIdentifier","src":"3902:6:25"}],"functionName":{"name":"mload","nativeSrc":"3896:5:25","nodeType":"YulIdentifier","src":"3896:5:25"},"nativeSrc":"3896:13:25","nodeType":"YulFunctionCall","src":"3896:13:25"},"variables":[{"name":"length","nativeSrc":"3886:6:25","nodeType":"YulTypedName","src":"3886:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3929:9:25","nodeType":"YulIdentifier","src":"3929:9:25"},{"kind":"number","nativeSrc":"3940:2:25","nodeType":"YulLiteral","src":"3940:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3925:3:25","nodeType":"YulIdentifier","src":"3925:3:25"},"nativeSrc":"3925:18:25","nodeType":"YulFunctionCall","src":"3925:18:25"},{"name":"length","nativeSrc":"3945:6:25","nodeType":"YulIdentifier","src":"3945:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3918:6:25","nodeType":"YulIdentifier","src":"3918:6:25"},"nativeSrc":"3918:34:25","nodeType":"YulFunctionCall","src":"3918:34:25"},"nativeSrc":"3918:34:25","nodeType":"YulExpressionStatement","src":"3918:34:25"},{"nativeSrc":"3961:10:25","nodeType":"YulVariableDeclaration","src":"3961:10:25","value":{"kind":"number","nativeSrc":"3970:1:25","nodeType":"YulLiteral","src":"3970:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3965:1:25","nodeType":"YulTypedName","src":"3965:1:25","type":""}]},{"body":{"nativeSrc":"4030:90:25","nodeType":"YulBlock","src":"4030:90:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4059:9:25","nodeType":"YulIdentifier","src":"4059:9:25"},{"name":"i","nativeSrc":"4070:1:25","nodeType":"YulIdentifier","src":"4070:1:25"}],"functionName":{"name":"add","nativeSrc":"4055:3:25","nodeType":"YulIdentifier","src":"4055:3:25"},"nativeSrc":"4055:17:25","nodeType":"YulFunctionCall","src":"4055:17:25"},{"kind":"number","nativeSrc":"4074:2:25","nodeType":"YulLiteral","src":"4074:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4051:3:25","nodeType":"YulIdentifier","src":"4051:3:25"},"nativeSrc":"4051:26:25","nodeType":"YulFunctionCall","src":"4051:26:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4093:6:25","nodeType":"YulIdentifier","src":"4093:6:25"},{"name":"i","nativeSrc":"4101:1:25","nodeType":"YulIdentifier","src":"4101:1:25"}],"functionName":{"name":"add","nativeSrc":"4089:3:25","nodeType":"YulIdentifier","src":"4089:3:25"},"nativeSrc":"4089:14:25","nodeType":"YulFunctionCall","src":"4089:14:25"},{"name":"_1","nativeSrc":"4105:2:25","nodeType":"YulIdentifier","src":"4105:2:25"}],"functionName":{"name":"add","nativeSrc":"4085:3:25","nodeType":"YulIdentifier","src":"4085:3:25"},"nativeSrc":"4085:23:25","nodeType":"YulFunctionCall","src":"4085:23:25"}],"functionName":{"name":"mload","nativeSrc":"4079:5:25","nodeType":"YulIdentifier","src":"4079:5:25"},"nativeSrc":"4079:30:25","nodeType":"YulFunctionCall","src":"4079:30:25"}],"functionName":{"name":"mstore","nativeSrc":"4044:6:25","nodeType":"YulIdentifier","src":"4044:6:25"},"nativeSrc":"4044:66:25","nodeType":"YulFunctionCall","src":"4044:66:25"},"nativeSrc":"4044:66:25","nodeType":"YulExpressionStatement","src":"4044:66:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3991:1:25","nodeType":"YulIdentifier","src":"3991:1:25"},{"name":"length","nativeSrc":"3994:6:25","nodeType":"YulIdentifier","src":"3994:6:25"}],"functionName":{"name":"lt","nativeSrc":"3988:2:25","nodeType":"YulIdentifier","src":"3988:2:25"},"nativeSrc":"3988:13:25","nodeType":"YulFunctionCall","src":"3988:13:25"},"nativeSrc":"3980:140:25","nodeType":"YulForLoop","post":{"nativeSrc":"4002:19:25","nodeType":"YulBlock","src":"4002:19:25","statements":[{"nativeSrc":"4004:15:25","nodeType":"YulAssignment","src":"4004:15:25","value":{"arguments":[{"name":"i","nativeSrc":"4013:1:25","nodeType":"YulIdentifier","src":"4013:1:25"},{"name":"_1","nativeSrc":"4016:2:25","nodeType":"YulIdentifier","src":"4016:2:25"}],"functionName":{"name":"add","nativeSrc":"4009:3:25","nodeType":"YulIdentifier","src":"4009:3:25"},"nativeSrc":"4009:10:25","nodeType":"YulFunctionCall","src":"4009:10:25"},"variableNames":[{"name":"i","nativeSrc":"4004:1:25","nodeType":"YulIdentifier","src":"4004:1:25"}]}]},"pre":{"nativeSrc":"3984:3:25","nodeType":"YulBlock","src":"3984:3:25","statements":[]},"src":"3980:140:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4144:9:25","nodeType":"YulIdentifier","src":"4144:9:25"},{"name":"length","nativeSrc":"4155:6:25","nodeType":"YulIdentifier","src":"4155:6:25"}],"functionName":{"name":"add","nativeSrc":"4140:3:25","nodeType":"YulIdentifier","src":"4140:3:25"},"nativeSrc":"4140:22:25","nodeType":"YulFunctionCall","src":"4140:22:25"},{"kind":"number","nativeSrc":"4164:2:25","nodeType":"YulLiteral","src":"4164:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4136:3:25","nodeType":"YulIdentifier","src":"4136:3:25"},"nativeSrc":"4136:31:25","nodeType":"YulFunctionCall","src":"4136:31:25"},{"kind":"number","nativeSrc":"4169:1:25","nodeType":"YulLiteral","src":"4169:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4129:6:25","nodeType":"YulIdentifier","src":"4129:6:25"},"nativeSrc":"4129:42:25","nodeType":"YulFunctionCall","src":"4129:42:25"},"nativeSrc":"4129:42:25","nodeType":"YulExpressionStatement","src":"4129:42:25"},{"nativeSrc":"4180:62:25","nodeType":"YulAssignment","src":"4180:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4196:9:25","nodeType":"YulIdentifier","src":"4196:9:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4215:6:25","nodeType":"YulIdentifier","src":"4215:6:25"},{"kind":"number","nativeSrc":"4223:2:25","nodeType":"YulLiteral","src":"4223:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4211:3:25","nodeType":"YulIdentifier","src":"4211:3:25"},"nativeSrc":"4211:15:25","nodeType":"YulFunctionCall","src":"4211:15:25"},{"arguments":[{"kind":"number","nativeSrc":"4232:2:25","nodeType":"YulLiteral","src":"4232:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4228:3:25","nodeType":"YulIdentifier","src":"4228:3:25"},"nativeSrc":"4228:7:25","nodeType":"YulFunctionCall","src":"4228:7:25"}],"functionName":{"name":"and","nativeSrc":"4207:3:25","nodeType":"YulIdentifier","src":"4207:3:25"},"nativeSrc":"4207:29:25","nodeType":"YulFunctionCall","src":"4207:29:25"}],"functionName":{"name":"add","nativeSrc":"4192:3:25","nodeType":"YulIdentifier","src":"4192:3:25"},"nativeSrc":"4192:45:25","nodeType":"YulFunctionCall","src":"4192:45:25"},{"kind":"number","nativeSrc":"4239:2:25","nodeType":"YulLiteral","src":"4239:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4188:3:25","nodeType":"YulIdentifier","src":"4188:3:25"},"nativeSrc":"4188:54:25","nodeType":"YulFunctionCall","src":"4188:54:25"},"variableNames":[{"name":"tail","nativeSrc":"4180:4:25","nodeType":"YulIdentifier","src":"4180:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3700:548:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3790:9:25","nodeType":"YulTypedName","src":"3790:9:25","type":""},{"name":"value0","nativeSrc":"3801:6:25","nodeType":"YulTypedName","src":"3801:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3812:4:25","nodeType":"YulTypedName","src":"3812:4:25","type":""}],"src":"3700:548:25"},{"body":{"nativeSrc":"4347:203:25","nodeType":"YulBlock","src":"4347:203:25","statements":[{"nativeSrc":"4357:26:25","nodeType":"YulVariableDeclaration","src":"4357:26:25","value":{"arguments":[{"name":"array","nativeSrc":"4377:5:25","nodeType":"YulIdentifier","src":"4377:5:25"}],"functionName":{"name":"mload","nativeSrc":"4371:5:25","nodeType":"YulIdentifier","src":"4371:5:25"},"nativeSrc":"4371:12:25","nodeType":"YulFunctionCall","src":"4371:12:25"},"variables":[{"name":"length","nativeSrc":"4361:6:25","nodeType":"YulTypedName","src":"4361:6:25","type":""}]},{"nativeSrc":"4392:32:25","nodeType":"YulAssignment","src":"4392:32:25","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"4411:5:25","nodeType":"YulIdentifier","src":"4411:5:25"},{"kind":"number","nativeSrc":"4418:4:25","nodeType":"YulLiteral","src":"4418:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4407:3:25","nodeType":"YulIdentifier","src":"4407:3:25"},"nativeSrc":"4407:16:25","nodeType":"YulFunctionCall","src":"4407:16:25"}],"functionName":{"name":"mload","nativeSrc":"4401:5:25","nodeType":"YulIdentifier","src":"4401:5:25"},"nativeSrc":"4401:23:25","nodeType":"YulFunctionCall","src":"4401:23:25"},"variableNames":[{"name":"value","nativeSrc":"4392:5:25","nodeType":"YulIdentifier","src":"4392:5:25"}]},{"body":{"nativeSrc":"4461:83:25","nodeType":"YulBlock","src":"4461:83:25","statements":[{"nativeSrc":"4475:59:25","nodeType":"YulAssignment","src":"4475:59:25","value":{"arguments":[{"name":"value","nativeSrc":"4488:5:25","nodeType":"YulIdentifier","src":"4488:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4503:1:25","nodeType":"YulLiteral","src":"4503:1:25","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4510:4:25","nodeType":"YulLiteral","src":"4510:4:25","type":"","value":"0x20"},{"name":"length","nativeSrc":"4516:6:25","nodeType":"YulIdentifier","src":"4516:6:25"}],"functionName":{"name":"sub","nativeSrc":"4506:3:25","nodeType":"YulIdentifier","src":"4506:3:25"},"nativeSrc":"4506:17:25","nodeType":"YulFunctionCall","src":"4506:17:25"}],"functionName":{"name":"shl","nativeSrc":"4499:3:25","nodeType":"YulIdentifier","src":"4499:3:25"},"nativeSrc":"4499:25:25","nodeType":"YulFunctionCall","src":"4499:25:25"},{"arguments":[{"kind":"number","nativeSrc":"4530:1:25","nodeType":"YulLiteral","src":"4530:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4526:3:25","nodeType":"YulIdentifier","src":"4526:3:25"},"nativeSrc":"4526:6:25","nodeType":"YulFunctionCall","src":"4526:6:25"}],"functionName":{"name":"shl","nativeSrc":"4495:3:25","nodeType":"YulIdentifier","src":"4495:3:25"},"nativeSrc":"4495:38:25","nodeType":"YulFunctionCall","src":"4495:38:25"}],"functionName":{"name":"and","nativeSrc":"4484:3:25","nodeType":"YulIdentifier","src":"4484:3:25"},"nativeSrc":"4484:50:25","nodeType":"YulFunctionCall","src":"4484:50:25"},"variableNames":[{"name":"value","nativeSrc":"4475:5:25","nodeType":"YulIdentifier","src":"4475:5:25"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4439:6:25","nodeType":"YulIdentifier","src":"4439:6:25"},{"kind":"number","nativeSrc":"4447:4:25","nodeType":"YulLiteral","src":"4447:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4436:2:25","nodeType":"YulIdentifier","src":"4436:2:25"},"nativeSrc":"4436:16:25","nodeType":"YulFunctionCall","src":"4436:16:25"},"nativeSrc":"4433:111:25","nodeType":"YulIf","src":"4433:111:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"4253:297:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4327:5:25","nodeType":"YulTypedName","src":"4327:5:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4337:5:25","nodeType":"YulTypedName","src":"4337:5:25","type":""}],"src":"4253:297:25"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BEB CODESIZE SUB DUP1 PUSH3 0x1BEB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x48656C6978205374616B65642049435 PUSH1 0x84 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x48656C6978205374616B65642049435 PUSH1 0x84 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x68737449435 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xD2 SWAP2 SWAP1 PUSH3 0x412 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xE1 DUP3 DUP3 PUSH3 0x412 JUMP JUMPDEST POP PUSH3 0xF3 SWAP2 POP DUP4 SWAP1 POP PUSH1 0x6 PUSH3 0x1DF JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x104 DUP2 PUSH1 0x7 PUSH3 0x1DF JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x192 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x1A9 PUSH1 0x0 DUP4 PUSH3 0x218 JUMP JUMPDEST POP PUSH3 0x1D6 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x554 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1FF JUMPI PUSH3 0x1F7 DUP4 PUSH3 0x2CA JUMP JUMPDEST SWAP1 POP PUSH3 0x212 JUMP JUMPDEST DUP2 PUSH3 0x20C DUP5 DUP3 PUSH3 0x412 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x2C1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x278 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x212 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x212 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x301 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2F8 SWAP2 SWAP1 PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x30E DUP3 PUSH3 0x52F JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x352 DUP4 PUSH3 0x316 JUMP JUMPDEST SWAP2 POP PUSH3 0x362 PUSH1 0x20 DUP5 ADD PUSH3 0x316 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x396 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x40D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3E8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x409 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3F4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x42E JUMPI PUSH3 0x42E PUSH3 0x36B JUMP JUMPDEST PUSH3 0x446 DUP2 PUSH3 0x43F DUP5 SLOAD PUSH3 0x381 JUMP JUMPDEST DUP5 PUSH3 0x3BD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x47E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x465 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x409 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4AF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x48E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4CE JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x50E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x4F0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x3B7 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x163C PUSH3 0x5AF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xC6D ADD MSTORE PUSH1 0x0 PUSH2 0xC40 ADD MSTORE PUSH1 0x0 PUSH2 0xAF5 ADD MSTORE PUSH1 0x0 PUSH2 0xACD ADD MSTORE PUSH1 0x0 PUSH2 0xA28 ADD MSTORE PUSH1 0x0 PUSH2 0xA52 ADD MSTORE PUSH1 0x0 PUSH2 0xA7C ADD MSTORE PUSH2 0x163C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x1F1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x479 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x51F DUP2 DUP6 DUP6 PUSH2 0x865 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x537 DUP6 DUP3 DUP6 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x542 DUP6 DUP6 DUP6 PUSH2 0x904 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x568 DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x572 DUP4 DUP4 PUSH2 0x96D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D3 DUP3 DUP3 PUSH2 0xB46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x602 DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x616 CALLER DUP3 PUSH2 0xC03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x624 DUP3 CALLER DUP4 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x62E DUP3 DUP3 PUSH2 0xC03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x664 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x66C PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x51F DUP2 DUP6 DUP6 PUSH2 0x904 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x75E DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7B9 DUP3 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C9 DUP3 DUP8 DUP8 DUP8 PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x834 DUP11 DUP11 DUP11 PUSH2 0x865 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x85B DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x572 DUP4 DUP4 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x572 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x572 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 DUP4 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x616 DUP2 CALLER PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA13 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9CB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x479 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xA74 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA9E JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x582 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 DUP4 DUP4 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x62E DUP3 PUSH1 0x0 DUP4 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x582 PUSH32 0x0 PUSH1 0x6 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x582 PUSH32 0x0 PUSH1 0x7 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH2 0xCA0 PUSH2 0xA1B JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xCED DUP9 DUP9 DUP9 DUP9 PUSH2 0x106C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xCFD DUP3 DUP3 PUSH2 0x113B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x572 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE02 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE3B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xEC6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEE2 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF46 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xFDB JUMPI PUSH2 0xFD4 DUP4 PUSH2 0x123F JUMP JUMPDEST SWAP1 POP PUSH2 0x479 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xFE7 SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1013 SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1060 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1035 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1060 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1043 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x10A7 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1127 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x114F JUMPI PUSH2 0x114F PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x1158 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116C PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B7 PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x11F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1205 PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x124C DUP4 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x132E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1312 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1301 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1308 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1399 DUP4 PUSH2 0x1361 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C5 DUP5 PUSH2 0x1361 JUMP JUMPDEST SWAP3 POP PUSH2 0x13D3 PUSH1 0x20 DUP6 ADD PUSH2 0x1361 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x141F PUSH1 0x20 DUP5 ADD PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x1361 JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1480 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1308 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1492 DUP2 DUP11 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14CA JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151C DUP9 PUSH2 0x1361 JUMP JUMPDEST SWAP7 POP PUSH2 0x152A PUSH1 0x20 DUP10 ADD PUSH2 0x1361 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 DUP4 PUSH2 0x1361 JUMP JUMPDEST SWAP2 POP PUSH2 0x141F PUSH1 0x20 DUP5 ADD PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP5 RETURN SMOD PUSH11 0x821291307DDCE673A29F76 TIMESTAMP CALLER 0xCA 0x4E 0xC4 SWAP1 DUP9 SWAP5 DUP1 0x1E 0x4D 0x2E PUSH9 0xCED64D64736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"445:504:24:-:0;;;596:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:7;;;;;;;;;;;;;-1:-1:-1;;;1577:52:7;;;1616:4;3428:431:17;;;;;;;;;;;;;-1:-1:-1;;;3428:431:17;;;1582:113:4;;;;;;;;;;;;;-1:-1:-1;;;1582:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:4;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:4;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;3501:45:17;;-1:-1:-1;3501:4:17;;-1:-1:-1;3532:13:17;3501:30;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;3465:25:25;3506:18;;;3499:34;;;;3549:18;;;3542:34;4355:13:17;3592:18:25;;;3585:34;4378:4:17;3635:19:25;;;3628:61;4268:7:17;;3437:19:25;;4304:80:17;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:17;3825:27;;-1:-1:-1;744:44:24::2;2232:4:0;775:12:24::0;744:10:::2;:44::i;:::-;-1:-1:-1::0;798:31:24::2;565:24;822:6:::0;798:10:::2;:31::i;:::-;;596:240:::0;;445:504;;2887:340:13;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:13;;-1:-1:-1;3006:215:13;2887:340;;;;:::o;6179:316:0:-;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:10;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;1708:286:13;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:13;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:13:o;14:177:25:-;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:543::-;1239:2;1234:3;1231:11;1228:446;;;1275:1;1299:5;1296:1;1289:16;1343:4;1340:1;1330:18;1413:2;1401:10;1397:19;1394:1;1390:27;1384:4;1380:38;1449:4;1437:10;1434:20;1431:47;;;-1:-1:-1;1472:4:25;1431:47;1527:2;1522:3;1518:12;1515:1;1511:20;1505:4;1501:31;1491:41;;1582:82;1600:2;1593:5;1590:13;1582:82;;;1645:17;;;1626:1;1615:13;1582:82;;;1586:3;;;1228:446;1137:543;;;:::o;1856:1345::-;1976:10;;-1:-1:-1;;;;;1998:30:25;;1995:56;;;2031:18;;:::i;:::-;2060:97;2150:6;2110:38;2142:4;2136:11;2110:38;:::i;:::-;2104:4;2060:97;:::i;:::-;2212:4;;2269:2;2258:14;;2286:1;2281:663;;;;2988:1;3005:6;3002:89;;;-1:-1:-1;3057:19:25;;;3051:26;3002:89;-1:-1:-1;;1813:1:25;1809:11;;;1805:24;1801:29;1791:40;1837:1;1833:11;;;1788:57;3104:81;;2251:944;;2281:663;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2317:20:25;;;2435:236;2449:7;2446:1;2443:14;2435:236;;;2538:19;;;2532:26;2517:42;;2630:27;;;;2598:1;2586:14;;;;2465:19;;2435:236;;;2439:3;2699:6;2690:7;2687:19;2684:201;;;2760:19;;;2754:26;-1:-1:-1;;2843:1:25;2839:14;;;2855:3;2835:24;2831:37;2827:42;2812:58;2797:74;;2684:201;-1:-1:-1;;;;;2931:1:25;2915:14;;;2911:22;2898:36;;-1:-1:-1;1856:1345:25:o;3700:548::-;3812:4;3841:2;3870;3859:9;3852:21;3902:6;3896:13;3945:6;3940:2;3929:9;3925:18;3918:34;3970:1;3980:140;3994:6;3991:1;3988:13;3980:140;;;4089:14;;;4085:23;;4079:30;4055:17;;;4074:2;4051:26;4044:66;4009:10;;3980:140;;;3984:3;4169:1;4164:2;4155:6;4144:9;4140:22;4136:31;4129:42;4239:2;4232;4228:7;4223:2;4215:6;4211:15;4207:29;4196:9;4192:45;4188:54;4180:62;;;;3700:548;;;;:::o;4253:297::-;4371:12;;4418:4;4407:16;;;4401:23;;4371:12;4436:16;;4433:111;;;-1:-1:-1;;4510:4:25;4506:17;;;;4503:1;4499:25;4495:38;4484:50;;4253:297;-1:-1:-1;4253:297:25:o;:::-;445:504:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1332":{"entryPoint":1400,"id":1332,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_7538":{"entryPoint":null,"id":7538,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3850":{"entryPoint":3129,"id":3850,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3862":{"entryPoint":3174,"id":3862,"parameterSlots":0,"returnSlots":1},"@_approve_1006":{"entryPoint":3337,"id":1006,"parameterSlots":4,"returnSlots":0},"@_approve_946":{"entryPoint":2149,"id":946,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3780":{"entryPoint":null,"id":3780,"parameterSlots":0,"returnSlots":1},"@_burn_928":{"entryPoint":3075,"id":928,"parameterSlots":2,"returnSlots":0},"@_checkRole_114":{"entryPoint":3923,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2403,"id":93,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_3759":{"entryPoint":2587,"id":3759,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":2413,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3796":{"entryPoint":3219,"id":3796,"parameterSlots":1,"returnSlots":1},"@_mint_895":{"entryPoint":3021,"id":895,"parameterSlots":2,"returnSlots":0},"@_msgSender_1407":{"entryPoint":null,"id":1407,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":2886,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1054":{"entryPoint":2162,"id":1054,"parameterSlots":3,"returnSlots":0},"@_throwError_3635":{"entryPoint":4411,"id":3635,"parameterSlots":2,"returnSlots":0},"@_transfer_785":{"entryPoint":2308,"id":785,"parameterSlots":3,"returnSlots":0},"@_update_862":{"entryPoint":3600,"id":862,"parameterSlots":3,"returnSlots":0},"@_useNonce_1467":{"entryPoint":null,"id":1467,"parameterSlots":1,"returnSlots":1},"@allowance_682":{"entryPoint":null,"id":682,"parameterSlots":2,"returnSlots":1},"@approve_706":{"entryPoint":1297,"id":706,"parameterSlots":2,"returnSlots":1},"@balanceOf_641":{"entryPoint":null,"id":641,"parameterSlots":1,"returnSlots":1},"@burnFrom_1178":{"entryPoint":1561,"id":1178,"parameterSlots":2,"returnSlots":0},"@burn_1157":{"entryPoint":1548,"id":1157,"parameterSlots":1,"returnSlots":0},"@byteLength_1663":{"entryPoint":4734,"id":1663,"parameterSlots":1,"returnSlots":1},"@decimals_619":{"entryPoint":null,"id":619,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3838":{"entryPoint":1616,"id":3838,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1357,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"@mint_7579":{"entryPoint":1496,"id":7579,"parameterSlots":2,"returnSlots":0},"@name_601":{"entryPoint":1151,"id":601,"parameterSlots":0,"returnSlots":1},"@nonces_1322":{"entryPoint":1586,"id":1322,"parameterSlots":1,"returnSlots":1},"@nonces_1452":{"entryPoint":null,"id":1452,"parameterSlots":1,"returnSlots":1},"@permit_1305":{"entryPoint":1743,"id":1305,"parameterSlots":7,"returnSlots":0},"@recover_3586":{"entryPoint":3291,"id":3586,"parameterSlots":4,"returnSlots":1},"@renounceRole_189":{"entryPoint":1415,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":2112,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_3972":{"entryPoint":null,"id":3972,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":998,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_610":{"entryPoint":1714,"id":610,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1730":{"entryPoint":4033,"id":1730,"parameterSlots":2,"returnSlots":1},"@toString_1631":{"entryPoint":4671,"id":1631,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3948":{"entryPoint":null,"id":3948,"parameterSlots":2,"returnSlots":1},"@totalSupply_628":{"entryPoint":null,"id":628,"parameterSlots":0,"returnSlots":1},"@transferFrom_738":{"entryPoint":1321,"id":738,"parameterSlots":3,"returnSlots":1},"@transfer_665":{"entryPoint":1729,"id":665,"parameterSlots":2,"returnSlots":1},"@tryRecover_3550":{"entryPoint":4204,"id":3550,"parameterSlots":4,"returnSlots":3},"abi_decode_address":{"entryPoint":4961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5483,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5031,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":5368,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4989,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5116,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5187,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5583,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5525,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":5616,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9543:25","nodeType":"YulBlock","src":"0:9543:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"83:263:25","nodeType":"YulBlock","src":"83:263:25","statements":[{"body":{"nativeSrc":"129:16:25","nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:25","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:25","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:25","nodeType":"YulIdentifier","src":"131:6:25"},"nativeSrc":"131:12:25","nodeType":"YulFunctionCall","src":"131:12:25"},"nativeSrc":"131:12:25","nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:25","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nativeSrc":"113:9:25","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nativeSrc":"100:3:25","nodeType":"YulIdentifier","src":"100:3:25"},"nativeSrc":"100:23:25","nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nativeSrc":"125:2:25","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:25","nodeType":"YulIdentifier","src":"96:3:25"},"nativeSrc":"96:32:25","nodeType":"YulFunctionCall","src":"96:32:25"},"nativeSrc":"93:52:25","nodeType":"YulIf","src":"93:52:25"},{"nativeSrc":"154:36:25","nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:25","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:25","nodeType":"YulIdentifier","src":"167:12:25"},"nativeSrc":"167:23:25","nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nativeSrc":"158:5:25","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nativeSrc":"300:16:25","nodeType":"YulBlock","src":"300:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"309:1:25","nodeType":"YulLiteral","src":"309:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"312:1:25","nodeType":"YulLiteral","src":"312:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"302:6:25","nodeType":"YulIdentifier","src":"302:6:25"},"nativeSrc":"302:12:25","nodeType":"YulFunctionCall","src":"302:12:25"},"nativeSrc":"302:12:25","nodeType":"YulExpressionStatement","src":"302:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:25","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nativeSrc":"223:5:25","nodeType":"YulIdentifier","src":"223:5:25"},{"kind":"number","nativeSrc":"230:66:25","nodeType":"YulLiteral","src":"230:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"219:3:25","nodeType":"YulIdentifier","src":"219:3:25"},"nativeSrc":"219:78:25","nodeType":"YulFunctionCall","src":"219:78:25"}],"functionName":{"name":"eq","nativeSrc":"209:2:25","nodeType":"YulIdentifier","src":"209:2:25"},"nativeSrc":"209:89:25","nodeType":"YulFunctionCall","src":"209:89:25"}],"functionName":{"name":"iszero","nativeSrc":"202:6:25","nodeType":"YulIdentifier","src":"202:6:25"},"nativeSrc":"202:97:25","nodeType":"YulFunctionCall","src":"202:97:25"},"nativeSrc":"199:117:25","nodeType":"YulIf","src":"199:117:25"},{"nativeSrc":"325:15:25","nodeType":"YulAssignment","src":"325:15:25","value":{"name":"value","nativeSrc":"335:5:25","nodeType":"YulIdentifier","src":"335:5:25"},"variableNames":[{"name":"value0","nativeSrc":"325:6:25","nodeType":"YulIdentifier","src":"325:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:332:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:25","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nativeSrc":"60:7:25","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:25","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:332:25"},{"body":{"nativeSrc":"446:92:25","nodeType":"YulBlock","src":"446:92:25","statements":[{"nativeSrc":"456:26:25","nodeType":"YulAssignment","src":"456:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"468:9:25","nodeType":"YulIdentifier","src":"468:9:25"},{"kind":"number","nativeSrc":"479:2:25","nodeType":"YulLiteral","src":"479:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:25","nodeType":"YulIdentifier","src":"464:3:25"},"nativeSrc":"464:18:25","nodeType":"YulFunctionCall","src":"464:18:25"},"variableNames":[{"name":"tail","nativeSrc":"456:4:25","nodeType":"YulIdentifier","src":"456:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"498:9:25","nodeType":"YulIdentifier","src":"498:9:25"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"523:6:25","nodeType":"YulIdentifier","src":"523:6:25"}],"functionName":{"name":"iszero","nativeSrc":"516:6:25","nodeType":"YulIdentifier","src":"516:6:25"},"nativeSrc":"516:14:25","nodeType":"YulFunctionCall","src":"516:14:25"}],"functionName":{"name":"iszero","nativeSrc":"509:6:25","nodeType":"YulIdentifier","src":"509:6:25"},"nativeSrc":"509:22:25","nodeType":"YulFunctionCall","src":"509:22:25"}],"functionName":{"name":"mstore","nativeSrc":"491:6:25","nodeType":"YulIdentifier","src":"491:6:25"},"nativeSrc":"491:41:25","nodeType":"YulFunctionCall","src":"491:41:25"},"nativeSrc":"491:41:25","nodeType":"YulExpressionStatement","src":"491:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"351:187:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"415:9:25","nodeType":"YulTypedName","src":"415:9:25","type":""},{"name":"value0","nativeSrc":"426:6:25","nodeType":"YulTypedName","src":"426:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"437:4:25","nodeType":"YulTypedName","src":"437:4:25","type":""}],"src":"351:187:25"},{"body":{"nativeSrc":"593:373:25","nodeType":"YulBlock","src":"593:373:25","statements":[{"nativeSrc":"603:26:25","nodeType":"YulVariableDeclaration","src":"603:26:25","value":{"arguments":[{"name":"value","nativeSrc":"623:5:25","nodeType":"YulIdentifier","src":"623:5:25"}],"functionName":{"name":"mload","nativeSrc":"617:5:25","nodeType":"YulIdentifier","src":"617:5:25"},"nativeSrc":"617:12:25","nodeType":"YulFunctionCall","src":"617:12:25"},"variables":[{"name":"length","nativeSrc":"607:6:25","nodeType":"YulTypedName","src":"607:6:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"645:3:25","nodeType":"YulIdentifier","src":"645:3:25"},{"name":"length","nativeSrc":"650:6:25","nodeType":"YulIdentifier","src":"650:6:25"}],"functionName":{"name":"mstore","nativeSrc":"638:6:25","nodeType":"YulIdentifier","src":"638:6:25"},"nativeSrc":"638:19:25","nodeType":"YulFunctionCall","src":"638:19:25"},"nativeSrc":"638:19:25","nodeType":"YulExpressionStatement","src":"638:19:25"},{"nativeSrc":"666:10:25","nodeType":"YulVariableDeclaration","src":"666:10:25","value":{"kind":"number","nativeSrc":"675:1:25","nodeType":"YulLiteral","src":"675:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"670:1:25","nodeType":"YulTypedName","src":"670:1:25","type":""}]},{"body":{"nativeSrc":"737:110:25","nodeType":"YulBlock","src":"737:110:25","statements":[{"nativeSrc":"751:14:25","nodeType":"YulVariableDeclaration","src":"751:14:25","value":{"kind":"number","nativeSrc":"761:4:25","nodeType":"YulLiteral","src":"761:4:25","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"755:2:25","nodeType":"YulTypedName","src":"755:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"793:3:25","nodeType":"YulIdentifier","src":"793:3:25"},{"name":"i","nativeSrc":"798:1:25","nodeType":"YulIdentifier","src":"798:1:25"}],"functionName":{"name":"add","nativeSrc":"789:3:25","nodeType":"YulIdentifier","src":"789:3:25"},"nativeSrc":"789:11:25","nodeType":"YulFunctionCall","src":"789:11:25"},{"name":"_1","nativeSrc":"802:2:25","nodeType":"YulIdentifier","src":"802:2:25"}],"functionName":{"name":"add","nativeSrc":"785:3:25","nodeType":"YulIdentifier","src":"785:3:25"},"nativeSrc":"785:20:25","nodeType":"YulFunctionCall","src":"785:20:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"821:5:25","nodeType":"YulIdentifier","src":"821:5:25"},{"name":"i","nativeSrc":"828:1:25","nodeType":"YulIdentifier","src":"828:1:25"}],"functionName":{"name":"add","nativeSrc":"817:3:25","nodeType":"YulIdentifier","src":"817:3:25"},"nativeSrc":"817:13:25","nodeType":"YulFunctionCall","src":"817:13:25"},{"name":"_1","nativeSrc":"832:2:25","nodeType":"YulIdentifier","src":"832:2:25"}],"functionName":{"name":"add","nativeSrc":"813:3:25","nodeType":"YulIdentifier","src":"813:3:25"},"nativeSrc":"813:22:25","nodeType":"YulFunctionCall","src":"813:22:25"}],"functionName":{"name":"mload","nativeSrc":"807:5:25","nodeType":"YulIdentifier","src":"807:5:25"},"nativeSrc":"807:29:25","nodeType":"YulFunctionCall","src":"807:29:25"}],"functionName":{"name":"mstore","nativeSrc":"778:6:25","nodeType":"YulIdentifier","src":"778:6:25"},"nativeSrc":"778:59:25","nodeType":"YulFunctionCall","src":"778:59:25"},"nativeSrc":"778:59:25","nodeType":"YulExpressionStatement","src":"778:59:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"696:1:25","nodeType":"YulIdentifier","src":"696:1:25"},{"name":"length","nativeSrc":"699:6:25","nodeType":"YulIdentifier","src":"699:6:25"}],"functionName":{"name":"lt","nativeSrc":"693:2:25","nodeType":"YulIdentifier","src":"693:2:25"},"nativeSrc":"693:13:25","nodeType":"YulFunctionCall","src":"693:13:25"},"nativeSrc":"685:162:25","nodeType":"YulForLoop","post":{"nativeSrc":"707:21:25","nodeType":"YulBlock","src":"707:21:25","statements":[{"nativeSrc":"709:17:25","nodeType":"YulAssignment","src":"709:17:25","value":{"arguments":[{"name":"i","nativeSrc":"718:1:25","nodeType":"YulIdentifier","src":"718:1:25"},{"kind":"number","nativeSrc":"721:4:25","nodeType":"YulLiteral","src":"721:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"714:3:25","nodeType":"YulIdentifier","src":"714:3:25"},"nativeSrc":"714:12:25","nodeType":"YulFunctionCall","src":"714:12:25"},"variableNames":[{"name":"i","nativeSrc":"709:1:25","nodeType":"YulIdentifier","src":"709:1:25"}]}]},"pre":{"nativeSrc":"689:3:25","nodeType":"YulBlock","src":"689:3:25","statements":[]},"src":"685:162:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"871:3:25","nodeType":"YulIdentifier","src":"871:3:25"},{"name":"length","nativeSrc":"876:6:25","nodeType":"YulIdentifier","src":"876:6:25"}],"functionName":{"name":"add","nativeSrc":"867:3:25","nodeType":"YulIdentifier","src":"867:3:25"},"nativeSrc":"867:16:25","nodeType":"YulFunctionCall","src":"867:16:25"},{"kind":"number","nativeSrc":"885:4:25","nodeType":"YulLiteral","src":"885:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"863:3:25","nodeType":"YulIdentifier","src":"863:3:25"},"nativeSrc":"863:27:25","nodeType":"YulFunctionCall","src":"863:27:25"},{"kind":"number","nativeSrc":"892:1:25","nodeType":"YulLiteral","src":"892:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"856:6:25","nodeType":"YulIdentifier","src":"856:6:25"},"nativeSrc":"856:38:25","nodeType":"YulFunctionCall","src":"856:38:25"},"nativeSrc":"856:38:25","nodeType":"YulExpressionStatement","src":"856:38:25"},{"nativeSrc":"903:57:25","nodeType":"YulAssignment","src":"903:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"918:3:25","nodeType":"YulIdentifier","src":"918:3:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"931:6:25","nodeType":"YulIdentifier","src":"931:6:25"},{"kind":"number","nativeSrc":"939:2:25","nodeType":"YulLiteral","src":"939:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"927:3:25","nodeType":"YulIdentifier","src":"927:3:25"},"nativeSrc":"927:15:25","nodeType":"YulFunctionCall","src":"927:15:25"},{"arguments":[{"kind":"number","nativeSrc":"948:2:25","nodeType":"YulLiteral","src":"948:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"944:3:25","nodeType":"YulIdentifier","src":"944:3:25"},"nativeSrc":"944:7:25","nodeType":"YulFunctionCall","src":"944:7:25"}],"functionName":{"name":"and","nativeSrc":"923:3:25","nodeType":"YulIdentifier","src":"923:3:25"},"nativeSrc":"923:29:25","nodeType":"YulFunctionCall","src":"923:29:25"}],"functionName":{"name":"add","nativeSrc":"914:3:25","nodeType":"YulIdentifier","src":"914:3:25"},"nativeSrc":"914:39:25","nodeType":"YulFunctionCall","src":"914:39:25"},{"kind":"number","nativeSrc":"955:4:25","nodeType":"YulLiteral","src":"955:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"910:3:25","nodeType":"YulIdentifier","src":"910:3:25"},"nativeSrc":"910:50:25","nodeType":"YulFunctionCall","src":"910:50:25"},"variableNames":[{"name":"end","nativeSrc":"903:3:25","nodeType":"YulIdentifier","src":"903:3:25"}]}]},"name":"abi_encode_string","nativeSrc":"543:423:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:25","nodeType":"YulTypedName","src":"570:5:25","type":""},{"name":"pos","nativeSrc":"577:3:25","nodeType":"YulTypedName","src":"577:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"585:3:25","nodeType":"YulTypedName","src":"585:3:25","type":""}],"src":"543:423:25"},{"body":{"nativeSrc":"1092:99:25","nodeType":"YulBlock","src":"1092:99:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1109:9:25","nodeType":"YulIdentifier","src":"1109:9:25"},{"kind":"number","nativeSrc":"1120:2:25","nodeType":"YulLiteral","src":"1120:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1102:6:25","nodeType":"YulIdentifier","src":"1102:6:25"},"nativeSrc":"1102:21:25","nodeType":"YulFunctionCall","src":"1102:21:25"},"nativeSrc":"1102:21:25","nodeType":"YulExpressionStatement","src":"1102:21:25"},{"nativeSrc":"1132:53:25","nodeType":"YulAssignment","src":"1132:53:25","value":{"arguments":[{"name":"value0","nativeSrc":"1158:6:25","nodeType":"YulIdentifier","src":"1158:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"1170:9:25","nodeType":"YulIdentifier","src":"1170:9:25"},{"kind":"number","nativeSrc":"1181:2:25","nodeType":"YulLiteral","src":"1181:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:25","nodeType":"YulIdentifier","src":"1166:3:25"},"nativeSrc":"1166:18:25","nodeType":"YulFunctionCall","src":"1166:18:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1140:17:25","nodeType":"YulIdentifier","src":"1140:17:25"},"nativeSrc":"1140:45:25","nodeType":"YulFunctionCall","src":"1140:45:25"},"variableNames":[{"name":"tail","nativeSrc":"1132:4:25","nodeType":"YulIdentifier","src":"1132:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"971:220:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1061:9:25","nodeType":"YulTypedName","src":"1061:9:25","type":""},{"name":"value0","nativeSrc":"1072:6:25","nodeType":"YulTypedName","src":"1072:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1083:4:25","nodeType":"YulTypedName","src":"1083:4:25","type":""}],"src":"971:220:25"},{"body":{"nativeSrc":"1245:147:25","nodeType":"YulBlock","src":"1245:147:25","statements":[{"nativeSrc":"1255:29:25","nodeType":"YulAssignment","src":"1255:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1277:6:25","nodeType":"YulIdentifier","src":"1277:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1264:12:25","nodeType":"YulIdentifier","src":"1264:12:25"},"nativeSrc":"1264:20:25","nodeType":"YulFunctionCall","src":"1264:20:25"},"variableNames":[{"name":"value","nativeSrc":"1255:5:25","nodeType":"YulIdentifier","src":"1255:5:25"}]},{"body":{"nativeSrc":"1370:16:25","nodeType":"YulBlock","src":"1370:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1379:1:25","nodeType":"YulLiteral","src":"1379:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1382:1:25","nodeType":"YulLiteral","src":"1382:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1372:6:25","nodeType":"YulIdentifier","src":"1372:6:25"},"nativeSrc":"1372:12:25","nodeType":"YulFunctionCall","src":"1372:12:25"},"nativeSrc":"1372:12:25","nodeType":"YulExpressionStatement","src":"1372:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1306:5:25","nodeType":"YulIdentifier","src":"1306:5:25"},{"arguments":[{"name":"value","nativeSrc":"1317:5:25","nodeType":"YulIdentifier","src":"1317:5:25"},{"kind":"number","nativeSrc":"1324:42:25","nodeType":"YulLiteral","src":"1324:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1313:3:25","nodeType":"YulIdentifier","src":"1313:3:25"},"nativeSrc":"1313:54:25","nodeType":"YulFunctionCall","src":"1313:54:25"}],"functionName":{"name":"eq","nativeSrc":"1303:2:25","nodeType":"YulIdentifier","src":"1303:2:25"},"nativeSrc":"1303:65:25","nodeType":"YulFunctionCall","src":"1303:65:25"}],"functionName":{"name":"iszero","nativeSrc":"1296:6:25","nodeType":"YulIdentifier","src":"1296:6:25"},"nativeSrc":"1296:73:25","nodeType":"YulFunctionCall","src":"1296:73:25"},"nativeSrc":"1293:93:25","nodeType":"YulIf","src":"1293:93:25"}]},"name":"abi_decode_address","nativeSrc":"1196:196:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1224:6:25","nodeType":"YulTypedName","src":"1224:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1235:5:25","nodeType":"YulTypedName","src":"1235:5:25","type":""}],"src":"1196:196:25"},{"body":{"nativeSrc":"1484:167:25","nodeType":"YulBlock","src":"1484:167:25","statements":[{"body":{"nativeSrc":"1530:16:25","nodeType":"YulBlock","src":"1530:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1539:1:25","nodeType":"YulLiteral","src":"1539:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1542:1:25","nodeType":"YulLiteral","src":"1542:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1532:6:25","nodeType":"YulIdentifier","src":"1532:6:25"},"nativeSrc":"1532:12:25","nodeType":"YulFunctionCall","src":"1532:12:25"},"nativeSrc":"1532:12:25","nodeType":"YulExpressionStatement","src":"1532:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1505:7:25","nodeType":"YulIdentifier","src":"1505:7:25"},{"name":"headStart","nativeSrc":"1514:9:25","nodeType":"YulIdentifier","src":"1514:9:25"}],"functionName":{"name":"sub","nativeSrc":"1501:3:25","nodeType":"YulIdentifier","src":"1501:3:25"},"nativeSrc":"1501:23:25","nodeType":"YulFunctionCall","src":"1501:23:25"},{"kind":"number","nativeSrc":"1526:2:25","nodeType":"YulLiteral","src":"1526:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1497:3:25","nodeType":"YulIdentifier","src":"1497:3:25"},"nativeSrc":"1497:32:25","nodeType":"YulFunctionCall","src":"1497:32:25"},"nativeSrc":"1494:52:25","nodeType":"YulIf","src":"1494:52:25"},{"nativeSrc":"1555:39:25","nodeType":"YulAssignment","src":"1555:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1584:9:25","nodeType":"YulIdentifier","src":"1584:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1565:18:25","nodeType":"YulIdentifier","src":"1565:18:25"},"nativeSrc":"1565:29:25","nodeType":"YulFunctionCall","src":"1565:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1555:6:25","nodeType":"YulIdentifier","src":"1555:6:25"}]},{"nativeSrc":"1603:42:25","nodeType":"YulAssignment","src":"1603:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1630:9:25","nodeType":"YulIdentifier","src":"1630:9:25"},{"kind":"number","nativeSrc":"1641:2:25","nodeType":"YulLiteral","src":"1641:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1626:3:25","nodeType":"YulIdentifier","src":"1626:3:25"},"nativeSrc":"1626:18:25","nodeType":"YulFunctionCall","src":"1626:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"1613:12:25","nodeType":"YulIdentifier","src":"1613:12:25"},"nativeSrc":"1613:32:25","nodeType":"YulFunctionCall","src":"1613:32:25"},"variableNames":[{"name":"value1","nativeSrc":"1603:6:25","nodeType":"YulIdentifier","src":"1603:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1397:254:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1442:9:25","nodeType":"YulTypedName","src":"1442:9:25","type":""},{"name":"dataEnd","nativeSrc":"1453:7:25","nodeType":"YulTypedName","src":"1453:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1465:6:25","nodeType":"YulTypedName","src":"1465:6:25","type":""},{"name":"value1","nativeSrc":"1473:6:25","nodeType":"YulTypedName","src":"1473:6:25","type":""}],"src":"1397:254:25"},{"body":{"nativeSrc":"1757:76:25","nodeType":"YulBlock","src":"1757:76:25","statements":[{"nativeSrc":"1767:26:25","nodeType":"YulAssignment","src":"1767:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1779:9:25","nodeType":"YulIdentifier","src":"1779:9:25"},{"kind":"number","nativeSrc":"1790:2:25","nodeType":"YulLiteral","src":"1790:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1775:3:25","nodeType":"YulIdentifier","src":"1775:3:25"},"nativeSrc":"1775:18:25","nodeType":"YulFunctionCall","src":"1775:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1767:4:25","nodeType":"YulIdentifier","src":"1767:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1809:9:25","nodeType":"YulIdentifier","src":"1809:9:25"},{"name":"value0","nativeSrc":"1820:6:25","nodeType":"YulIdentifier","src":"1820:6:25"}],"functionName":{"name":"mstore","nativeSrc":"1802:6:25","nodeType":"YulIdentifier","src":"1802:6:25"},"nativeSrc":"1802:25:25","nodeType":"YulFunctionCall","src":"1802:25:25"},"nativeSrc":"1802:25:25","nodeType":"YulExpressionStatement","src":"1802:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1656:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1726:9:25","nodeType":"YulTypedName","src":"1726:9:25","type":""},{"name":"value0","nativeSrc":"1737:6:25","nodeType":"YulTypedName","src":"1737:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1748:4:25","nodeType":"YulTypedName","src":"1748:4:25","type":""}],"src":"1656:177:25"},{"body":{"nativeSrc":"1942:224:25","nodeType":"YulBlock","src":"1942:224:25","statements":[{"body":{"nativeSrc":"1988:16:25","nodeType":"YulBlock","src":"1988:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1997:1:25","nodeType":"YulLiteral","src":"1997:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2000:1:25","nodeType":"YulLiteral","src":"2000:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1990:6:25","nodeType":"YulIdentifier","src":"1990:6:25"},"nativeSrc":"1990:12:25","nodeType":"YulFunctionCall","src":"1990:12:25"},"nativeSrc":"1990:12:25","nodeType":"YulExpressionStatement","src":"1990:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1963:7:25","nodeType":"YulIdentifier","src":"1963:7:25"},{"name":"headStart","nativeSrc":"1972:9:25","nodeType":"YulIdentifier","src":"1972:9:25"}],"functionName":{"name":"sub","nativeSrc":"1959:3:25","nodeType":"YulIdentifier","src":"1959:3:25"},"nativeSrc":"1959:23:25","nodeType":"YulFunctionCall","src":"1959:23:25"},{"kind":"number","nativeSrc":"1984:2:25","nodeType":"YulLiteral","src":"1984:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1955:3:25","nodeType":"YulIdentifier","src":"1955:3:25"},"nativeSrc":"1955:32:25","nodeType":"YulFunctionCall","src":"1955:32:25"},"nativeSrc":"1952:52:25","nodeType":"YulIf","src":"1952:52:25"},{"nativeSrc":"2013:39:25","nodeType":"YulAssignment","src":"2013:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2042:9:25","nodeType":"YulIdentifier","src":"2042:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2023:18:25","nodeType":"YulIdentifier","src":"2023:18:25"},"nativeSrc":"2023:29:25","nodeType":"YulFunctionCall","src":"2023:29:25"},"variableNames":[{"name":"value0","nativeSrc":"2013:6:25","nodeType":"YulIdentifier","src":"2013:6:25"}]},{"nativeSrc":"2061:48:25","nodeType":"YulAssignment","src":"2061:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2094:9:25","nodeType":"YulIdentifier","src":"2094:9:25"},{"kind":"number","nativeSrc":"2105:2:25","nodeType":"YulLiteral","src":"2105:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2090:3:25","nodeType":"YulIdentifier","src":"2090:3:25"},"nativeSrc":"2090:18:25","nodeType":"YulFunctionCall","src":"2090:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2071:18:25","nodeType":"YulIdentifier","src":"2071:18:25"},"nativeSrc":"2071:38:25","nodeType":"YulFunctionCall","src":"2071:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2061:6:25","nodeType":"YulIdentifier","src":"2061:6:25"}]},{"nativeSrc":"2118:42:25","nodeType":"YulAssignment","src":"2118:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2145:9:25","nodeType":"YulIdentifier","src":"2145:9:25"},{"kind":"number","nativeSrc":"2156:2:25","nodeType":"YulLiteral","src":"2156:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2141:3:25","nodeType":"YulIdentifier","src":"2141:3:25"},"nativeSrc":"2141:18:25","nodeType":"YulFunctionCall","src":"2141:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2128:12:25","nodeType":"YulIdentifier","src":"2128:12:25"},"nativeSrc":"2128:32:25","nodeType":"YulFunctionCall","src":"2128:32:25"},"variableNames":[{"name":"value2","nativeSrc":"2118:6:25","nodeType":"YulIdentifier","src":"2118:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1838:328:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1892:9:25","nodeType":"YulTypedName","src":"1892:9:25","type":""},{"name":"dataEnd","nativeSrc":"1903:7:25","nodeType":"YulTypedName","src":"1903:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1915:6:25","nodeType":"YulTypedName","src":"1915:6:25","type":""},{"name":"value1","nativeSrc":"1923:6:25","nodeType":"YulTypedName","src":"1923:6:25","type":""},{"name":"value2","nativeSrc":"1931:6:25","nodeType":"YulTypedName","src":"1931:6:25","type":""}],"src":"1838:328:25"},{"body":{"nativeSrc":"2241:110:25","nodeType":"YulBlock","src":"2241:110:25","statements":[{"body":{"nativeSrc":"2287:16:25","nodeType":"YulBlock","src":"2287:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2296:1:25","nodeType":"YulLiteral","src":"2296:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2299:1:25","nodeType":"YulLiteral","src":"2299:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2289:6:25","nodeType":"YulIdentifier","src":"2289:6:25"},"nativeSrc":"2289:12:25","nodeType":"YulFunctionCall","src":"2289:12:25"},"nativeSrc":"2289:12:25","nodeType":"YulExpressionStatement","src":"2289:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2262:7:25","nodeType":"YulIdentifier","src":"2262:7:25"},{"name":"headStart","nativeSrc":"2271:9:25","nodeType":"YulIdentifier","src":"2271:9:25"}],"functionName":{"name":"sub","nativeSrc":"2258:3:25","nodeType":"YulIdentifier","src":"2258:3:25"},"nativeSrc":"2258:23:25","nodeType":"YulFunctionCall","src":"2258:23:25"},{"kind":"number","nativeSrc":"2283:2:25","nodeType":"YulLiteral","src":"2283:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2254:3:25","nodeType":"YulIdentifier","src":"2254:3:25"},"nativeSrc":"2254:32:25","nodeType":"YulFunctionCall","src":"2254:32:25"},"nativeSrc":"2251:52:25","nodeType":"YulIf","src":"2251:52:25"},{"nativeSrc":"2312:33:25","nodeType":"YulAssignment","src":"2312:33:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2335:9:25","nodeType":"YulIdentifier","src":"2335:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2322:12:25","nodeType":"YulIdentifier","src":"2322:12:25"},"nativeSrc":"2322:23:25","nodeType":"YulFunctionCall","src":"2322:23:25"},"variableNames":[{"name":"value0","nativeSrc":"2312:6:25","nodeType":"YulIdentifier","src":"2312:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2171:180:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2207:9:25","nodeType":"YulTypedName","src":"2207:9:25","type":""},{"name":"dataEnd","nativeSrc":"2218:7:25","nodeType":"YulTypedName","src":"2218:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2230:6:25","nodeType":"YulTypedName","src":"2230:6:25","type":""}],"src":"2171:180:25"},{"body":{"nativeSrc":"2457:76:25","nodeType":"YulBlock","src":"2457:76:25","statements":[{"nativeSrc":"2467:26:25","nodeType":"YulAssignment","src":"2467:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2479:9:25","nodeType":"YulIdentifier","src":"2479:9:25"},{"kind":"number","nativeSrc":"2490:2:25","nodeType":"YulLiteral","src":"2490:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2475:3:25","nodeType":"YulIdentifier","src":"2475:3:25"},"nativeSrc":"2475:18:25","nodeType":"YulFunctionCall","src":"2475:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2467:4:25","nodeType":"YulIdentifier","src":"2467:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2509:9:25","nodeType":"YulIdentifier","src":"2509:9:25"},{"name":"value0","nativeSrc":"2520:6:25","nodeType":"YulIdentifier","src":"2520:6:25"}],"functionName":{"name":"mstore","nativeSrc":"2502:6:25","nodeType":"YulIdentifier","src":"2502:6:25"},"nativeSrc":"2502:25:25","nodeType":"YulFunctionCall","src":"2502:25:25"},"nativeSrc":"2502:25:25","nodeType":"YulExpressionStatement","src":"2502:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2356:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2426:9:25","nodeType":"YulTypedName","src":"2426:9:25","type":""},{"name":"value0","nativeSrc":"2437:6:25","nodeType":"YulTypedName","src":"2437:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2448:4:25","nodeType":"YulTypedName","src":"2448:4:25","type":""}],"src":"2356:177:25"},{"body":{"nativeSrc":"2625:167:25","nodeType":"YulBlock","src":"2625:167:25","statements":[{"body":{"nativeSrc":"2671:16:25","nodeType":"YulBlock","src":"2671:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2680:1:25","nodeType":"YulLiteral","src":"2680:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2683:1:25","nodeType":"YulLiteral","src":"2683:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2673:6:25","nodeType":"YulIdentifier","src":"2673:6:25"},"nativeSrc":"2673:12:25","nodeType":"YulFunctionCall","src":"2673:12:25"},"nativeSrc":"2673:12:25","nodeType":"YulExpressionStatement","src":"2673:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2646:7:25","nodeType":"YulIdentifier","src":"2646:7:25"},{"name":"headStart","nativeSrc":"2655:9:25","nodeType":"YulIdentifier","src":"2655:9:25"}],"functionName":{"name":"sub","nativeSrc":"2642:3:25","nodeType":"YulIdentifier","src":"2642:3:25"},"nativeSrc":"2642:23:25","nodeType":"YulFunctionCall","src":"2642:23:25"},{"kind":"number","nativeSrc":"2667:2:25","nodeType":"YulLiteral","src":"2667:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2638:3:25","nodeType":"YulIdentifier","src":"2638:3:25"},"nativeSrc":"2638:32:25","nodeType":"YulFunctionCall","src":"2638:32:25"},"nativeSrc":"2635:52:25","nodeType":"YulIf","src":"2635:52:25"},{"nativeSrc":"2696:33:25","nodeType":"YulAssignment","src":"2696:33:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2719:9:25","nodeType":"YulIdentifier","src":"2719:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2706:12:25","nodeType":"YulIdentifier","src":"2706:12:25"},"nativeSrc":"2706:23:25","nodeType":"YulFunctionCall","src":"2706:23:25"},"variableNames":[{"name":"value0","nativeSrc":"2696:6:25","nodeType":"YulIdentifier","src":"2696:6:25"}]},{"nativeSrc":"2738:48:25","nodeType":"YulAssignment","src":"2738:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2771:9:25","nodeType":"YulIdentifier","src":"2771:9:25"},{"kind":"number","nativeSrc":"2782:2:25","nodeType":"YulLiteral","src":"2782:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2767:3:25","nodeType":"YulIdentifier","src":"2767:3:25"},"nativeSrc":"2767:18:25","nodeType":"YulFunctionCall","src":"2767:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2748:18:25","nodeType":"YulIdentifier","src":"2748:18:25"},"nativeSrc":"2748:38:25","nodeType":"YulFunctionCall","src":"2748:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2738:6:25","nodeType":"YulIdentifier","src":"2738:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2538:254:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2583:9:25","nodeType":"YulTypedName","src":"2583:9:25","type":""},{"name":"dataEnd","nativeSrc":"2594:7:25","nodeType":"YulTypedName","src":"2594:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2606:6:25","nodeType":"YulTypedName","src":"2606:6:25","type":""},{"name":"value1","nativeSrc":"2614:6:25","nodeType":"YulTypedName","src":"2614:6:25","type":""}],"src":"2538:254:25"},{"body":{"nativeSrc":"2894:87:25","nodeType":"YulBlock","src":"2894:87:25","statements":[{"nativeSrc":"2904:26:25","nodeType":"YulAssignment","src":"2904:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2916:9:25","nodeType":"YulIdentifier","src":"2916:9:25"},{"kind":"number","nativeSrc":"2927:2:25","nodeType":"YulLiteral","src":"2927:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2912:3:25","nodeType":"YulIdentifier","src":"2912:3:25"},"nativeSrc":"2912:18:25","nodeType":"YulFunctionCall","src":"2912:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2904:4:25","nodeType":"YulIdentifier","src":"2904:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2946:9:25","nodeType":"YulIdentifier","src":"2946:9:25"},{"arguments":[{"name":"value0","nativeSrc":"2961:6:25","nodeType":"YulIdentifier","src":"2961:6:25"},{"kind":"number","nativeSrc":"2969:4:25","nodeType":"YulLiteral","src":"2969:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2957:3:25","nodeType":"YulIdentifier","src":"2957:3:25"},"nativeSrc":"2957:17:25","nodeType":"YulFunctionCall","src":"2957:17:25"}],"functionName":{"name":"mstore","nativeSrc":"2939:6:25","nodeType":"YulIdentifier","src":"2939:6:25"},"nativeSrc":"2939:36:25","nodeType":"YulFunctionCall","src":"2939:36:25"},"nativeSrc":"2939:36:25","nodeType":"YulExpressionStatement","src":"2939:36:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2797:184:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2863:9:25","nodeType":"YulTypedName","src":"2863:9:25","type":""},{"name":"value0","nativeSrc":"2874:6:25","nodeType":"YulTypedName","src":"2874:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2885:4:25","nodeType":"YulTypedName","src":"2885:4:25","type":""}],"src":"2797:184:25"},{"body":{"nativeSrc":"3056:110:25","nodeType":"YulBlock","src":"3056:110:25","statements":[{"body":{"nativeSrc":"3102:16:25","nodeType":"YulBlock","src":"3102:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3111:1:25","nodeType":"YulLiteral","src":"3111:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3114:1:25","nodeType":"YulLiteral","src":"3114:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3104:6:25","nodeType":"YulIdentifier","src":"3104:6:25"},"nativeSrc":"3104:12:25","nodeType":"YulFunctionCall","src":"3104:12:25"},"nativeSrc":"3104:12:25","nodeType":"YulExpressionStatement","src":"3104:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3077:7:25","nodeType":"YulIdentifier","src":"3077:7:25"},{"name":"headStart","nativeSrc":"3086:9:25","nodeType":"YulIdentifier","src":"3086:9:25"}],"functionName":{"name":"sub","nativeSrc":"3073:3:25","nodeType":"YulIdentifier","src":"3073:3:25"},"nativeSrc":"3073:23:25","nodeType":"YulFunctionCall","src":"3073:23:25"},{"kind":"number","nativeSrc":"3098:2:25","nodeType":"YulLiteral","src":"3098:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3069:3:25","nodeType":"YulIdentifier","src":"3069:3:25"},"nativeSrc":"3069:32:25","nodeType":"YulFunctionCall","src":"3069:32:25"},"nativeSrc":"3066:52:25","nodeType":"YulIf","src":"3066:52:25"},{"nativeSrc":"3127:33:25","nodeType":"YulAssignment","src":"3127:33:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3150:9:25","nodeType":"YulIdentifier","src":"3150:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"3137:12:25","nodeType":"YulIdentifier","src":"3137:12:25"},"nativeSrc":"3137:23:25","nodeType":"YulFunctionCall","src":"3137:23:25"},"variableNames":[{"name":"value0","nativeSrc":"3127:6:25","nodeType":"YulIdentifier","src":"3127:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2986:180:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3022:9:25","nodeType":"YulTypedName","src":"3022:9:25","type":""},{"name":"dataEnd","nativeSrc":"3033:7:25","nodeType":"YulTypedName","src":"3033:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3045:6:25","nodeType":"YulTypedName","src":"3045:6:25","type":""}],"src":"2986:180:25"},{"body":{"nativeSrc":"3241:116:25","nodeType":"YulBlock","src":"3241:116:25","statements":[{"body":{"nativeSrc":"3287:16:25","nodeType":"YulBlock","src":"3287:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3296:1:25","nodeType":"YulLiteral","src":"3296:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3299:1:25","nodeType":"YulLiteral","src":"3299:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3289:6:25","nodeType":"YulIdentifier","src":"3289:6:25"},"nativeSrc":"3289:12:25","nodeType":"YulFunctionCall","src":"3289:12:25"},"nativeSrc":"3289:12:25","nodeType":"YulExpressionStatement","src":"3289:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3262:7:25","nodeType":"YulIdentifier","src":"3262:7:25"},{"name":"headStart","nativeSrc":"3271:9:25","nodeType":"YulIdentifier","src":"3271:9:25"}],"functionName":{"name":"sub","nativeSrc":"3258:3:25","nodeType":"YulIdentifier","src":"3258:3:25"},"nativeSrc":"3258:23:25","nodeType":"YulFunctionCall","src":"3258:23:25"},{"kind":"number","nativeSrc":"3283:2:25","nodeType":"YulLiteral","src":"3283:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3254:3:25","nodeType":"YulIdentifier","src":"3254:3:25"},"nativeSrc":"3254:32:25","nodeType":"YulFunctionCall","src":"3254:32:25"},"nativeSrc":"3251:52:25","nodeType":"YulIf","src":"3251:52:25"},{"nativeSrc":"3312:39:25","nodeType":"YulAssignment","src":"3312:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3341:9:25","nodeType":"YulIdentifier","src":"3341:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3322:18:25","nodeType":"YulIdentifier","src":"3322:18:25"},"nativeSrc":"3322:29:25","nodeType":"YulFunctionCall","src":"3322:29:25"},"variableNames":[{"name":"value0","nativeSrc":"3312:6:25","nodeType":"YulIdentifier","src":"3312:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3171:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3207:9:25","nodeType":"YulTypedName","src":"3207:9:25","type":""},{"name":"dataEnd","nativeSrc":"3218:7:25","nodeType":"YulTypedName","src":"3218:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3230:6:25","nodeType":"YulTypedName","src":"3230:6:25","type":""}],"src":"3171:186:25"},{"body":{"nativeSrc":"3719:978:25","nodeType":"YulBlock","src":"3719:978:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3736:9:25","nodeType":"YulIdentifier","src":"3736:9:25"},{"arguments":[{"name":"value0","nativeSrc":"3751:6:25","nodeType":"YulIdentifier","src":"3751:6:25"},{"kind":"number","nativeSrc":"3759:66:25","nodeType":"YulLiteral","src":"3759:66:25","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"3747:3:25","nodeType":"YulIdentifier","src":"3747:3:25"},"nativeSrc":"3747:79:25","nodeType":"YulFunctionCall","src":"3747:79:25"}],"functionName":{"name":"mstore","nativeSrc":"3729:6:25","nodeType":"YulIdentifier","src":"3729:6:25"},"nativeSrc":"3729:98:25","nodeType":"YulFunctionCall","src":"3729:98:25"},"nativeSrc":"3729:98:25","nodeType":"YulExpressionStatement","src":"3729:98:25"},{"nativeSrc":"3836:12:25","nodeType":"YulVariableDeclaration","src":"3836:12:25","value":{"kind":"number","nativeSrc":"3846:2:25","nodeType":"YulLiteral","src":"3846:2:25","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3840:2:25","nodeType":"YulTypedName","src":"3840:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3868:9:25","nodeType":"YulIdentifier","src":"3868:9:25"},{"kind":"number","nativeSrc":"3879:2:25","nodeType":"YulLiteral","src":"3879:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3864:3:25","nodeType":"YulIdentifier","src":"3864:3:25"},"nativeSrc":"3864:18:25","nodeType":"YulFunctionCall","src":"3864:18:25"},{"kind":"number","nativeSrc":"3884:3:25","nodeType":"YulLiteral","src":"3884:3:25","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"3857:6:25","nodeType":"YulIdentifier","src":"3857:6:25"},"nativeSrc":"3857:31:25","nodeType":"YulFunctionCall","src":"3857:31:25"},"nativeSrc":"3857:31:25","nodeType":"YulExpressionStatement","src":"3857:31:25"},{"nativeSrc":"3897:60:25","nodeType":"YulVariableDeclaration","src":"3897:60:25","value":{"arguments":[{"name":"value1","nativeSrc":"3929:6:25","nodeType":"YulIdentifier","src":"3929:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"3941:9:25","nodeType":"YulIdentifier","src":"3941:9:25"},{"kind":"number","nativeSrc":"3952:3:25","nodeType":"YulLiteral","src":"3952:3:25","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"3937:3:25","nodeType":"YulIdentifier","src":"3937:3:25"},"nativeSrc":"3937:19:25","nodeType":"YulFunctionCall","src":"3937:19:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3911:17:25","nodeType":"YulIdentifier","src":"3911:17:25"},"nativeSrc":"3911:46:25","nodeType":"YulFunctionCall","src":"3911:46:25"},"variables":[{"name":"tail_1","nativeSrc":"3901:6:25","nodeType":"YulTypedName","src":"3901:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3977:9:25","nodeType":"YulIdentifier","src":"3977:9:25"},{"kind":"number","nativeSrc":"3988:2:25","nodeType":"YulLiteral","src":"3988:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3973:3:25","nodeType":"YulIdentifier","src":"3973:3:25"},"nativeSrc":"3973:18:25","nodeType":"YulFunctionCall","src":"3973:18:25"},{"arguments":[{"name":"tail_1","nativeSrc":"3997:6:25","nodeType":"YulIdentifier","src":"3997:6:25"},{"name":"headStart","nativeSrc":"4005:9:25","nodeType":"YulIdentifier","src":"4005:9:25"}],"functionName":{"name":"sub","nativeSrc":"3993:3:25","nodeType":"YulIdentifier","src":"3993:3:25"},"nativeSrc":"3993:22:25","nodeType":"YulFunctionCall","src":"3993:22:25"}],"functionName":{"name":"mstore","nativeSrc":"3966:6:25","nodeType":"YulIdentifier","src":"3966:6:25"},"nativeSrc":"3966:50:25","nodeType":"YulFunctionCall","src":"3966:50:25"},"nativeSrc":"3966:50:25","nodeType":"YulExpressionStatement","src":"3966:50:25"},{"nativeSrc":"4025:47:25","nodeType":"YulVariableDeclaration","src":"4025:47:25","value":{"arguments":[{"name":"value2","nativeSrc":"4057:6:25","nodeType":"YulIdentifier","src":"4057:6:25"},{"name":"tail_1","nativeSrc":"4065:6:25","nodeType":"YulIdentifier","src":"4065:6:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"4039:17:25","nodeType":"YulIdentifier","src":"4039:17:25"},"nativeSrc":"4039:33:25","nodeType":"YulFunctionCall","src":"4039:33:25"},"variables":[{"name":"tail_2","nativeSrc":"4029:6:25","nodeType":"YulTypedName","src":"4029:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4092:9:25","nodeType":"YulIdentifier","src":"4092:9:25"},{"kind":"number","nativeSrc":"4103:2:25","nodeType":"YulLiteral","src":"4103:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4088:3:25","nodeType":"YulIdentifier","src":"4088:3:25"},"nativeSrc":"4088:18:25","nodeType":"YulFunctionCall","src":"4088:18:25"},{"name":"value3","nativeSrc":"4108:6:25","nodeType":"YulIdentifier","src":"4108:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4081:6:25","nodeType":"YulIdentifier","src":"4081:6:25"},"nativeSrc":"4081:34:25","nodeType":"YulFunctionCall","src":"4081:34:25"},"nativeSrc":"4081:34:25","nodeType":"YulExpressionStatement","src":"4081:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4135:9:25","nodeType":"YulIdentifier","src":"4135:9:25"},{"kind":"number","nativeSrc":"4146:3:25","nodeType":"YulLiteral","src":"4146:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4131:3:25","nodeType":"YulIdentifier","src":"4131:3:25"},"nativeSrc":"4131:19:25","nodeType":"YulFunctionCall","src":"4131:19:25"},{"arguments":[{"name":"value4","nativeSrc":"4156:6:25","nodeType":"YulIdentifier","src":"4156:6:25"},{"kind":"number","nativeSrc":"4164:42:25","nodeType":"YulLiteral","src":"4164:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4152:3:25","nodeType":"YulIdentifier","src":"4152:3:25"},"nativeSrc":"4152:55:25","nodeType":"YulFunctionCall","src":"4152:55:25"}],"functionName":{"name":"mstore","nativeSrc":"4124:6:25","nodeType":"YulIdentifier","src":"4124:6:25"},"nativeSrc":"4124:84:25","nodeType":"YulFunctionCall","src":"4124:84:25"},"nativeSrc":"4124:84:25","nodeType":"YulExpressionStatement","src":"4124:84:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4228:9:25","nodeType":"YulIdentifier","src":"4228:9:25"},{"kind":"number","nativeSrc":"4239:3:25","nodeType":"YulLiteral","src":"4239:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4224:3:25","nodeType":"YulIdentifier","src":"4224:3:25"},"nativeSrc":"4224:19:25","nodeType":"YulFunctionCall","src":"4224:19:25"},{"name":"value5","nativeSrc":"4245:6:25","nodeType":"YulIdentifier","src":"4245:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4217:6:25","nodeType":"YulIdentifier","src":"4217:6:25"},"nativeSrc":"4217:35:25","nodeType":"YulFunctionCall","src":"4217:35:25"},"nativeSrc":"4217:35:25","nodeType":"YulExpressionStatement","src":"4217:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4272:9:25","nodeType":"YulIdentifier","src":"4272:9:25"},{"kind":"number","nativeSrc":"4283:3:25","nodeType":"YulLiteral","src":"4283:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"4268:3:25","nodeType":"YulIdentifier","src":"4268:3:25"},"nativeSrc":"4268:19:25","nodeType":"YulFunctionCall","src":"4268:19:25"},{"arguments":[{"name":"tail_2","nativeSrc":"4293:6:25","nodeType":"YulIdentifier","src":"4293:6:25"},{"name":"headStart","nativeSrc":"4301:9:25","nodeType":"YulIdentifier","src":"4301:9:25"}],"functionName":{"name":"sub","nativeSrc":"4289:3:25","nodeType":"YulIdentifier","src":"4289:3:25"},"nativeSrc":"4289:22:25","nodeType":"YulFunctionCall","src":"4289:22:25"}],"functionName":{"name":"mstore","nativeSrc":"4261:6:25","nodeType":"YulIdentifier","src":"4261:6:25"},"nativeSrc":"4261:51:25","nodeType":"YulFunctionCall","src":"4261:51:25"},"nativeSrc":"4261:51:25","nodeType":"YulExpressionStatement","src":"4261:51:25"},{"nativeSrc":"4321:17:25","nodeType":"YulVariableDeclaration","src":"4321:17:25","value":{"name":"tail_2","nativeSrc":"4332:6:25","nodeType":"YulIdentifier","src":"4332:6:25"},"variables":[{"name":"pos","nativeSrc":"4325:3:25","nodeType":"YulTypedName","src":"4325:3:25","type":""}]},{"nativeSrc":"4347:27:25","nodeType":"YulVariableDeclaration","src":"4347:27:25","value":{"arguments":[{"name":"value6","nativeSrc":"4367:6:25","nodeType":"YulIdentifier","src":"4367:6:25"}],"functionName":{"name":"mload","nativeSrc":"4361:5:25","nodeType":"YulIdentifier","src":"4361:5:25"},"nativeSrc":"4361:13:25","nodeType":"YulFunctionCall","src":"4361:13:25"},"variables":[{"name":"length","nativeSrc":"4351:6:25","nodeType":"YulTypedName","src":"4351:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"4390:6:25","nodeType":"YulIdentifier","src":"4390:6:25"},{"name":"length","nativeSrc":"4398:6:25","nodeType":"YulIdentifier","src":"4398:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4383:6:25","nodeType":"YulIdentifier","src":"4383:6:25"},"nativeSrc":"4383:22:25","nodeType":"YulFunctionCall","src":"4383:22:25"},"nativeSrc":"4383:22:25","nodeType":"YulExpressionStatement","src":"4383:22:25"},{"nativeSrc":"4414:22:25","nodeType":"YulAssignment","src":"4414:22:25","value":{"arguments":[{"name":"tail_2","nativeSrc":"4425:6:25","nodeType":"YulIdentifier","src":"4425:6:25"},{"kind":"number","nativeSrc":"4433:2:25","nodeType":"YulLiteral","src":"4433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4421:3:25","nodeType":"YulIdentifier","src":"4421:3:25"},"nativeSrc":"4421:15:25","nodeType":"YulFunctionCall","src":"4421:15:25"},"variableNames":[{"name":"pos","nativeSrc":"4414:3:25","nodeType":"YulIdentifier","src":"4414:3:25"}]},{"nativeSrc":"4445:29:25","nodeType":"YulVariableDeclaration","src":"4445:29:25","value":{"arguments":[{"name":"value6","nativeSrc":"4463:6:25","nodeType":"YulIdentifier","src":"4463:6:25"},{"kind":"number","nativeSrc":"4471:2:25","nodeType":"YulLiteral","src":"4471:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4459:3:25","nodeType":"YulIdentifier","src":"4459:3:25"},"nativeSrc":"4459:15:25","nodeType":"YulFunctionCall","src":"4459:15:25"},"variables":[{"name":"srcPtr","nativeSrc":"4449:6:25","nodeType":"YulTypedName","src":"4449:6:25","type":""}]},{"nativeSrc":"4483:10:25","nodeType":"YulVariableDeclaration","src":"4483:10:25","value":{"kind":"number","nativeSrc":"4492:1:25","nodeType":"YulLiteral","src":"4492:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4487:1:25","nodeType":"YulTypedName","src":"4487:1:25","type":""}]},{"body":{"nativeSrc":"4551:120:25","nodeType":"YulBlock","src":"4551:120:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4572:3:25","nodeType":"YulIdentifier","src":"4572:3:25"},{"arguments":[{"name":"srcPtr","nativeSrc":"4583:6:25","nodeType":"YulIdentifier","src":"4583:6:25"}],"functionName":{"name":"mload","nativeSrc":"4577:5:25","nodeType":"YulIdentifier","src":"4577:5:25"},"nativeSrc":"4577:13:25","nodeType":"YulFunctionCall","src":"4577:13:25"}],"functionName":{"name":"mstore","nativeSrc":"4565:6:25","nodeType":"YulIdentifier","src":"4565:6:25"},"nativeSrc":"4565:26:25","nodeType":"YulFunctionCall","src":"4565:26:25"},"nativeSrc":"4565:26:25","nodeType":"YulExpressionStatement","src":"4565:26:25"},{"nativeSrc":"4604:19:25","nodeType":"YulAssignment","src":"4604:19:25","value":{"arguments":[{"name":"pos","nativeSrc":"4615:3:25","nodeType":"YulIdentifier","src":"4615:3:25"},{"name":"_1","nativeSrc":"4620:2:25","nodeType":"YulIdentifier","src":"4620:2:25"}],"functionName":{"name":"add","nativeSrc":"4611:3:25","nodeType":"YulIdentifier","src":"4611:3:25"},"nativeSrc":"4611:12:25","nodeType":"YulFunctionCall","src":"4611:12:25"},"variableNames":[{"name":"pos","nativeSrc":"4604:3:25","nodeType":"YulIdentifier","src":"4604:3:25"}]},{"nativeSrc":"4636:25:25","nodeType":"YulAssignment","src":"4636:25:25","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4650:6:25","nodeType":"YulIdentifier","src":"4650:6:25"},{"name":"_1","nativeSrc":"4658:2:25","nodeType":"YulIdentifier","src":"4658:2:25"}],"functionName":{"name":"add","nativeSrc":"4646:3:25","nodeType":"YulIdentifier","src":"4646:3:25"},"nativeSrc":"4646:15:25","nodeType":"YulFunctionCall","src":"4646:15:25"},"variableNames":[{"name":"srcPtr","nativeSrc":"4636:6:25","nodeType":"YulIdentifier","src":"4636:6:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4513:1:25","nodeType":"YulIdentifier","src":"4513:1:25"},{"name":"length","nativeSrc":"4516:6:25","nodeType":"YulIdentifier","src":"4516:6:25"}],"functionName":{"name":"lt","nativeSrc":"4510:2:25","nodeType":"YulIdentifier","src":"4510:2:25"},"nativeSrc":"4510:13:25","nodeType":"YulFunctionCall","src":"4510:13:25"},"nativeSrc":"4502:169:25","nodeType":"YulForLoop","post":{"nativeSrc":"4524:18:25","nodeType":"YulBlock","src":"4524:18:25","statements":[{"nativeSrc":"4526:14:25","nodeType":"YulAssignment","src":"4526:14:25","value":{"arguments":[{"name":"i","nativeSrc":"4535:1:25","nodeType":"YulIdentifier","src":"4535:1:25"},{"kind":"number","nativeSrc":"4538:1:25","nodeType":"YulLiteral","src":"4538:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4531:3:25","nodeType":"YulIdentifier","src":"4531:3:25"},"nativeSrc":"4531:9:25","nodeType":"YulFunctionCall","src":"4531:9:25"},"variableNames":[{"name":"i","nativeSrc":"4526:1:25","nodeType":"YulIdentifier","src":"4526:1:25"}]}]},"pre":{"nativeSrc":"4506:3:25","nodeType":"YulBlock","src":"4506:3:25","statements":[]},"src":"4502:169:25"},{"nativeSrc":"4680:11:25","nodeType":"YulAssignment","src":"4680:11:25","value":{"name":"pos","nativeSrc":"4688:3:25","nodeType":"YulIdentifier","src":"4688:3:25"},"variableNames":[{"name":"tail","nativeSrc":"4680:4:25","nodeType":"YulIdentifier","src":"4680:4:25"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3362:1335:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:25","nodeType":"YulTypedName","src":"3640:9:25","type":""},{"name":"value6","nativeSrc":"3651:6:25","nodeType":"YulTypedName","src":"3651:6:25","type":""},{"name":"value5","nativeSrc":"3659:6:25","nodeType":"YulTypedName","src":"3659:6:25","type":""},{"name":"value4","nativeSrc":"3667:6:25","nodeType":"YulTypedName","src":"3667:6:25","type":""},{"name":"value3","nativeSrc":"3675:6:25","nodeType":"YulTypedName","src":"3675:6:25","type":""},{"name":"value2","nativeSrc":"3683:6:25","nodeType":"YulTypedName","src":"3683:6:25","type":""},{"name":"value1","nativeSrc":"3691:6:25","nodeType":"YulTypedName","src":"3691:6:25","type":""},{"name":"value0","nativeSrc":"3699:6:25","nodeType":"YulTypedName","src":"3699:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3710:4:25","nodeType":"YulTypedName","src":"3710:4:25","type":""}],"src":"3362:1335:25"},{"body":{"nativeSrc":"4872:523:25","nodeType":"YulBlock","src":"4872:523:25","statements":[{"body":{"nativeSrc":"4919:16:25","nodeType":"YulBlock","src":"4919:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4928:1:25","nodeType":"YulLiteral","src":"4928:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4931:1:25","nodeType":"YulLiteral","src":"4931:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4921:6:25","nodeType":"YulIdentifier","src":"4921:6:25"},"nativeSrc":"4921:12:25","nodeType":"YulFunctionCall","src":"4921:12:25"},"nativeSrc":"4921:12:25","nodeType":"YulExpressionStatement","src":"4921:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4893:7:25","nodeType":"YulIdentifier","src":"4893:7:25"},{"name":"headStart","nativeSrc":"4902:9:25","nodeType":"YulIdentifier","src":"4902:9:25"}],"functionName":{"name":"sub","nativeSrc":"4889:3:25","nodeType":"YulIdentifier","src":"4889:3:25"},"nativeSrc":"4889:23:25","nodeType":"YulFunctionCall","src":"4889:23:25"},{"kind":"number","nativeSrc":"4914:3:25","nodeType":"YulLiteral","src":"4914:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"4885:3:25","nodeType":"YulIdentifier","src":"4885:3:25"},"nativeSrc":"4885:33:25","nodeType":"YulFunctionCall","src":"4885:33:25"},"nativeSrc":"4882:53:25","nodeType":"YulIf","src":"4882:53:25"},{"nativeSrc":"4944:39:25","nodeType":"YulAssignment","src":"4944:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4973:9:25","nodeType":"YulIdentifier","src":"4973:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4954:18:25","nodeType":"YulIdentifier","src":"4954:18:25"},"nativeSrc":"4954:29:25","nodeType":"YulFunctionCall","src":"4954:29:25"},"variableNames":[{"name":"value0","nativeSrc":"4944:6:25","nodeType":"YulIdentifier","src":"4944:6:25"}]},{"nativeSrc":"4992:48:25","nodeType":"YulAssignment","src":"4992:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5025:9:25","nodeType":"YulIdentifier","src":"5025:9:25"},{"kind":"number","nativeSrc":"5036:2:25","nodeType":"YulLiteral","src":"5036:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5021:3:25","nodeType":"YulIdentifier","src":"5021:3:25"},"nativeSrc":"5021:18:25","nodeType":"YulFunctionCall","src":"5021:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5002:18:25","nodeType":"YulIdentifier","src":"5002:18:25"},"nativeSrc":"5002:38:25","nodeType":"YulFunctionCall","src":"5002:38:25"},"variableNames":[{"name":"value1","nativeSrc":"4992:6:25","nodeType":"YulIdentifier","src":"4992:6:25"}]},{"nativeSrc":"5049:42:25","nodeType":"YulAssignment","src":"5049:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5076:9:25","nodeType":"YulIdentifier","src":"5076:9:25"},{"kind":"number","nativeSrc":"5087:2:25","nodeType":"YulLiteral","src":"5087:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5072:3:25","nodeType":"YulIdentifier","src":"5072:3:25"},"nativeSrc":"5072:18:25","nodeType":"YulFunctionCall","src":"5072:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5059:12:25","nodeType":"YulIdentifier","src":"5059:12:25"},"nativeSrc":"5059:32:25","nodeType":"YulFunctionCall","src":"5059:32:25"},"variableNames":[{"name":"value2","nativeSrc":"5049:6:25","nodeType":"YulIdentifier","src":"5049:6:25"}]},{"nativeSrc":"5100:42:25","nodeType":"YulAssignment","src":"5100:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5127:9:25","nodeType":"YulIdentifier","src":"5127:9:25"},{"kind":"number","nativeSrc":"5138:2:25","nodeType":"YulLiteral","src":"5138:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5123:3:25","nodeType":"YulIdentifier","src":"5123:3:25"},"nativeSrc":"5123:18:25","nodeType":"YulFunctionCall","src":"5123:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5110:12:25","nodeType":"YulIdentifier","src":"5110:12:25"},"nativeSrc":"5110:32:25","nodeType":"YulFunctionCall","src":"5110:32:25"},"variableNames":[{"name":"value3","nativeSrc":"5100:6:25","nodeType":"YulIdentifier","src":"5100:6:25"}]},{"nativeSrc":"5151:46:25","nodeType":"YulVariableDeclaration","src":"5151:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5181:9:25","nodeType":"YulIdentifier","src":"5181:9:25"},{"kind":"number","nativeSrc":"5192:3:25","nodeType":"YulLiteral","src":"5192:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5177:3:25","nodeType":"YulIdentifier","src":"5177:3:25"},"nativeSrc":"5177:19:25","nodeType":"YulFunctionCall","src":"5177:19:25"}],"functionName":{"name":"calldataload","nativeSrc":"5164:12:25","nodeType":"YulIdentifier","src":"5164:12:25"},"nativeSrc":"5164:33:25","nodeType":"YulFunctionCall","src":"5164:33:25"},"variables":[{"name":"value","nativeSrc":"5155:5:25","nodeType":"YulTypedName","src":"5155:5:25","type":""}]},{"body":{"nativeSrc":"5245:16:25","nodeType":"YulBlock","src":"5245:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5254:1:25","nodeType":"YulLiteral","src":"5254:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5257:1:25","nodeType":"YulLiteral","src":"5257:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5247:6:25","nodeType":"YulIdentifier","src":"5247:6:25"},"nativeSrc":"5247:12:25","nodeType":"YulFunctionCall","src":"5247:12:25"},"nativeSrc":"5247:12:25","nodeType":"YulExpressionStatement","src":"5247:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5219:5:25","nodeType":"YulIdentifier","src":"5219:5:25"},{"arguments":[{"name":"value","nativeSrc":"5230:5:25","nodeType":"YulIdentifier","src":"5230:5:25"},{"kind":"number","nativeSrc":"5237:4:25","nodeType":"YulLiteral","src":"5237:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5226:3:25","nodeType":"YulIdentifier","src":"5226:3:25"},"nativeSrc":"5226:16:25","nodeType":"YulFunctionCall","src":"5226:16:25"}],"functionName":{"name":"eq","nativeSrc":"5216:2:25","nodeType":"YulIdentifier","src":"5216:2:25"},"nativeSrc":"5216:27:25","nodeType":"YulFunctionCall","src":"5216:27:25"}],"functionName":{"name":"iszero","nativeSrc":"5209:6:25","nodeType":"YulIdentifier","src":"5209:6:25"},"nativeSrc":"5209:35:25","nodeType":"YulFunctionCall","src":"5209:35:25"},"nativeSrc":"5206:55:25","nodeType":"YulIf","src":"5206:55:25"},{"nativeSrc":"5270:15:25","nodeType":"YulAssignment","src":"5270:15:25","value":{"name":"value","nativeSrc":"5280:5:25","nodeType":"YulIdentifier","src":"5280:5:25"},"variableNames":[{"name":"value4","nativeSrc":"5270:6:25","nodeType":"YulIdentifier","src":"5270:6:25"}]},{"nativeSrc":"5294:43:25","nodeType":"YulAssignment","src":"5294:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5321:9:25","nodeType":"YulIdentifier","src":"5321:9:25"},{"kind":"number","nativeSrc":"5332:3:25","nodeType":"YulLiteral","src":"5332:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5317:3:25","nodeType":"YulIdentifier","src":"5317:3:25"},"nativeSrc":"5317:19:25","nodeType":"YulFunctionCall","src":"5317:19:25"}],"functionName":{"name":"calldataload","nativeSrc":"5304:12:25","nodeType":"YulIdentifier","src":"5304:12:25"},"nativeSrc":"5304:33:25","nodeType":"YulFunctionCall","src":"5304:33:25"},"variableNames":[{"name":"value5","nativeSrc":"5294:6:25","nodeType":"YulIdentifier","src":"5294:6:25"}]},{"nativeSrc":"5346:43:25","nodeType":"YulAssignment","src":"5346:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5373:9:25","nodeType":"YulIdentifier","src":"5373:9:25"},{"kind":"number","nativeSrc":"5384:3:25","nodeType":"YulLiteral","src":"5384:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5369:3:25","nodeType":"YulIdentifier","src":"5369:3:25"},"nativeSrc":"5369:19:25","nodeType":"YulFunctionCall","src":"5369:19:25"}],"functionName":{"name":"calldataload","nativeSrc":"5356:12:25","nodeType":"YulIdentifier","src":"5356:12:25"},"nativeSrc":"5356:33:25","nodeType":"YulFunctionCall","src":"5356:33:25"},"variableNames":[{"name":"value6","nativeSrc":"5346:6:25","nodeType":"YulIdentifier","src":"5346:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"4702:693:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4790:9:25","nodeType":"YulTypedName","src":"4790:9:25","type":""},{"name":"dataEnd","nativeSrc":"4801:7:25","nodeType":"YulTypedName","src":"4801:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4813:6:25","nodeType":"YulTypedName","src":"4813:6:25","type":""},{"name":"value1","nativeSrc":"4821:6:25","nodeType":"YulTypedName","src":"4821:6:25","type":""},{"name":"value2","nativeSrc":"4829:6:25","nodeType":"YulTypedName","src":"4829:6:25","type":""},{"name":"value3","nativeSrc":"4837:6:25","nodeType":"YulTypedName","src":"4837:6:25","type":""},{"name":"value4","nativeSrc":"4845:6:25","nodeType":"YulTypedName","src":"4845:6:25","type":""},{"name":"value5","nativeSrc":"4853:6:25","nodeType":"YulTypedName","src":"4853:6:25","type":""},{"name":"value6","nativeSrc":"4861:6:25","nodeType":"YulTypedName","src":"4861:6:25","type":""}],"src":"4702:693:25"},{"body":{"nativeSrc":"5487:173:25","nodeType":"YulBlock","src":"5487:173:25","statements":[{"body":{"nativeSrc":"5533:16:25","nodeType":"YulBlock","src":"5533:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5542:1:25","nodeType":"YulLiteral","src":"5542:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5545:1:25","nodeType":"YulLiteral","src":"5545:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5535:6:25","nodeType":"YulIdentifier","src":"5535:6:25"},"nativeSrc":"5535:12:25","nodeType":"YulFunctionCall","src":"5535:12:25"},"nativeSrc":"5535:12:25","nodeType":"YulExpressionStatement","src":"5535:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5508:7:25","nodeType":"YulIdentifier","src":"5508:7:25"},{"name":"headStart","nativeSrc":"5517:9:25","nodeType":"YulIdentifier","src":"5517:9:25"}],"functionName":{"name":"sub","nativeSrc":"5504:3:25","nodeType":"YulIdentifier","src":"5504:3:25"},"nativeSrc":"5504:23:25","nodeType":"YulFunctionCall","src":"5504:23:25"},{"kind":"number","nativeSrc":"5529:2:25","nodeType":"YulLiteral","src":"5529:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5500:3:25","nodeType":"YulIdentifier","src":"5500:3:25"},"nativeSrc":"5500:32:25","nodeType":"YulFunctionCall","src":"5500:32:25"},"nativeSrc":"5497:52:25","nodeType":"YulIf","src":"5497:52:25"},{"nativeSrc":"5558:39:25","nodeType":"YulAssignment","src":"5558:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5587:9:25","nodeType":"YulIdentifier","src":"5587:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5568:18:25","nodeType":"YulIdentifier","src":"5568:18:25"},"nativeSrc":"5568:29:25","nodeType":"YulFunctionCall","src":"5568:29:25"},"variableNames":[{"name":"value0","nativeSrc":"5558:6:25","nodeType":"YulIdentifier","src":"5558:6:25"}]},{"nativeSrc":"5606:48:25","nodeType":"YulAssignment","src":"5606:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5639:9:25","nodeType":"YulIdentifier","src":"5639:9:25"},{"kind":"number","nativeSrc":"5650:2:25","nodeType":"YulLiteral","src":"5650:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5635:3:25","nodeType":"YulIdentifier","src":"5635:3:25"},"nativeSrc":"5635:18:25","nodeType":"YulFunctionCall","src":"5635:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5616:18:25","nodeType":"YulIdentifier","src":"5616:18:25"},"nativeSrc":"5616:38:25","nodeType":"YulFunctionCall","src":"5616:38:25"},"variableNames":[{"name":"value1","nativeSrc":"5606:6:25","nodeType":"YulIdentifier","src":"5606:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5400:260:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5445:9:25","nodeType":"YulTypedName","src":"5445:9:25","type":""},{"name":"dataEnd","nativeSrc":"5456:7:25","nodeType":"YulTypedName","src":"5456:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5468:6:25","nodeType":"YulTypedName","src":"5468:6:25","type":""},{"name":"value1","nativeSrc":"5476:6:25","nodeType":"YulTypedName","src":"5476:6:25","type":""}],"src":"5400:260:25"},{"body":{"nativeSrc":"5720:382:25","nodeType":"YulBlock","src":"5720:382:25","statements":[{"nativeSrc":"5730:22:25","nodeType":"YulAssignment","src":"5730:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"5744:1:25","nodeType":"YulLiteral","src":"5744:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"5747:4:25","nodeType":"YulIdentifier","src":"5747:4:25"}],"functionName":{"name":"shr","nativeSrc":"5740:3:25","nodeType":"YulIdentifier","src":"5740:3:25"},"nativeSrc":"5740:12:25","nodeType":"YulFunctionCall","src":"5740:12:25"},"variableNames":[{"name":"length","nativeSrc":"5730:6:25","nodeType":"YulIdentifier","src":"5730:6:25"}]},{"nativeSrc":"5761:38:25","nodeType":"YulVariableDeclaration","src":"5761:38:25","value":{"arguments":[{"name":"data","nativeSrc":"5791:4:25","nodeType":"YulIdentifier","src":"5791:4:25"},{"kind":"number","nativeSrc":"5797:1:25","nodeType":"YulLiteral","src":"5797:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5787:3:25","nodeType":"YulIdentifier","src":"5787:3:25"},"nativeSrc":"5787:12:25","nodeType":"YulFunctionCall","src":"5787:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5765:18:25","nodeType":"YulTypedName","src":"5765:18:25","type":""}]},{"body":{"nativeSrc":"5838:31:25","nodeType":"YulBlock","src":"5838:31:25","statements":[{"nativeSrc":"5840:27:25","nodeType":"YulAssignment","src":"5840:27:25","value":{"arguments":[{"name":"length","nativeSrc":"5854:6:25","nodeType":"YulIdentifier","src":"5854:6:25"},{"kind":"number","nativeSrc":"5862:4:25","nodeType":"YulLiteral","src":"5862:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5850:3:25","nodeType":"YulIdentifier","src":"5850:3:25"},"nativeSrc":"5850:17:25","nodeType":"YulFunctionCall","src":"5850:17:25"},"variableNames":[{"name":"length","nativeSrc":"5840:6:25","nodeType":"YulIdentifier","src":"5840:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5818:18:25","nodeType":"YulIdentifier","src":"5818:18:25"}],"functionName":{"name":"iszero","nativeSrc":"5811:6:25","nodeType":"YulIdentifier","src":"5811:6:25"},"nativeSrc":"5811:26:25","nodeType":"YulFunctionCall","src":"5811:26:25"},"nativeSrc":"5808:61:25","nodeType":"YulIf","src":"5808:61:25"},{"body":{"nativeSrc":"5928:168:25","nodeType":"YulBlock","src":"5928:168:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5949:1:25","nodeType":"YulLiteral","src":"5949:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5952:77:25","nodeType":"YulLiteral","src":"5952:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5942:6:25","nodeType":"YulIdentifier","src":"5942:6:25"},"nativeSrc":"5942:88:25","nodeType":"YulFunctionCall","src":"5942:88:25"},"nativeSrc":"5942:88:25","nodeType":"YulExpressionStatement","src":"5942:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6050:1:25","nodeType":"YulLiteral","src":"6050:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"6053:4:25","nodeType":"YulLiteral","src":"6053:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6043:6:25","nodeType":"YulIdentifier","src":"6043:6:25"},"nativeSrc":"6043:15:25","nodeType":"YulFunctionCall","src":"6043:15:25"},"nativeSrc":"6043:15:25","nodeType":"YulExpressionStatement","src":"6043:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6078:1:25","nodeType":"YulLiteral","src":"6078:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6081:4:25","nodeType":"YulLiteral","src":"6081:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6071:6:25","nodeType":"YulIdentifier","src":"6071:6:25"},"nativeSrc":"6071:15:25","nodeType":"YulFunctionCall","src":"6071:15:25"},"nativeSrc":"6071:15:25","nodeType":"YulExpressionStatement","src":"6071:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5884:18:25","nodeType":"YulIdentifier","src":"5884:18:25"},{"arguments":[{"name":"length","nativeSrc":"5907:6:25","nodeType":"YulIdentifier","src":"5907:6:25"},{"kind":"number","nativeSrc":"5915:2:25","nodeType":"YulLiteral","src":"5915:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5904:2:25","nodeType":"YulIdentifier","src":"5904:2:25"},"nativeSrc":"5904:14:25","nodeType":"YulFunctionCall","src":"5904:14:25"}],"functionName":{"name":"eq","nativeSrc":"5881:2:25","nodeType":"YulIdentifier","src":"5881:2:25"},"nativeSrc":"5881:38:25","nodeType":"YulFunctionCall","src":"5881:38:25"},"nativeSrc":"5878:218:25","nodeType":"YulIf","src":"5878:218:25"}]},"name":"extract_byte_array_length","nativeSrc":"5665:437:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5700:4:25","nodeType":"YulTypedName","src":"5700:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5709:6:25","nodeType":"YulTypedName","src":"5709:6:25","type":""}],"src":"5665:437:25"},{"body":{"nativeSrc":"6139:152:25","nodeType":"YulBlock","src":"6139:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6156:1:25","nodeType":"YulLiteral","src":"6156:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6159:77:25","nodeType":"YulLiteral","src":"6159:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6149:6:25","nodeType":"YulIdentifier","src":"6149:6:25"},"nativeSrc":"6149:88:25","nodeType":"YulFunctionCall","src":"6149:88:25"},"nativeSrc":"6149:88:25","nodeType":"YulExpressionStatement","src":"6149:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6253:1:25","nodeType":"YulLiteral","src":"6253:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"6256:4:25","nodeType":"YulLiteral","src":"6256:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6246:6:25","nodeType":"YulIdentifier","src":"6246:6:25"},"nativeSrc":"6246:15:25","nodeType":"YulFunctionCall","src":"6246:15:25"},"nativeSrc":"6246:15:25","nodeType":"YulExpressionStatement","src":"6246:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6277:1:25","nodeType":"YulLiteral","src":"6277:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6280:4:25","nodeType":"YulLiteral","src":"6280:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6270:6:25","nodeType":"YulIdentifier","src":"6270:6:25"},"nativeSrc":"6270:15:25","nodeType":"YulFunctionCall","src":"6270:15:25"},"nativeSrc":"6270:15:25","nodeType":"YulExpressionStatement","src":"6270:15:25"}]},"name":"panic_error_0x41","nativeSrc":"6107:184:25","nodeType":"YulFunctionDefinition","src":"6107:184:25"},{"body":{"nativeSrc":"6537:373:25","nodeType":"YulBlock","src":"6537:373:25","statements":[{"nativeSrc":"6547:27:25","nodeType":"YulAssignment","src":"6547:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6559:9:25","nodeType":"YulIdentifier","src":"6559:9:25"},{"kind":"number","nativeSrc":"6570:3:25","nodeType":"YulLiteral","src":"6570:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6555:3:25","nodeType":"YulIdentifier","src":"6555:3:25"},"nativeSrc":"6555:19:25","nodeType":"YulFunctionCall","src":"6555:19:25"},"variableNames":[{"name":"tail","nativeSrc":"6547:4:25","nodeType":"YulIdentifier","src":"6547:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6590:9:25","nodeType":"YulIdentifier","src":"6590:9:25"},{"name":"value0","nativeSrc":"6601:6:25","nodeType":"YulIdentifier","src":"6601:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6583:6:25","nodeType":"YulIdentifier","src":"6583:6:25"},"nativeSrc":"6583:25:25","nodeType":"YulFunctionCall","src":"6583:25:25"},"nativeSrc":"6583:25:25","nodeType":"YulExpressionStatement","src":"6583:25:25"},{"nativeSrc":"6617:52:25","nodeType":"YulVariableDeclaration","src":"6617:52:25","value":{"kind":"number","nativeSrc":"6627:42:25","nodeType":"YulLiteral","src":"6627:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6621:2:25","nodeType":"YulTypedName","src":"6621:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6689:9:25","nodeType":"YulIdentifier","src":"6689:9:25"},{"kind":"number","nativeSrc":"6700:2:25","nodeType":"YulLiteral","src":"6700:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6685:3:25","nodeType":"YulIdentifier","src":"6685:3:25"},"nativeSrc":"6685:18:25","nodeType":"YulFunctionCall","src":"6685:18:25"},{"arguments":[{"name":"value1","nativeSrc":"6709:6:25","nodeType":"YulIdentifier","src":"6709:6:25"},{"name":"_1","nativeSrc":"6717:2:25","nodeType":"YulIdentifier","src":"6717:2:25"}],"functionName":{"name":"and","nativeSrc":"6705:3:25","nodeType":"YulIdentifier","src":"6705:3:25"},"nativeSrc":"6705:15:25","nodeType":"YulFunctionCall","src":"6705:15:25"}],"functionName":{"name":"mstore","nativeSrc":"6678:6:25","nodeType":"YulIdentifier","src":"6678:6:25"},"nativeSrc":"6678:43:25","nodeType":"YulFunctionCall","src":"6678:43:25"},"nativeSrc":"6678:43:25","nodeType":"YulExpressionStatement","src":"6678:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6741:9:25","nodeType":"YulIdentifier","src":"6741:9:25"},{"kind":"number","nativeSrc":"6752:2:25","nodeType":"YulLiteral","src":"6752:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6737:3:25","nodeType":"YulIdentifier","src":"6737:3:25"},"nativeSrc":"6737:18:25","nodeType":"YulFunctionCall","src":"6737:18:25"},{"arguments":[{"name":"value2","nativeSrc":"6761:6:25","nodeType":"YulIdentifier","src":"6761:6:25"},{"name":"_1","nativeSrc":"6769:2:25","nodeType":"YulIdentifier","src":"6769:2:25"}],"functionName":{"name":"and","nativeSrc":"6757:3:25","nodeType":"YulIdentifier","src":"6757:3:25"},"nativeSrc":"6757:15:25","nodeType":"YulFunctionCall","src":"6757:15:25"}],"functionName":{"name":"mstore","nativeSrc":"6730:6:25","nodeType":"YulIdentifier","src":"6730:6:25"},"nativeSrc":"6730:43:25","nodeType":"YulFunctionCall","src":"6730:43:25"},"nativeSrc":"6730:43:25","nodeType":"YulExpressionStatement","src":"6730:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6793:9:25","nodeType":"YulIdentifier","src":"6793:9:25"},{"kind":"number","nativeSrc":"6804:2:25","nodeType":"YulLiteral","src":"6804:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6789:3:25","nodeType":"YulIdentifier","src":"6789:3:25"},"nativeSrc":"6789:18:25","nodeType":"YulFunctionCall","src":"6789:18:25"},{"name":"value3","nativeSrc":"6809:6:25","nodeType":"YulIdentifier","src":"6809:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6782:6:25","nodeType":"YulIdentifier","src":"6782:6:25"},"nativeSrc":"6782:34:25","nodeType":"YulFunctionCall","src":"6782:34:25"},"nativeSrc":"6782:34:25","nodeType":"YulExpressionStatement","src":"6782:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6836:9:25","nodeType":"YulIdentifier","src":"6836:9:25"},{"kind":"number","nativeSrc":"6847:3:25","nodeType":"YulLiteral","src":"6847:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6832:3:25","nodeType":"YulIdentifier","src":"6832:3:25"},"nativeSrc":"6832:19:25","nodeType":"YulFunctionCall","src":"6832:19:25"},{"name":"value4","nativeSrc":"6853:6:25","nodeType":"YulIdentifier","src":"6853:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6825:6:25","nodeType":"YulIdentifier","src":"6825:6:25"},"nativeSrc":"6825:35:25","nodeType":"YulFunctionCall","src":"6825:35:25"},"nativeSrc":"6825:35:25","nodeType":"YulExpressionStatement","src":"6825:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6880:9:25","nodeType":"YulIdentifier","src":"6880:9:25"},{"kind":"number","nativeSrc":"6891:3:25","nodeType":"YulLiteral","src":"6891:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6876:3:25","nodeType":"YulIdentifier","src":"6876:3:25"},"nativeSrc":"6876:19:25","nodeType":"YulFunctionCall","src":"6876:19:25"},{"name":"value5","nativeSrc":"6897:6:25","nodeType":"YulIdentifier","src":"6897:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6869:6:25","nodeType":"YulIdentifier","src":"6869:6:25"},"nativeSrc":"6869:35:25","nodeType":"YulFunctionCall","src":"6869:35:25"},"nativeSrc":"6869:35:25","nodeType":"YulExpressionStatement","src":"6869:35:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6296:614:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6466:9:25","nodeType":"YulTypedName","src":"6466:9:25","type":""},{"name":"value5","nativeSrc":"6477:6:25","nodeType":"YulTypedName","src":"6477:6:25","type":""},{"name":"value4","nativeSrc":"6485:6:25","nodeType":"YulTypedName","src":"6485:6:25","type":""},{"name":"value3","nativeSrc":"6493:6:25","nodeType":"YulTypedName","src":"6493:6:25","type":""},{"name":"value2","nativeSrc":"6501:6:25","nodeType":"YulTypedName","src":"6501:6:25","type":""},{"name":"value1","nativeSrc":"6509:6:25","nodeType":"YulTypedName","src":"6509:6:25","type":""},{"name":"value0","nativeSrc":"6517:6:25","nodeType":"YulTypedName","src":"6517:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6528:4:25","nodeType":"YulTypedName","src":"6528:4:25","type":""}],"src":"6296:614:25"},{"body":{"nativeSrc":"7044:198:25","nodeType":"YulBlock","src":"7044:198:25","statements":[{"nativeSrc":"7054:26:25","nodeType":"YulAssignment","src":"7054:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7066:9:25","nodeType":"YulIdentifier","src":"7066:9:25"},{"kind":"number","nativeSrc":"7077:2:25","nodeType":"YulLiteral","src":"7077:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7062:3:25","nodeType":"YulIdentifier","src":"7062:3:25"},"nativeSrc":"7062:18:25","nodeType":"YulFunctionCall","src":"7062:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7054:4:25","nodeType":"YulIdentifier","src":"7054:4:25"}]},{"nativeSrc":"7089:52:25","nodeType":"YulVariableDeclaration","src":"7089:52:25","value":{"kind":"number","nativeSrc":"7099:42:25","nodeType":"YulLiteral","src":"7099:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"7093:2:25","nodeType":"YulTypedName","src":"7093:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7157:9:25","nodeType":"YulIdentifier","src":"7157:9:25"},{"arguments":[{"name":"value0","nativeSrc":"7172:6:25","nodeType":"YulIdentifier","src":"7172:6:25"},{"name":"_1","nativeSrc":"7180:2:25","nodeType":"YulIdentifier","src":"7180:2:25"}],"functionName":{"name":"and","nativeSrc":"7168:3:25","nodeType":"YulIdentifier","src":"7168:3:25"},"nativeSrc":"7168:15:25","nodeType":"YulFunctionCall","src":"7168:15:25"}],"functionName":{"name":"mstore","nativeSrc":"7150:6:25","nodeType":"YulIdentifier","src":"7150:6:25"},"nativeSrc":"7150:34:25","nodeType":"YulFunctionCall","src":"7150:34:25"},"nativeSrc":"7150:34:25","nodeType":"YulExpressionStatement","src":"7150:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7204:9:25","nodeType":"YulIdentifier","src":"7204:9:25"},{"kind":"number","nativeSrc":"7215:2:25","nodeType":"YulLiteral","src":"7215:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7200:3:25","nodeType":"YulIdentifier","src":"7200:3:25"},"nativeSrc":"7200:18:25","nodeType":"YulFunctionCall","src":"7200:18:25"},{"arguments":[{"name":"value1","nativeSrc":"7224:6:25","nodeType":"YulIdentifier","src":"7224:6:25"},{"name":"_1","nativeSrc":"7232:2:25","nodeType":"YulIdentifier","src":"7232:2:25"}],"functionName":{"name":"and","nativeSrc":"7220:3:25","nodeType":"YulIdentifier","src":"7220:3:25"},"nativeSrc":"7220:15:25","nodeType":"YulFunctionCall","src":"7220:15:25"}],"functionName":{"name":"mstore","nativeSrc":"7193:6:25","nodeType":"YulIdentifier","src":"7193:6:25"},"nativeSrc":"7193:43:25","nodeType":"YulFunctionCall","src":"7193:43:25"},"nativeSrc":"7193:43:25","nodeType":"YulExpressionStatement","src":"7193:43:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"6915:327:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7005:9:25","nodeType":"YulTypedName","src":"7005:9:25","type":""},{"name":"value1","nativeSrc":"7016:6:25","nodeType":"YulTypedName","src":"7016:6:25","type":""},{"name":"value0","nativeSrc":"7024:6:25","nodeType":"YulTypedName","src":"7024:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7035:4:25","nodeType":"YulTypedName","src":"7035:4:25","type":""}],"src":"6915:327:25"},{"body":{"nativeSrc":"7404:211:25","nodeType":"YulBlock","src":"7404:211:25","statements":[{"nativeSrc":"7414:26:25","nodeType":"YulAssignment","src":"7414:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7426:9:25","nodeType":"YulIdentifier","src":"7426:9:25"},{"kind":"number","nativeSrc":"7437:2:25","nodeType":"YulLiteral","src":"7437:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7422:3:25","nodeType":"YulIdentifier","src":"7422:3:25"},"nativeSrc":"7422:18:25","nodeType":"YulFunctionCall","src":"7422:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7414:4:25","nodeType":"YulIdentifier","src":"7414:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7456:9:25","nodeType":"YulIdentifier","src":"7456:9:25"},{"arguments":[{"name":"value0","nativeSrc":"7471:6:25","nodeType":"YulIdentifier","src":"7471:6:25"},{"kind":"number","nativeSrc":"7479:42:25","nodeType":"YulLiteral","src":"7479:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"7467:3:25","nodeType":"YulIdentifier","src":"7467:3:25"},"nativeSrc":"7467:55:25","nodeType":"YulFunctionCall","src":"7467:55:25"}],"functionName":{"name":"mstore","nativeSrc":"7449:6:25","nodeType":"YulIdentifier","src":"7449:6:25"},"nativeSrc":"7449:74:25","nodeType":"YulFunctionCall","src":"7449:74:25"},"nativeSrc":"7449:74:25","nodeType":"YulExpressionStatement","src":"7449:74:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7543:9:25","nodeType":"YulIdentifier","src":"7543:9:25"},{"kind":"number","nativeSrc":"7554:2:25","nodeType":"YulLiteral","src":"7554:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7539:3:25","nodeType":"YulIdentifier","src":"7539:3:25"},"nativeSrc":"7539:18:25","nodeType":"YulFunctionCall","src":"7539:18:25"},{"name":"value1","nativeSrc":"7559:6:25","nodeType":"YulIdentifier","src":"7559:6:25"}],"functionName":{"name":"mstore","nativeSrc":"7532:6:25","nodeType":"YulIdentifier","src":"7532:6:25"},"nativeSrc":"7532:34:25","nodeType":"YulFunctionCall","src":"7532:34:25"},"nativeSrc":"7532:34:25","nodeType":"YulExpressionStatement","src":"7532:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7586:9:25","nodeType":"YulIdentifier","src":"7586:9:25"},{"kind":"number","nativeSrc":"7597:2:25","nodeType":"YulLiteral","src":"7597:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7582:3:25","nodeType":"YulIdentifier","src":"7582:3:25"},"nativeSrc":"7582:18:25","nodeType":"YulFunctionCall","src":"7582:18:25"},{"name":"value2","nativeSrc":"7602:6:25","nodeType":"YulIdentifier","src":"7602:6:25"}],"functionName":{"name":"mstore","nativeSrc":"7575:6:25","nodeType":"YulIdentifier","src":"7575:6:25"},"nativeSrc":"7575:34:25","nodeType":"YulFunctionCall","src":"7575:34:25"},"nativeSrc":"7575:34:25","nodeType":"YulExpressionStatement","src":"7575:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7247:368:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7357:9:25","nodeType":"YulTypedName","src":"7357:9:25","type":""},{"name":"value2","nativeSrc":"7368:6:25","nodeType":"YulTypedName","src":"7368:6:25","type":""},{"name":"value1","nativeSrc":"7376:6:25","nodeType":"YulTypedName","src":"7376:6:25","type":""},{"name":"value0","nativeSrc":"7384:6:25","nodeType":"YulTypedName","src":"7384:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7395:4:25","nodeType":"YulTypedName","src":"7395:4:25","type":""}],"src":"7247:368:25"},{"body":{"nativeSrc":"7721:125:25","nodeType":"YulBlock","src":"7721:125:25","statements":[{"nativeSrc":"7731:26:25","nodeType":"YulAssignment","src":"7731:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7743:9:25","nodeType":"YulIdentifier","src":"7743:9:25"},{"kind":"number","nativeSrc":"7754:2:25","nodeType":"YulLiteral","src":"7754:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7739:3:25","nodeType":"YulIdentifier","src":"7739:3:25"},"nativeSrc":"7739:18:25","nodeType":"YulFunctionCall","src":"7739:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7731:4:25","nodeType":"YulIdentifier","src":"7731:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7773:9:25","nodeType":"YulIdentifier","src":"7773:9:25"},{"arguments":[{"name":"value0","nativeSrc":"7788:6:25","nodeType":"YulIdentifier","src":"7788:6:25"},{"kind":"number","nativeSrc":"7796:42:25","nodeType":"YulLiteral","src":"7796:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"7784:3:25","nodeType":"YulIdentifier","src":"7784:3:25"},"nativeSrc":"7784:55:25","nodeType":"YulFunctionCall","src":"7784:55:25"}],"functionName":{"name":"mstore","nativeSrc":"7766:6:25","nodeType":"YulIdentifier","src":"7766:6:25"},"nativeSrc":"7766:74:25","nodeType":"YulFunctionCall","src":"7766:74:25"},"nativeSrc":"7766:74:25","nodeType":"YulExpressionStatement","src":"7766:74:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7620:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7690:9:25","nodeType":"YulTypedName","src":"7690:9:25","type":""},{"name":"value0","nativeSrc":"7701:6:25","nodeType":"YulTypedName","src":"7701:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7712:4:25","nodeType":"YulTypedName","src":"7712:4:25","type":""}],"src":"7620:226:25"},{"body":{"nativeSrc":"7899:231:25","nodeType":"YulBlock","src":"7899:231:25","statements":[{"nativeSrc":"7909:16:25","nodeType":"YulAssignment","src":"7909:16:25","value":{"arguments":[{"name":"x","nativeSrc":"7920:1:25","nodeType":"YulIdentifier","src":"7920:1:25"},{"name":"y","nativeSrc":"7923:1:25","nodeType":"YulIdentifier","src":"7923:1:25"}],"functionName":{"name":"add","nativeSrc":"7916:3:25","nodeType":"YulIdentifier","src":"7916:3:25"},"nativeSrc":"7916:9:25","nodeType":"YulFunctionCall","src":"7916:9:25"},"variableNames":[{"name":"sum","nativeSrc":"7909:3:25","nodeType":"YulIdentifier","src":"7909:3:25"}]},{"body":{"nativeSrc":"7956:168:25","nodeType":"YulBlock","src":"7956:168:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7977:1:25","nodeType":"YulLiteral","src":"7977:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7980:77:25","nodeType":"YulLiteral","src":"7980:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7970:6:25","nodeType":"YulIdentifier","src":"7970:6:25"},"nativeSrc":"7970:88:25","nodeType":"YulFunctionCall","src":"7970:88:25"},"nativeSrc":"7970:88:25","nodeType":"YulExpressionStatement","src":"7970:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8078:1:25","nodeType":"YulLiteral","src":"8078:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"8081:4:25","nodeType":"YulLiteral","src":"8081:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8071:6:25","nodeType":"YulIdentifier","src":"8071:6:25"},"nativeSrc":"8071:15:25","nodeType":"YulFunctionCall","src":"8071:15:25"},"nativeSrc":"8071:15:25","nodeType":"YulExpressionStatement","src":"8071:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8106:1:25","nodeType":"YulLiteral","src":"8106:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"8109:4:25","nodeType":"YulLiteral","src":"8109:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8099:6:25","nodeType":"YulIdentifier","src":"8099:6:25"},"nativeSrc":"8099:15:25","nodeType":"YulFunctionCall","src":"8099:15:25"},"nativeSrc":"8099:15:25","nodeType":"YulExpressionStatement","src":"8099:15:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7940:1:25","nodeType":"YulIdentifier","src":"7940:1:25"},{"name":"sum","nativeSrc":"7943:3:25","nodeType":"YulIdentifier","src":"7943:3:25"}],"functionName":{"name":"gt","nativeSrc":"7937:2:25","nodeType":"YulIdentifier","src":"7937:2:25"},"nativeSrc":"7937:10:25","nodeType":"YulFunctionCall","src":"7937:10:25"},"nativeSrc":"7934:190:25","nodeType":"YulIf","src":"7934:190:25"}]},"name":"checked_add_t_uint256","nativeSrc":"7851:279:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7882:1:25","nodeType":"YulTypedName","src":"7882:1:25","type":""},{"name":"y","nativeSrc":"7885:1:25","nodeType":"YulTypedName","src":"7885:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7891:3:25","nodeType":"YulTypedName","src":"7891:3:25","type":""}],"src":"7851:279:25"},{"body":{"nativeSrc":"8264:168:25","nodeType":"YulBlock","src":"8264:168:25","statements":[{"nativeSrc":"8274:26:25","nodeType":"YulAssignment","src":"8274:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8286:9:25","nodeType":"YulIdentifier","src":"8286:9:25"},{"kind":"number","nativeSrc":"8297:2:25","nodeType":"YulLiteral","src":"8297:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8282:3:25","nodeType":"YulIdentifier","src":"8282:3:25"},"nativeSrc":"8282:18:25","nodeType":"YulFunctionCall","src":"8282:18:25"},"variableNames":[{"name":"tail","nativeSrc":"8274:4:25","nodeType":"YulIdentifier","src":"8274:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8316:9:25","nodeType":"YulIdentifier","src":"8316:9:25"},{"arguments":[{"name":"value0","nativeSrc":"8331:6:25","nodeType":"YulIdentifier","src":"8331:6:25"},{"kind":"number","nativeSrc":"8339:42:25","nodeType":"YulLiteral","src":"8339:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8327:3:25","nodeType":"YulIdentifier","src":"8327:3:25"},"nativeSrc":"8327:55:25","nodeType":"YulFunctionCall","src":"8327:55:25"}],"functionName":{"name":"mstore","nativeSrc":"8309:6:25","nodeType":"YulIdentifier","src":"8309:6:25"},"nativeSrc":"8309:74:25","nodeType":"YulFunctionCall","src":"8309:74:25"},"nativeSrc":"8309:74:25","nodeType":"YulExpressionStatement","src":"8309:74:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8403:9:25","nodeType":"YulIdentifier","src":"8403:9:25"},{"kind":"number","nativeSrc":"8414:2:25","nodeType":"YulLiteral","src":"8414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8399:3:25","nodeType":"YulIdentifier","src":"8399:3:25"},"nativeSrc":"8399:18:25","nodeType":"YulFunctionCall","src":"8399:18:25"},{"name":"value1","nativeSrc":"8419:6:25","nodeType":"YulIdentifier","src":"8419:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8392:6:25","nodeType":"YulIdentifier","src":"8392:6:25"},"nativeSrc":"8392:34:25","nodeType":"YulFunctionCall","src":"8392:34:25"},"nativeSrc":"8392:34:25","nodeType":"YulExpressionStatement","src":"8392:34:25"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"8135:297:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8225:9:25","nodeType":"YulTypedName","src":"8225:9:25","type":""},{"name":"value1","nativeSrc":"8236:6:25","nodeType":"YulTypedName","src":"8236:6:25","type":""},{"name":"value0","nativeSrc":"8244:6:25","nodeType":"YulTypedName","src":"8244:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8255:4:25","nodeType":"YulTypedName","src":"8255:4:25","type":""}],"src":"8135:297:25"},{"body":{"nativeSrc":"8650:299:25","nodeType":"YulBlock","src":"8650:299:25","statements":[{"nativeSrc":"8660:27:25","nodeType":"YulAssignment","src":"8660:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8672:9:25","nodeType":"YulIdentifier","src":"8672:9:25"},{"kind":"number","nativeSrc":"8683:3:25","nodeType":"YulLiteral","src":"8683:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8668:3:25","nodeType":"YulIdentifier","src":"8668:3:25"},"nativeSrc":"8668:19:25","nodeType":"YulFunctionCall","src":"8668:19:25"},"variableNames":[{"name":"tail","nativeSrc":"8660:4:25","nodeType":"YulIdentifier","src":"8660:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8703:9:25","nodeType":"YulIdentifier","src":"8703:9:25"},{"name":"value0","nativeSrc":"8714:6:25","nodeType":"YulIdentifier","src":"8714:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8696:6:25","nodeType":"YulIdentifier","src":"8696:6:25"},"nativeSrc":"8696:25:25","nodeType":"YulFunctionCall","src":"8696:25:25"},"nativeSrc":"8696:25:25","nodeType":"YulExpressionStatement","src":"8696:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8741:9:25","nodeType":"YulIdentifier","src":"8741:9:25"},{"kind":"number","nativeSrc":"8752:2:25","nodeType":"YulLiteral","src":"8752:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8737:3:25","nodeType":"YulIdentifier","src":"8737:3:25"},"nativeSrc":"8737:18:25","nodeType":"YulFunctionCall","src":"8737:18:25"},{"name":"value1","nativeSrc":"8757:6:25","nodeType":"YulIdentifier","src":"8757:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8730:6:25","nodeType":"YulIdentifier","src":"8730:6:25"},"nativeSrc":"8730:34:25","nodeType":"YulFunctionCall","src":"8730:34:25"},"nativeSrc":"8730:34:25","nodeType":"YulExpressionStatement","src":"8730:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8784:9:25","nodeType":"YulIdentifier","src":"8784:9:25"},{"kind":"number","nativeSrc":"8795:2:25","nodeType":"YulLiteral","src":"8795:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8780:3:25","nodeType":"YulIdentifier","src":"8780:3:25"},"nativeSrc":"8780:18:25","nodeType":"YulFunctionCall","src":"8780:18:25"},{"name":"value2","nativeSrc":"8800:6:25","nodeType":"YulIdentifier","src":"8800:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8773:6:25","nodeType":"YulIdentifier","src":"8773:6:25"},"nativeSrc":"8773:34:25","nodeType":"YulFunctionCall","src":"8773:34:25"},"nativeSrc":"8773:34:25","nodeType":"YulExpressionStatement","src":"8773:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8827:9:25","nodeType":"YulIdentifier","src":"8827:9:25"},{"kind":"number","nativeSrc":"8838:2:25","nodeType":"YulLiteral","src":"8838:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8823:3:25","nodeType":"YulIdentifier","src":"8823:3:25"},"nativeSrc":"8823:18:25","nodeType":"YulFunctionCall","src":"8823:18:25"},{"name":"value3","nativeSrc":"8843:6:25","nodeType":"YulIdentifier","src":"8843:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8816:6:25","nodeType":"YulIdentifier","src":"8816:6:25"},"nativeSrc":"8816:34:25","nodeType":"YulFunctionCall","src":"8816:34:25"},"nativeSrc":"8816:34:25","nodeType":"YulExpressionStatement","src":"8816:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8870:9:25","nodeType":"YulIdentifier","src":"8870:9:25"},{"kind":"number","nativeSrc":"8881:3:25","nodeType":"YulLiteral","src":"8881:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8866:3:25","nodeType":"YulIdentifier","src":"8866:3:25"},"nativeSrc":"8866:19:25","nodeType":"YulFunctionCall","src":"8866:19:25"},{"arguments":[{"name":"value4","nativeSrc":"8891:6:25","nodeType":"YulIdentifier","src":"8891:6:25"},{"kind":"number","nativeSrc":"8899:42:25","nodeType":"YulLiteral","src":"8899:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8887:3:25","nodeType":"YulIdentifier","src":"8887:3:25"},"nativeSrc":"8887:55:25","nodeType":"YulFunctionCall","src":"8887:55:25"}],"functionName":{"name":"mstore","nativeSrc":"8859:6:25","nodeType":"YulIdentifier","src":"8859:6:25"},"nativeSrc":"8859:84:25","nodeType":"YulFunctionCall","src":"8859:84:25"},"nativeSrc":"8859:84:25","nodeType":"YulExpressionStatement","src":"8859:84:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8437:512:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8587:9:25","nodeType":"YulTypedName","src":"8587:9:25","type":""},{"name":"value4","nativeSrc":"8598:6:25","nodeType":"YulTypedName","src":"8598:6:25","type":""},{"name":"value3","nativeSrc":"8606:6:25","nodeType":"YulTypedName","src":"8606:6:25","type":""},{"name":"value2","nativeSrc":"8614:6:25","nodeType":"YulTypedName","src":"8614:6:25","type":""},{"name":"value1","nativeSrc":"8622:6:25","nodeType":"YulTypedName","src":"8622:6:25","type":""},{"name":"value0","nativeSrc":"8630:6:25","nodeType":"YulTypedName","src":"8630:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8641:4:25","nodeType":"YulTypedName","src":"8641:4:25","type":""}],"src":"8437:512:25"},{"body":{"nativeSrc":"9135:217:25","nodeType":"YulBlock","src":"9135:217:25","statements":[{"nativeSrc":"9145:27:25","nodeType":"YulAssignment","src":"9145:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"9157:9:25","nodeType":"YulIdentifier","src":"9157:9:25"},{"kind":"number","nativeSrc":"9168:3:25","nodeType":"YulLiteral","src":"9168:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9153:3:25","nodeType":"YulIdentifier","src":"9153:3:25"},"nativeSrc":"9153:19:25","nodeType":"YulFunctionCall","src":"9153:19:25"},"variableNames":[{"name":"tail","nativeSrc":"9145:4:25","nodeType":"YulIdentifier","src":"9145:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9188:9:25","nodeType":"YulIdentifier","src":"9188:9:25"},{"name":"value0","nativeSrc":"9199:6:25","nodeType":"YulIdentifier","src":"9199:6:25"}],"functionName":{"name":"mstore","nativeSrc":"9181:6:25","nodeType":"YulIdentifier","src":"9181:6:25"},"nativeSrc":"9181:25:25","nodeType":"YulFunctionCall","src":"9181:25:25"},"nativeSrc":"9181:25:25","nodeType":"YulExpressionStatement","src":"9181:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9226:9:25","nodeType":"YulIdentifier","src":"9226:9:25"},{"kind":"number","nativeSrc":"9237:2:25","nodeType":"YulLiteral","src":"9237:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9222:3:25","nodeType":"YulIdentifier","src":"9222:3:25"},"nativeSrc":"9222:18:25","nodeType":"YulFunctionCall","src":"9222:18:25"},{"arguments":[{"name":"value1","nativeSrc":"9246:6:25","nodeType":"YulIdentifier","src":"9246:6:25"},{"kind":"number","nativeSrc":"9254:4:25","nodeType":"YulLiteral","src":"9254:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9242:3:25","nodeType":"YulIdentifier","src":"9242:3:25"},"nativeSrc":"9242:17:25","nodeType":"YulFunctionCall","src":"9242:17:25"}],"functionName":{"name":"mstore","nativeSrc":"9215:6:25","nodeType":"YulIdentifier","src":"9215:6:25"},"nativeSrc":"9215:45:25","nodeType":"YulFunctionCall","src":"9215:45:25"},"nativeSrc":"9215:45:25","nodeType":"YulExpressionStatement","src":"9215:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9280:9:25","nodeType":"YulIdentifier","src":"9280:9:25"},{"kind":"number","nativeSrc":"9291:2:25","nodeType":"YulLiteral","src":"9291:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9276:3:25","nodeType":"YulIdentifier","src":"9276:3:25"},"nativeSrc":"9276:18:25","nodeType":"YulFunctionCall","src":"9276:18:25"},{"name":"value2","nativeSrc":"9296:6:25","nodeType":"YulIdentifier","src":"9296:6:25"}],"functionName":{"name":"mstore","nativeSrc":"9269:6:25","nodeType":"YulIdentifier","src":"9269:6:25"},"nativeSrc":"9269:34:25","nodeType":"YulFunctionCall","src":"9269:34:25"},"nativeSrc":"9269:34:25","nodeType":"YulExpressionStatement","src":"9269:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9323:9:25","nodeType":"YulIdentifier","src":"9323:9:25"},{"kind":"number","nativeSrc":"9334:2:25","nodeType":"YulLiteral","src":"9334:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9319:3:25","nodeType":"YulIdentifier","src":"9319:3:25"},"nativeSrc":"9319:18:25","nodeType":"YulFunctionCall","src":"9319:18:25"},{"name":"value3","nativeSrc":"9339:6:25","nodeType":"YulIdentifier","src":"9339:6:25"}],"functionName":{"name":"mstore","nativeSrc":"9312:6:25","nodeType":"YulIdentifier","src":"9312:6:25"},"nativeSrc":"9312:34:25","nodeType":"YulFunctionCall","src":"9312:34:25"},"nativeSrc":"9312:34:25","nodeType":"YulExpressionStatement","src":"9312:34:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"8954:398:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9080:9:25","nodeType":"YulTypedName","src":"9080:9:25","type":""},{"name":"value3","nativeSrc":"9091:6:25","nodeType":"YulTypedName","src":"9091:6:25","type":""},{"name":"value2","nativeSrc":"9099:6:25","nodeType":"YulTypedName","src":"9099:6:25","type":""},{"name":"value1","nativeSrc":"9107:6:25","nodeType":"YulTypedName","src":"9107:6:25","type":""},{"name":"value0","nativeSrc":"9115:6:25","nodeType":"YulTypedName","src":"9115:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9126:4:25","nodeType":"YulTypedName","src":"9126:4:25","type":""}],"src":"8954:398:25"},{"body":{"nativeSrc":"9389:152:25","nodeType":"YulBlock","src":"9389:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9406:1:25","nodeType":"YulLiteral","src":"9406:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9409:77:25","nodeType":"YulLiteral","src":"9409:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9399:6:25","nodeType":"YulIdentifier","src":"9399:6:25"},"nativeSrc":"9399:88:25","nodeType":"YulFunctionCall","src":"9399:88:25"},"nativeSrc":"9399:88:25","nodeType":"YulExpressionStatement","src":"9399:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9503:1:25","nodeType":"YulLiteral","src":"9503:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"9506:4:25","nodeType":"YulLiteral","src":"9506:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"9496:6:25","nodeType":"YulIdentifier","src":"9496:6:25"},"nativeSrc":"9496:15:25","nodeType":"YulFunctionCall","src":"9496:15:25"},"nativeSrc":"9496:15:25","nodeType":"YulExpressionStatement","src":"9496:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9527:1:25","nodeType":"YulLiteral","src":"9527:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9530:4:25","nodeType":"YulLiteral","src":"9530:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9520:6:25","nodeType":"YulIdentifier","src":"9520:6:25"},"nativeSrc":"9520:15:25","nodeType":"YulFunctionCall","src":"9520:15:25"},"nativeSrc":"9520:15:25","nodeType":"YulExpressionStatement","src":"9520:15:25"}]},"name":"panic_error_0x21","nativeSrc":"9357:184:25","nodeType":"YulFunctionDefinition","src":"9357:184:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xff00000000000000000000000000000000000000000000000000000000000000))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3657":[{"length":32,"start":2684}],"3659":[{"length":32,"start":2642}],"3661":[{"length":32,"start":2600}],"3663":[{"length":32,"start":2765}],"3665":[{"length":32,"start":2805}],"3668":[{"length":32,"start":3136}],"3671":[{"length":32,"start":3181}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101985760003560e01c806370a08231116100e3578063a217fddf1161008c578063d539139311610066578063d539139314610373578063d547741f1461039a578063dd62ed3e146103ad57600080fd5b8063a217fddf14610345578063a9059cbb1461034d578063d505accf1461036057600080fd5b806384b0196e116100bd57806384b0196e146102e957806391d148541461030457806395d89b411461033d57600080fd5b806370a082311461029a57806379cc6790146102c35780637ecebe00146102d657600080fd5b80632f2ff15d1161014557806336568abe1161011f57806336568abe1461026157806340c10f191461027457806342966c681461028757600080fd5b80632f2ff15d14610235578063313ce5671461024a5780633644e5151461025957600080fd5b806318160ddd1161017657806318160ddd146101ed57806323b872dd146101ff578063248a9ca31461021257600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063095ea7b3146101da575b600080fd5b6101b06101ab3660046112bf565b6103e6565b60405190151581526020015b60405180910390f35b6101cd61047f565b6040516101bc919061134e565b6101b06101e836600461137d565b610511565b6002545b6040519081526020016101bc565b6101b061020d3660046113a7565b610529565b6101f16102203660046113e3565b60009081526005602052604090206001015490565b6102486102433660046113fc565b61054d565b005b604051601281526020016101bc565b6101f1610578565b61024861026f3660046113fc565b610587565b61024861028236600461137d565b6105d8565b6102486102953660046113e3565b61060c565b6101f16102a8366004611428565b6001600160a01b031660009081526020819052604090205490565b6102486102d136600461137d565b610619565b6101f16102e4366004611428565b610632565b6102f1610650565b6040516101bc9796959493929190611443565b6101b06103123660046113fc565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6101cd6106b2565b6101f1600081565b6101b061035b36600461137d565b6106c1565b61024861036e3660046114f8565b6106cf565b6101f17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102486103a83660046113fc565b610840565b6101f16103bb36600461156b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061047957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461048e90611595565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90611595565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b60003361051f818585610865565b5060019392505050565b600033610537858285610872565b610542858585610904565b506001949350505050565b60008281526005602052604090206001015461056881610963565b610572838361096d565b50505050565b6000610582610a1b565b905090565b6001600160a01b03811633146105c9576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105d38282610b46565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060281610963565b6105d38383610bcd565b6106163382610c03565b50565b610624823383610872565b61062e8282610c03565b5050565b6001600160a01b038116600090815260086020526040812054610479565b600060608060008060006060610664610c39565b61066c610c66565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60606004805461048e90611595565b60003361051f818585610904565b83421115610711576040517f62791302000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861075e8c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107b982610c93565b905060006107c982878787610cdb565b9050896001600160a01b0316816001600160a01b031614610829576040517f4b800e460000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301528b166024820152604401610708565b6108348a8a8a610865565b50505050505050505050565b60008281526005602052604090206001015461085b81610963565b6105728383610b46565b6105d38383836001610d09565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561057257818110156108f5576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024810182905260448101839052606401610708565b61057284848484036000610d09565b6001600160a01b03831661092e57604051634b637e8f60e11b815260006004820152602401610708565b6001600160a01b0382166109585760405163ec442f0560e01b815260006004820152602401610708565b6105d3838383610e10565b6106168133610f53565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff16610a135760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556109cb3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610479565b506000610479565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610a7457507f000000000000000000000000000000000000000000000000000000000000000046145b15610a9e57507f000000000000000000000000000000000000000000000000000000000000000090565b610582604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff1615610a135760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610479565b6001600160a01b038216610bf75760405163ec442f0560e01b815260006004820152602401610708565b61062e60008383610e10565b6001600160a01b038216610c2d57604051634b637e8f60e11b815260006004820152602401610708565b61062e82600083610e10565b60606105827f00000000000000000000000000000000000000000000000000000000000000006006610fc1565b60606105827f00000000000000000000000000000000000000000000000000000000000000006007610fc1565b6000610479610ca0610a1b565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600080610ced8888888861106c565b925092509250610cfd828261113b565b50909695505050505050565b6001600160a01b038416610d4c576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610708565b6001600160a01b038316610d8f576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610708565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561057257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e0291815260200190565b60405180910390a350505050565b6001600160a01b038316610e3b578060026000828254610e3091906115cf565b90915550610ec69050565b6001600160a01b03831660009081526020819052604090205481811015610ea7576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401610708565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ee257600280548290039055610f01565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4691815260200190565b60405180910390a3505050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff1661062e576040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260248101839052604401610708565b606060ff8314610fdb57610fd48361123f565b9050610479565b818054610fe790611595565b80601f016020809104026020016040519081016040528092919081815260200182805461101390611595565b80156110605780601f1061103557610100808354040283529160200191611060565b820191906000526020600020905b81548152906001019060200180831161104357829003601f168201915b50505050509050610479565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156110a75750600091506003905082611131565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156110fb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661112757506000925060019150829050611131565b9250600091508190505b9450945094915050565b600082600381111561114f5761114f6115f0565b03611158575050565b600182600381111561116c5761116c6115f0565b036111a3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028260038111156111b7576111b76115f0565b036111f1576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610708565b6003826003811115611205576112056115f0565b0361062e576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610708565b6060600061124c8361127e565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f811115610479576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000602082840312156112d157600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461130157600080fd5b9392505050565b6000815180845260005b8181101561132e57602081850181015186830182015201611312565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006113016020830184611308565b80356001600160a01b038116811461137857600080fd5b919050565b6000806040838503121561139057600080fd5b61139983611361565b946020939093013593505050565b6000806000606084860312156113bc57600080fd5b6113c584611361565b92506113d360208501611361565b9150604084013590509250925092565b6000602082840312156113f557600080fd5b5035919050565b6000806040838503121561140f57600080fd5b8235915061141f60208401611361565b90509250929050565b60006020828403121561143a57600080fd5b61130182611361565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0602084015261148060e084018a611308565b8381036040850152611492818a611308565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b818110156114e6578351835292840192918401916001016114ca565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561151357600080fd5b61151c88611361565b965061152a60208901611361565b95506040880135945060608801359350608088013560ff8116811461154e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561157e57600080fd5b61158783611361565b915061141f60208401611361565b600181811c908216806115a957607f821691505b6020821081036115c957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561047957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212204c94f3076a821291307ddce673a29f764233ca4ec4908894801e4d2e68ced64d64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x1F1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x479 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x51F DUP2 DUP6 DUP6 PUSH2 0x865 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x537 DUP6 DUP3 DUP6 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x542 DUP6 DUP6 DUP6 PUSH2 0x904 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x568 DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x572 DUP4 DUP4 PUSH2 0x96D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D3 DUP3 DUP3 PUSH2 0xB46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x602 DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x616 CALLER DUP3 PUSH2 0xC03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x624 DUP3 CALLER DUP4 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x62E DUP3 DUP3 PUSH2 0xC03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x664 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x66C PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x51F DUP2 DUP6 DUP6 PUSH2 0x904 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x75E DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7B9 DUP3 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C9 DUP3 DUP8 DUP8 DUP8 PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x834 DUP11 DUP11 DUP11 PUSH2 0x865 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x85B DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x572 DUP4 DUP4 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x572 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x572 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 DUP4 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x616 DUP2 CALLER PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA13 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9CB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x479 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xA74 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA9E JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x582 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 DUP4 DUP4 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0x62E DUP3 PUSH1 0x0 DUP4 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x582 PUSH32 0x0 PUSH1 0x6 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x582 PUSH32 0x0 PUSH1 0x7 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH2 0xCA0 PUSH2 0xA1B JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xCED DUP9 DUP9 DUP9 DUP9 PUSH2 0x106C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xCFD DUP3 DUP3 PUSH2 0x113B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x572 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE02 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE3B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xEC6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEE2 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF46 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xFDB JUMPI PUSH2 0xFD4 DUP4 PUSH2 0x123F JUMP JUMPDEST SWAP1 POP PUSH2 0x479 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xFE7 SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1013 SWAP1 PUSH2 0x1595 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1060 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1035 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1060 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1043 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x10A7 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1127 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x114F JUMPI PUSH2 0x114F PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x1158 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116C PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B7 PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x11F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1205 PUSH2 0x15F0 JUMP JUMPDEST SUB PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x124C DUP4 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x132E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1312 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1301 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1308 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1399 DUP4 PUSH2 0x1361 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C5 DUP5 PUSH2 0x1361 JUMP JUMPDEST SWAP3 POP PUSH2 0x13D3 PUSH1 0x20 DUP6 ADD PUSH2 0x1361 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x141F PUSH1 0x20 DUP5 ADD PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x1361 JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1480 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1308 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1492 DUP2 DUP11 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14CA JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151C DUP9 PUSH2 0x1361 JUMP JUMPDEST SWAP7 POP PUSH2 0x152A PUSH1 0x20 DUP10 ADD PUSH2 0x1361 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 DUP4 PUSH2 0x1361 JUMP JUMPDEST SWAP2 POP PUSH2 0x141F PUSH1 0x20 DUP5 ADD PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP5 RETURN SMOD PUSH11 0x821291307DDCE673A29F76 TIMESTAMP CALLER 0xCA 0x4E 0xC4 SWAP1 DUP9 SWAP5 DUP1 0x1E 0x4D 0x2E PUSH9 0xCED64D64736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"445:504:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;516:14:25;;509:22;491:41;;479:2;464:18;2565:202:0;;;;;;;;1760:89:4;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;;1802:25:25;;;1790:2;1775:18;2830:97:4;1656:177:25;4757:244:4;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;:::-;;2688:82:4;;;2761:2;2939:36:25;;2927:2;2912:18;2688:82:4;2797:184:25;2659:112:7;;;:::i;5328:245:0:-;;;;;;:::i;:::-;;:::i;842:105:24:-;;;;;;:::i;:::-;;:::i;618:87:6:-;;;;;;:::i;:::-;;:::i;2985:116:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:4;3050:7;3076:18;;;;;;;;;;;;2985:116;1021:158:6;;;;;;:::i;:::-;;:::i;2409:143:7:-;;;;;;:::i;:::-;;:::i;5243:557:17:-;;;:::i;:::-;;;;;;;;;;;;;:::i;2854:136:0:-;;;;;;:::i;:::-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136;1962:93:4;;;:::i;2187:49:0:-;;2232:4;2187:49;;3296:178:4;;;;;;:::i;:::-;;:::i;1683:672:7:-;;;;;;:::i;:::-;;:::i;527:62:24:-;;565:24;527:62;;4642:138:0;;;;;;:::i;:::-;;:::i;3532:140:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:4;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2565:202:0;2650:4;2673:47;;;2688:32;2673:47;;:87;;-1:-1:-1;877:25:19;862:40;;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:10;4106:31:4;735:10:10;4122:7:4;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:4;;3979:186;-1:-1:-1;;;3979:186:4:o;4757:244::-;4844:4;735:10:10;4900:37:4;4916:4;735:10:10;4931:5:4;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:4;;4757:244;-1:-1:-1;;;;4757:244:4:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2659:112:7:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:10;5421:34:0;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;842:105:24:-;565:24;2464:16:0;2475:4;2464:10;:16::i;:::-;923:17:24::1;929:2;933:6;923:5;:17::i;618:87:6:-:0;672:26;735:10:10;692:5:6;672;:26::i;:::-;618:87;:::o;1021:158::-;1096:45;1112:7;735:10:10;1135:5:6;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2409:143:7:-;-1:-1:-1;;;;;624:14:11;;2500:7:7;624:14:11;;;:7;:14;;;;;;2526:19:7;538:107:11;5243:557:17;5341:13;5368:18;5400:21;5435:15;5464:25;5503:12;5529:27;5632:13;:11;:13::i;:::-;5659:16;:14;:16::i;:::-;5767;;;5751:1;5767:16;;;;;;;;;5581:212;;;;-1:-1:-1;5581:212:17;;-1:-1:-1;5689:13:17;;-1:-1:-1;5724:4:17;;-1:-1:-1;5751:1:17;-1:-1:-1;5767:16:17;-1:-1:-1;5581:212:17;-1:-1:-1;5243:557:17:o;1962:93:4:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:10;3419:27:4;735:10:10;3436:2:4;3440:5;3419:9;:27::i;1683:672:7:-;1904:8;1886:15;:26;1882:97;;;1935:33;;;;;;;;1802:25:25;;;1775:18;;1935:33:7;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:11;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:7;2020:78;;;;;;6583:25:25;;;;-1:-1:-1;;;;;6705:15:25;;;6685:18;;;6678:43;6757:15;;;;6737:18;;;6730:43;6789:18;;;6782:34;6832:19;;;6825:35;6876:19;;;6869:35;;;6555:19;;2020:78:7;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:7;:6;-1:-1:-1;;;;;2223:15:7;;2219:88;;2261:35;;;;;-1:-1:-1;;;;;7168:15:25;;;2261:35:7;;;7150:34:25;7220:15;;7200:18;;;7193:43;7062:18;;2261:35:7;6915:327:25;2219:88:7;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;8707:128:4:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:4;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:4;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;;;;-1:-1:-1;;;;;7467:55:25;;10668:60:4;;;7449:74:25;7539:18;;;7532:34;;;7582:18;;;7575:34;;;7422:18;;10668:60:4;7247:368:25;10613:130:4;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:4;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:4;;5525:1;5498:30;;;7766:74:25;7739:18;;5498:30:4;7620:226:25;5453:86:4;-1:-1:-1;;;;;5552:16:4;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:4;;5620:1;5591:32;;;7766:74:25;7739:18;;5591:32:4;7620:226:25;5548:86:4;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3199:103:0:-;3265:30;3276:4;735:10:10;3265::0;:30::i;6179:316::-;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:10;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;3945:262:17;3998:7;4029:4;-1:-1:-1;;;;;4038:11:17;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:17;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;8696:25:25;4326:11:17;8737:18:25;;;8730:34;;;;4339:14:17;8780:18:25;;;8773:34;4355:13:17;8823:18:25;;;8816:34;4378:4:17;8866:19:25;;;8859:84;4268:7:17;;8668:19:25;;4304:80:17;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;6732:317:0;6810:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:10;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;7439:208:4;-1:-1:-1;;;;;7509:21:4;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:4;;7582:1;7553:32;;;7766:74:25;7739:18;;7553:32:4;7620:226:25;7505:91:4;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:4;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:4;;8106:1;8079:30;;;7766:74:25;7739:18;;8079:30:4;7620:226:25;8031:89:4;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;6120:126:17:-;6166:13;6198:41;:5;6225:13;6198:26;:41::i;6572:135::-;6621:13;6653:47;:8;6683:16;6653:29;:47::i;5017:176::-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:18;4043:11;4079:10;4067:23;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:16;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:16;;6887:260;-1:-1:-1;;;;;;6887:260:16:o;9682:432:4:-;-1:-1:-1;;;;;9794:19:4;;9790:89;;9836:32;;;;;9865:1;9836:32;;;7766:74:25;7739:18;;9836:32:4;7620:226:25;9790:89:4;-1:-1:-1;;;;;9892:21:4;;9888:90;;9936:31;;;;;9964:1;9936:31;;;7766:74:25;7739:18;;9936:31:4;7620:226:25;9888:90:4;-1:-1:-1;;;;;9987:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:4;10075:5;-1:-1:-1;;;;;10066:31:4;;10091:5;10066:31;;;;1802:25:25;;1790:2;1775:18;;1656:177;10066:31:4;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:4;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:4;;-1:-1:-1;6074:540:4;;-1:-1:-1;;;;;6288:15:4;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;;;;-1:-1:-1;;;;;7467:55:25;;6367:50:4;;;7449:74:25;7539:18;;;7532:34;;;7582:18;;;7575:34;;;7422:18;;6367:50:4;7247:368:25;6317:115:4;-1:-1:-1;;;;;6552:15:4;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:4;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:4;7073:4;-1:-1:-1;;;;;7064:25:4;;7083:5;7064:25;;;;1802::25;;1790:2;1775:18;;1656:177;7064:25:4;;;;;;;;5989:1107;;;:::o;3432:197:0:-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;3515:108;;3565:47;;;;;-1:-1:-1;;;;;8327:55:25;;3565:47:0;;;8309:74:25;8399:18;;;8392:34;;;8282:18;;3565:47:0;8135:297:25;3368:267:13;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:16;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:16;;-1:-1:-1;6385:30:16;;-1:-1:-1;6417:1:16;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;9181:25:25;;;9254:4;9242:17;;9222:18;;;9215:45;;;;9276:18;;;9269:34;;;9319:18;;;9312:34;;;6541:24:16;;9153:19:25;;6541:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:16;;-1:-1:-1;;6541:24:16;;;-1:-1:-1;;;;;;;6579:20:16;;6575:113;;-1:-1:-1;6631:1:16;;-1:-1:-1;6635:29:16;;-1:-1:-1;6631:1:16;;-1:-1:-1;6615:62:16;;6575:113;6706:6;-1:-1:-1;6714:20:16;;-1:-1:-1;6714:20:16;;-1:-1:-1;5203:1551:16;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;;;;;;;1802:25:25;;;1775:18;;7634:46:16;1656:177:25;7563:243:16;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;;;;;;;1802:25:25;;;1775:18;;7763:32:16;1656:177:25;2078:378:13;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:13;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:13;;;-1:-1:-1;2408:4:13;2399:14;;2392:28;;;;-1:-1:-1;2363:16:13;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;;;;;;;;;;;;;14:332:25;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:25:o;543:423::-;585:3;623:5;617:12;650:6;645:3;638:19;675:1;685:162;699:6;696:1;693:13;685:162;;;761:4;817:13;;;813:22;;807:29;789:11;;;785:20;;778:59;714:12;685:162;;;689:3;892:1;885:4;876:6;871:3;867:16;863:27;856:38;955:4;948:2;944:7;939:2;931:6;927:15;923:29;918:3;914:39;910:50;903:57;;;543:423;;;;:::o;971:220::-;1120:2;1109:9;1102:21;1083:4;1140:45;1181:2;1170:9;1166:18;1158:6;1140:45;:::i;1196:196::-;1264:20;;-1:-1:-1;;;;;1313:54:25;;1303:65;;1293:93;;1382:1;1379;1372:12;1293:93;1196:196;;;:::o;1397:254::-;1465:6;1473;1526:2;1514:9;1505:7;1501:23;1497:32;1494:52;;;1542:1;1539;1532:12;1494:52;1565:29;1584:9;1565:29;:::i;:::-;1555:39;1641:2;1626:18;;;;1613:32;;-1:-1:-1;;;1397:254:25:o;1838:328::-;1915:6;1923;1931;1984:2;1972:9;1963:7;1959:23;1955:32;1952:52;;;2000:1;1997;1990:12;1952:52;2023:29;2042:9;2023:29;:::i;:::-;2013:39;;2071:38;2105:2;2094:9;2090:18;2071:38;:::i;:::-;2061:48;;2156:2;2145:9;2141:18;2128:32;2118:42;;1838:328;;;;;:::o;2171:180::-;2230:6;2283:2;2271:9;2262:7;2258:23;2254:32;2251:52;;;2299:1;2296;2289:12;2251:52;-1:-1:-1;2322:23:25;;2171:180;-1:-1:-1;2171:180:25:o;2538:254::-;2606:6;2614;2667:2;2655:9;2646:7;2642:23;2638:32;2635:52;;;2683:1;2680;2673:12;2635:52;2719:9;2706:23;2696:33;;2748:38;2782:2;2771:9;2767:18;2748:38;:::i;:::-;2738:48;;2538:254;;;;;:::o;3171:186::-;3230:6;3283:2;3271:9;3262:7;3258:23;3254:32;3251:52;;;3299:1;3296;3289:12;3251:52;3322:29;3341:9;3322:29;:::i;3362:1335::-;3759:66;3751:6;3747:79;3736:9;3729:98;3710:4;3846:2;3884:3;3879:2;3868:9;3864:18;3857:31;3911:46;3952:3;3941:9;3937:19;3929:6;3911:46;:::i;:::-;4005:9;3997:6;3993:22;3988:2;3977:9;3973:18;3966:50;4039:33;4065:6;4057;4039:33;:::i;:::-;4103:2;4088:18;;4081:34;;;-1:-1:-1;;;;;4152:55:25;;4146:3;4131:19;;4124:84;4239:3;4224:19;;4217:35;;;4289:22;;;4283:3;4268:19;;4261:51;4361:13;;4383:22;;;4433:2;4459:15;;;;-1:-1:-1;4421:15:25;;;;-1:-1:-1;4502:169:25;4516:6;4513:1;4510:13;4502:169;;;4577:13;;4565:26;;4646:15;;;;4611:12;;;;4538:1;4531:9;4502:169;;;-1:-1:-1;4688:3:25;;3362:1335;-1:-1:-1;;;;;;;;;;;;3362:1335:25:o;4702:693::-;4813:6;4821;4829;4837;4845;4853;4861;4914:3;4902:9;4893:7;4889:23;4885:33;4882:53;;;4931:1;4928;4921:12;4882:53;4954:29;4973:9;4954:29;:::i;:::-;4944:39;;5002:38;5036:2;5025:9;5021:18;5002:38;:::i;:::-;4992:48;;5087:2;5076:9;5072:18;5059:32;5049:42;;5138:2;5127:9;5123:18;5110:32;5100:42;;5192:3;5181:9;5177:19;5164:33;5237:4;5230:5;5226:16;5219:5;5216:27;5206:55;;5257:1;5254;5247:12;5206:55;4702:693;;;;-1:-1:-1;4702:693:25;;;;5280:5;5332:3;5317:19;;5304:33;;-1:-1:-1;5384:3:25;5369:19;;;5356:33;;4702:693;-1:-1:-1;;4702:693:25:o;5400:260::-;5468:6;5476;5529:2;5517:9;5508:7;5504:23;5500:32;5497:52;;;5545:1;5542;5535:12;5497:52;5568:29;5587:9;5568:29;:::i;:::-;5558:39;;5616:38;5650:2;5639:9;5635:18;5616:38;:::i;5665:437::-;5744:1;5740:12;;;;5787;;;5808:61;;5862:4;5854:6;5850:17;5840:27;;5808:61;5915:2;5907:6;5904:14;5884:18;5881:38;5878:218;;-1:-1:-1;;;5949:1:25;5942:88;6053:4;6050:1;6043:15;6081:4;6078:1;6071:15;5878:218;;5665:437;;;:::o;7851:279::-;7916:9;;;7937:10;;;7934:190;;;-1:-1:-1;;;7977:1:25;7970:88;8081:4;8078:1;8071:15;8109:4;8106:1;8099:15;9357:184;-1:-1:-1;;;9406:1:25;9399:88;9506:4;9503:1;9496:15;9530:4;9527:1;9520:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HelixStakedICP.sol\":\"HelixStakedICP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/HelixStakedICP.sol\":{\"keccak256\":\"0x9358996d5c67edd41d00894f044ad6ec96d1b11559640c6f1a0845547f3ece11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6113a7b8fdaf638df89a8a15aeea14450c0920e00fd2c21fd4266badfd8a74f6\",\"dweb:/ipfs/Qmd3wPnYsnmtWYYkN7YirkH7vkYyQehkX165wSznSfTfiw\"]}},\"version\":1}"}}}}}